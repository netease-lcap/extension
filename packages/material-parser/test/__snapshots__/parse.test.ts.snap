// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`parse ant-design ts 1`] = `
{
  "components": [
    {
      "attrs": [
        {
          "description": "Triggered when the specified offset is reached from the top of the window",
          "name": "offsetTop",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Triggered when the specified offset is reached from the bottom of the window",
          "name": "offsetBottom",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Set the element that Affix needs to listen to its scroll event, the value is a function that returns the corresponding DOM element",
          "name": "target",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "Callback function triggered when fixed state changes",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Affix",
      "methods": [],
      "name": "Affix",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "Type of Alert styles, options:\`success\`, \`info\`, \`warning\`, \`error\`",
          "name": "type",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""info"",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "Whether Alert can be closed",
          "name": "closable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "Trigger when animation ending of Alert",
          "name": "afterClose",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Whether to show icon",
          "name": "showIcon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "https://www.w3.org/TR/2014/REC-html5-20141028/dom.html#aria-role-attribute",
          "name": "role",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "banner",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "Callback when close Alert",
          "name": "onClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Alert",
      "methods": [],
      "name": "Alert",
      "slots": [
        {
          "description": "@deprecated please use \`closable.closeIcon\` instead.",
          "name": "closeText",
          "params": [],
        },
        {
          "description": "Content of Alert",
          "name": "message",
          "params": [],
        },
        {
          "description": "Additional content of Alert",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "action",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "offsetTop",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "bounds",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "affix",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "showInkInFixed",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Return customize highlight anchor",
          "name": "getCurrentAnchor",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Scroll to target offset value, if none, it's offsetTop prop value or 0.",
          "name": "targetOffset",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "key",
                  "type": {
                    "isRequired": true,
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
                {
                  "name": "children",
                  "type": {
                    "type": "array",
                    "value": {
                      "type": "any",
                    },
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "replace",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "Listening event when scrolling change active link",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Anchor",
      "methods": [],
      "name": "Anchor",
      "slots": [
        {
          "description": "@deprecated Please use \`items\` instead.",
          "name": "children",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "component",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  "false",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "message",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "top",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "duration",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "prefixCls",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "getContainer",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "transitionName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "maxCount",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "rtl",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "notification",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "top",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "bottom",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "prefixCls",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "getContainer",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "placement",
                "type": {
                  "type": "union",
                  "value": [
                    ""top"",
                    ""topLeft"",
                    ""topRight"",
                    ""bottom"",
                    ""bottomLeft"",
                    ""bottomRight"",
                  ],
                },
              },
              {
                "name": "maxCount",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "rtl",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "stack",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "threshold",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "duration",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "showProgress",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "pauseOnHover",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "App",
      "methods": [],
      "name": "App",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "@deprecated Please use \`options\` instead",
          "name": "dataSource",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "any",
                },
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "boolean",
                },
                {
                  "type": "struct",
                  "value": [
                    {
                      "name": "value",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "text",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                  ],
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`popupClassName\` instead",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`popupMatchSelectWidth\` instead",
          "name": "dropdownMatchSelectWidth",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "popupMatchSelectWidth",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "searchValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoClearSearchValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "maxLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "choiceTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@private Internal usage. Do not use in your production.",
          "name": "getInputElement",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@private Internal usage. Do not use in your production.",
          "name": "getRawInputElement",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "maxTagTextLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "maxTagCount",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "union",
                "value": [
                  ""responsive"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tokenSeparators",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "clearIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dropdownStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownAlign",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""topLeft"",
              ""topRight"",
              ""bottomLeft"",
              ""bottomRight"",
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showAction",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                ""focus"",
                ""click"",
              ],
            },
          },
        },
        {
          "description": "",
          "name": "backfill",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "fieldNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "value",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "label",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "groupLabel",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "options",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Use \`searchValue\` instead",
          "name": "inputValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "In Select, \`false\` means do nothing.",
          "name": "filterOption",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "filterSort",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "optionFilterProp",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "optionRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "defaultActiveFirstOption",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "virtual",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "listHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "listItemHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "maxCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "@deprecated Use \`variant\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated \`showArrow\` is deprecated which will be removed in next major version. It will be a",
          "name": "showArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSearch",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClear",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDropdownVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInputKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDeselect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "AutoComplete",
      "methods": [],
      "name": "AutoComplete",
      "slots": [
        {
          "description": "",
          "name": "tagRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "label",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "value",
                      "propType": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "onClose",
                      "propType": {
                        "isRequired": true,
                        "params": [
                          {
                            "name": "event",
                            "propType": "object",
                          },
                        ],
                        "raw": "(event?: MouseEvent<HTMLElement, MouseEvent> | undefined) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "closable",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "isMaxTag",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "label",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "value",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onClose",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "closable",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isMaxTag",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "notFoundContent",
          "params": [],
        },
        {
          "description": "",
          "name": "placeholder",
          "params": [],
        },
        {
          "description": "",
          "name": "maxTagPlaceholder",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "omittedValues",
                "propType": {
                  "type": "arrayOf",
                  "value": {
                    "type": "shape",
                    "value": [
                      {
                        "name": "key",
                        "propType": {
                          "type": "oneOfType",
                          "value": [
                            "string",
                            "number",
                            "object",
                          ],
                        },
                      },
                      {
                        "name": "value",
                        "propType": {
                          "type": "oneOfType",
                          "value": [
                            "string",
                            "number",
                          ],
                        },
                      },
                      {
                        "name": "label",
                        "propType": "node",
                      },
                      {
                        "name": "title",
                        "propType": "node",
                      },
                      {
                        "name": "disabled",
                        "propType": "bool",
                      },
                    ],
                  },
                },
              },
              "type": {
                "type": "array",
                "value": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "key",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                    {
                      "name": "value",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                        ],
                      },
                    },
                    {
                      "name": "label",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "title",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                },
              },
            },
          ],
        },
        {
          "description": "",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "",
          "name": "suffixIcon",
          "params": [],
        },
        {
          "description": "Clear all icon",
          "name": "clearIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "Selector remove icon",
          "name": "removeIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "dropdownRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "menu",
                "propType": "element",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "labelRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "label",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "value",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                        ],
                      },
                    },
                    {
                      "name": "key",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "label",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "value",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "key",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "menuItemSelectedIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "Shape of avatar, options: \`circle\`, \`square\`",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""small"",
                  ""large"",
                  ""default"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "gap",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Srcset of image avatar",
          "name": "srcSet",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "draggable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "union",
                "value": [
                  "true",
                  "false",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "alt",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "crossOrigin",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "anonymous",
              "value": ""anonymous"",
            },
            {
              "label": "use-credentials",
              "value": ""use-credentials"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""anonymous"",
              ""use-credentials"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onError",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Avatar",
      "methods": [],
      "name": "Avatar",
      "slots": [
        {
          "description": "Src of image avatar",
          "name": "src",
          "params": [],
        },
        {
          "description": "Icon to be used in avatar",
          "name": "icon",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "visibilityHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "duration",
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "BackTop",
      "methods": [],
      "name": "BackTop",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "showZero",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Max count to show",
          "name": "overflowCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Whether to show red dot without number",
          "name": "dot",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "scrollNumberPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "processing",
              "value": ""processing"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""warning"",
              ""error"",
              ""default"",
              ""processing"",
            ],
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""blue"",
                  ""purple"",
                  ""cyan"",
                  ""green"",
                  ""magenta"",
                  ""pink"",
                  ""red"",
                  ""orange"",
                  ""yellow"",
                  ""volcano"",
                  ""geekblue"",
                  ""lime"",
                  ""gold"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "offset",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "indicator",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "indicator",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Badge",
      "methods": [],
      "name": "Badge",
      "slots": [
        {
          "description": "Number to show in badge",
          "name": "count",
          "params": [],
        },
        {
          "description": "",
          "name": "text",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "params",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`items\` instead",
          "name": "routes",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "itemRender",
          "type": {
            "type": "function",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Breadcrumb",
      "methods": [],
      "name": "Breadcrumb",
      "slots": [
        {
          "description": "",
          "name": "separator",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "href",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "htmlType",
          "options": [
            {
              "label": "submit",
              "value": ""submit"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "reset",
              "value": ""reset"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""submit"",
              ""button"",
              ""reset"",
            ],
          },
        },
        {
          "description": "",
          "name": "autoInsertSpace",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "link",
              "value": ""link"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "dashed",
              "value": ""dashed"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""link"",
              ""text"",
              ""default"",
              ""primary"",
              ""dashed"",
            ],
          },
        },
        {
          "description": "",
          "name": "color",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "blue",
              "value": ""blue"",
            },
            {
              "label": "purple",
              "value": ""purple"",
            },
            {
              "label": "cyan",
              "value": ""cyan"",
            },
            {
              "label": "green",
              "value": ""green"",
            },
            {
              "label": "magenta",
              "value": ""magenta"",
            },
            {
              "label": "pink",
              "value": ""pink"",
            },
            {
              "label": "red",
              "value": ""red"",
            },
            {
              "label": "orange",
              "value": ""orange"",
            },
            {
              "label": "yellow",
              "value": ""yellow"",
            },
            {
              "label": "volcano",
              "value": ""volcano"",
            },
            {
              "label": "geekblue",
              "value": ""geekblue"",
            },
            {
              "label": "lime",
              "value": ""lime"",
            },
            {
              "label": "gold",
              "value": ""gold"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""blue"",
              ""purple"",
              ""cyan"",
              ""green"",
              ""magenta"",
              ""pink"",
              ""red"",
              ""orange"",
              ""yellow"",
              ""volcano"",
              ""geekblue"",
              ""lime"",
              ""gold"",
              ""primary"",
              ""danger"",
            ],
          },
        },
        {
          "description": "",
          "name": "variant",
          "options": [
            {
              "label": "link",
              "value": ""link"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
            {
              "label": "dashed",
              "value": ""dashed"",
            },
            {
              "label": "solid",
              "value": ""solid"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""link"",
              ""text"",
              ""outlined"",
              ""filled"",
              ""dashed"",
              ""solid"",
            ],
          },
        },
        {
          "description": "",
          "name": "iconPosition",
          "options": [
            {
              "label": "start",
              "value": ""start"",
            },
            {
              "label": "end",
              "value": ""end"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""start"",
              ""end"",
            ],
          },
        },
        {
          "description": "",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "round",
              "value": ""round"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""default"",
              ""round"",
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "delay",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "ghost",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "danger",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "block",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "icon",
                "type": {
                  "isRequired": true,
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "icon",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Button",
      "methods": [],
      "name": "Button",
      "slots": [
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "validRange",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabledDate",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use fullCellRender instead.",
          "name": "dateFullCellRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use cellRender instead.",
          "name": "dateCellRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use fullCellRender instead.",
          "name": "monthFullCellRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use cellRender instead.",
          "name": "monthCellRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "cellRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "fullCellRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "headerRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "__constructor",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "clone",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "isValid",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "year",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "month",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "date",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "day",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "hour",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "minute",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "second",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "millisecond",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "set",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "get",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "add",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "subtract",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "startOf",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "endOf",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "format",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "diff",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "valueOf",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "unix",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "daysInMonth",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "toDate",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "toJSON",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "toISOString",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "toString",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "utcOffset",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "isBefore",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "isSame",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "isAfter",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "locale",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "__constructor",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "clone",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "isValid",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "year",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "month",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "date",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "day",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "hour",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "minute",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "second",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "millisecond",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "set",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "get",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "add",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "subtract",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "startOf",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "endOf",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "format",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "diff",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "valueOf",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "unix",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "daysInMonth",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "toDate",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "toJSON",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "toISOString",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "toString",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "utcOffset",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "isBefore",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "isSame",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "isAfter",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "locale",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "mode",
          "options": [
            {
              "label": "month",
              "value": ""month"",
            },
            {
              "label": "year",
              "value": ""year"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""month"",
              ""year"",
            ],
          },
        },
        {
          "description": "",
          "name": "fullscreen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showWeek",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPanelChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Calendar",
      "methods": [],
      "name": "Calendar",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`styles.header\` instead",
          "name": "headStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.body\` instead",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "hoverable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "actions",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "tabList",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "key",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "tab",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "label",
                  "type": {
                    "type": "any",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "activeTabKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultActiveTabKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tabProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "rootClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "type",
                "type": {
                  "type": "union",
                  "value": [
                    ""line"",
                    ""card"",
                    ""editable-card"",
                  ],
                },
              },
              {
                "name": "size",
                "type": {
                  "type": "union",
                  "value": [
                    ""small"",
                    ""middle"",
                    ""large"",
                  ],
                },
              },
              {
                "name": "hideAdd",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "centered",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "addIcon",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "moreIcon",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "more",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "removeIcon",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onEdit",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "indicatorSize",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "extra",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "title",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "actions",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "cover",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "extra",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "title",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "actions",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "cover",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onTabChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Card",
      "methods": [],
      "name": "Card",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
        {
          "description": "",
          "name": "cover",
          "params": [],
        },
        {
          "description": "",
          "name": "tabBarExtraContent",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "effect",
          "options": [
            {
              "label": "fade",
              "value": ""fade"",
            },
            {
              "label": "scrollx",
              "value": ""scrollx"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""fade"",
              ""scrollx"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "slickGoTo",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "dotPosition",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "dots",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "waitForAnimate",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "vertical",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rtl",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "responsive",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "breakpoint",
                  "type": {
                    "isRequired": true,
                    "type": "number",
                  },
                },
                {
                  "name": "settings",
                  "type": {
                    "isRequired": true,
                    "type": "union",
                    "value": [
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "accessibility",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "adaptiveHeight",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "afterChange",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "appendDots",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "arrows",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "asNavFor",
                            "type": {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "innerSlider",
                                  "type": {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "list",
                                        "type": {
                                          "type": "any",
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "slickNext",
                                  "type": {
                                    "isRequired": true,
                                    "type": "function",
                                  },
                                },
                                {
                                  "name": "slickPause",
                                  "type": {
                                    "isRequired": true,
                                    "type": "function",
                                  },
                                },
                                {
                                  "name": "slickPlay",
                                  "type": {
                                    "isRequired": true,
                                    "type": "function",
                                  },
                                },
                                {
                                  "name": "slickPrev",
                                  "type": {
                                    "isRequired": true,
                                    "type": "function",
                                  },
                                },
                                {
                                  "name": "slickGoTo",
                                  "type": {
                                    "isRequired": true,
                                    "type": "function",
                                  },
                                },
                              ],
                            },
                          },
                          {
                            "name": "autoplaySpeed",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "autoplay",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "beforeChange",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "centerMode",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "centerPadding",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "children",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "className",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "cssEase",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "customPaging",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "dotsClass",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "dots",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "draggable",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "easing",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "edgeFriction",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "fade",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "focusOnSelect",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "infinite",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "initialSlide",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "lazyLoad",
                            "type": {
                              "type": "union",
                              "value": [
                                ""ondemand"",
                                ""progressive"",
                                ""anticipated"",
                              ],
                            },
                          },
                          {
                            "name": "nextArrow",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "onEdge",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "onInit",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "onLazyLoad",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "onReInit",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "onSwipe",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "pauseOnDotsHover",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "pauseOnFocus",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "pauseOnHover",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "prevArrow",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "responsive",
                            "type": {
                              "type": "array",
                              "value": {
                                "type": "any",
                              },
                            },
                          },
                          {
                            "name": "rows",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "rtl",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "slide",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "slidesPerRow",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "slidesToScroll",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "slidesToShow",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "speed",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "swipeToSlide",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "swipe",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "swipeEvent",
                            "type": {
                              "type": "function",
                            },
                          },
                          {
                            "name": "touchMove",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "touchThreshold",
                            "type": {
                              "type": "number",
                            },
                          },
                          {
                            "name": "useCSS",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "useTransform",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "variableWidth",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "vertical",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "verticalSwiping",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "waitForAnimate",
                            "type": {
                              "type": "boolean",
                            },
                          },
                        ],
                      },
                      {
                        "type": "union",
                        "value": [
                          ""unslick"",
                        ],
                      },
                    ],
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "draggable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "accessibility",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "adaptiveHeight",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "afterChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "arrows",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "asNavFor",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "innerSlider",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "list",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "slickNext",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "slickPause",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "slickPlay",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "slickPrev",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "slickGoTo",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoplaySpeed",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "autoplay",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "beforeChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "centerMode",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "centerPadding",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "cssEase",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "easing",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "edgeFriction",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "fade",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "focusOnSelect",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "infinite",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "initialSlide",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "lazyLoad",
          "options": [
            {
              "label": "ondemand",
              "value": ""ondemand"",
            },
            {
              "label": "progressive",
              "value": ""progressive"",
            },
            {
              "label": "anticipated",
              "value": ""anticipated"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ondemand"",
              ""progressive"",
              ""anticipated"",
            ],
          },
        },
        {
          "description": "",
          "name": "nextArrow",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "pauseOnDotsHover",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "pauseOnFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "pauseOnHover",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prevArrow",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "rows",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "slide",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "slidesPerRow",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "slidesToScroll",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "slidesToShow",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "speed",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "swipeToSlide",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "swipe",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "swipeEvent",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "touchMove",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "touchThreshold",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "useCSS",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "useTransform",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "variableWidth",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "verticalSwiping",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onEdge",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLazyLoad",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onReInit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSwipe",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Carousel",
      "methods": [],
      "name": "Carousel",
      "slots": [
        {
          "description": "",
          "name": "appendDots",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "dots",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "customPaging",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "index",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "@deprecated \`showArrow\` is deprecated which will be removed in next major version. It will be a",
          "name": "showArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Use \`variant\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""topLeft"",
              ""topRight"",
              ""bottomLeft"",
              ""bottomRight"",
            ],
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "autoClearSearchValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`popupClassName\` instead",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "searchValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "filter",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "render",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "sort",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "matchInputWidth",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "limit",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "union",
                          "value": [
                            "false",
                          ],
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "maxLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "choiceTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@private Internal usage. Do not use in your production.",
          "name": "getInputElement",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@private Internal usage. Do not use in your production.",
          "name": "getRawInputElement",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "maxTagTextLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "maxTagCount",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "union",
                "value": [
                  ""responsive"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "clearIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dropdownStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownMatchSelectWidth",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "dropdownAlign",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showAction",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                ""focus"",
                ""click"",
              ],
            },
          },
        },
        {
          "description": "",
          "name": "fieldNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "label",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "value",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "optionRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "any",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "array",
                  "value": {
                    "type": "any",
                  },
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "any",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "array",
                  "value": {
                    "type": "any",
                  },
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "changeOnSelect",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "displayRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showCheckedStrategy",
          "options": [
            {
              "label": "SHOW_PARENT",
              "value": ""SHOW_PARENT"",
            },
            {
              "label": "SHOW_CHILD",
              "value": ""SHOW_CHILD"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""SHOW_PARENT"",
              ""SHOW_CHILD"",
            ],
          },
        },
        {
          "description": "",
          "name": "expandTrigger",
          "options": [
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""click"",
              ""hover"",
            ],
          },
        },
        {
          "description": "@private Internal usage. Do not use in your production.",
          "name": "dropdownPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loadData",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Use \`open\` instead",
          "name": "popupVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dropdownMenuColumnStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Use \`placement\` instead",
          "name": "popupPlacement",
          "options": [
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""topLeft"",
              ""topRight"",
              ""bottomLeft"",
              ""bottomRight"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSearch",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClear",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDropdownVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInputKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onDropdownVisibleChange\` instead",
          "name": "onPopupVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Cascader",
      "methods": [],
      "name": "Cascader",
      "slots": [
        {
          "description": "",
          "name": "suffixIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "tagRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "label",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "value",
                      "propType": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "onClose",
                      "propType": {
                        "isRequired": true,
                        "params": [
                          {
                            "name": "event",
                            "propType": "object",
                          },
                        ],
                        "raw": "(event?: MouseEvent<HTMLElement, MouseEvent> | undefined) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "closable",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "isMaxTag",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "label",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "value",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onClose",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "closable",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isMaxTag",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "notFoundContent",
          "params": [],
        },
        {
          "description": "",
          "name": "placeholder",
          "params": [],
        },
        {
          "description": "",
          "name": "maxTagPlaceholder",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "omittedValues",
                "propType": {
                  "type": "arrayOf",
                  "value": {
                    "type": "shape",
                    "value": [
                      {
                        "name": "key",
                        "propType": {
                          "type": "oneOfType",
                          "value": [
                            "string",
                            "number",
                            "object",
                          ],
                        },
                      },
                      {
                        "name": "value",
                        "propType": {
                          "type": "oneOfType",
                          "value": [
                            "string",
                            "number",
                          ],
                        },
                      },
                      {
                        "name": "label",
                        "propType": "node",
                      },
                      {
                        "name": "title",
                        "propType": "node",
                      },
                      {
                        "name": "disabled",
                        "propType": "bool",
                      },
                    ],
                  },
                },
              },
              "type": {
                "type": "array",
                "value": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "key",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                    {
                      "name": "value",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                        ],
                      },
                    },
                    {
                      "name": "label",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "title",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                },
              },
            },
          ],
        },
        {
          "description": "",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "Clear all icon",
          "name": "clearIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "Selector remove icon",
          "name": "removeIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "dropdownRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "menu",
                "propType": "element",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "expandIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "loadingIcon",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "indeterminate",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultChecked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "skipGroup",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "required",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyPress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Checkbox",
      "methods": [],
      "name": "Checkbox",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "flex",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""none"",
                  ""auto"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "span",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "order",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "offset",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "push",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "pull",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "xxl",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "flex",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""none"",
                            ""auto"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "span",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "order",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "xl",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "flex",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""none"",
                            ""auto"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "span",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "order",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "lg",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "flex",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""none"",
                            ""auto"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "span",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "order",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "md",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "flex",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""none"",
                            ""auto"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "span",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "order",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "sm",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "flex",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""none"",
                            ""auto"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "span",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "order",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "xs",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "flex",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""none"",
                            ""auto"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "span",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "order",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Col",
      "methods": [],
      "name": "Col",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "activeKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultActiveKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "手风琴效果",
          "name": "accordion",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "destroyInactivePanel",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "expandIconPosition",
          "options": [
            {
              "label": "start",
              "value": ""start"",
            },
            {
              "label": "end",
              "value": ""end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""start"",
              ""end"",
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "ghost",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "collapsible",
          "options": [
            {
              "label": "icon",
              "value": ""icon"",
            },
            {
              "label": "disabled",
              "value": ""disabled"",
            },
            {
              "label": "header",
              "value": ""header"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""icon"",
              ""disabled"",
              ""header"",
            ],
          },
        },
        {
          "description": "Collapse items content",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "key",
                  "type": {
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
                {
                  "name": "label",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "ref",
                  "type": {
                    "type": "any",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Collapse",
      "methods": [],
      "name": "Collapse",
      "slots": [
        {
          "description": "",
          "name": "expandIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "panelProps",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "isActive",
                      "propType": "bool",
                    },
                    {
                      "name": "header",
                      "propType": "node",
                    },
                    {
                      "name": "className",
                      "propType": "string",
                    },
                    {
                      "name": "style",
                      "propType": "object",
                    },
                    {
                      "name": "showArrow",
                      "propType": "bool",
                    },
                    {
                      "name": "forceRender",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "extra",
                      "propType": "node",
                    },
                    {
                      "name": "collapsible",
                      "propType": {
                        "type": "oneOf",
                        "value": [
                          "icon",
                          "disabled",
                          "header",
                        ],
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "isActive",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "header",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "showArrow",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "forceRender",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "extra",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "collapsible",
                    "type": {
                      "type": "union",
                      "value": [
                        ""icon"",
                        ""disabled"",
                        ""header"",
                      ],
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "@deprecated use \`items\` instead",
          "name": "children",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mode",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    ""single"",
                    ""gradient"",
                  ],
                },
              },
              {
                "type": "union",
                "value": [
                  ""single"",
                  ""gradient"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "metaColor",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "colors",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "cleared",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "__constructor",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "toHsb",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHsbString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHex",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHexString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toRgb",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toRgbString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "isGradient",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "getColors",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toCssString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "equals",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                ],
              },
              {
                "type": "array",
                "value": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "color",
                      "type": {
                        "isRequired": true,
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "struct",
                            "value": [
                              {
                                "name": "metaColor",
                                "type": {
                                  "isRequired": true,
                                  "type": "any",
                                },
                              },
                              {
                                "name": "colors",
                                "type": {
                                  "isRequired": true,
                                  "type": "any",
                                },
                              },
                              {
                                "name": "cleared",
                                "type": {
                                  "isRequired": true,
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "__constructor",
                                "type": {
                                  "isRequired": true,
                                  "type": "any",
                                },
                              },
                              {
                                "name": "toHsb",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toHsbString",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toHex",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toHexString",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toRgb",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toRgbString",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "isGradient",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "getColors",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toCssString",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "equals",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                            ],
                          },
                        ],
                      },
                    },
                    {
                      "name": "percent",
                      "type": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "metaColor",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "colors",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "cleared",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "__constructor",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "toHsb",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHsbString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHex",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHexString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toRgb",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toRgbString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "isGradient",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "getColors",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toCssString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "equals",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                ],
              },
              {
                "type": "array",
                "value": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "color",
                      "type": {
                        "isRequired": true,
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "struct",
                            "value": [
                              {
                                "name": "metaColor",
                                "type": {
                                  "isRequired": true,
                                  "type": "any",
                                },
                              },
                              {
                                "name": "colors",
                                "type": {
                                  "isRequired": true,
                                  "type": "any",
                                },
                              },
                              {
                                "name": "cleared",
                                "type": {
                                  "isRequired": true,
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "__constructor",
                                "type": {
                                  "isRequired": true,
                                  "type": "any",
                                },
                              },
                              {
                                "name": "toHsb",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toHsbString",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toHex",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toHexString",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toRgb",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toRgbString",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "isGradient",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "getColors",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "toCssString",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                              {
                                "name": "equals",
                                "type": {
                                  "isRequired": true,
                                  "type": "function",
                                },
                              },
                            ],
                          },
                        ],
                      },
                    },
                    {
                      "name": "percent",
                      "type": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
            ],
          },
        },
        {
          "description": "",
          "name": "trigger",
          "options": [
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""click"",
              ""hover"",
            ],
          },
        },
        {
          "description": "",
          "name": "format",
          "options": [
            {
              "label": "hex",
              "value": ""hex"",
            },
            {
              "label": "rgb",
              "value": ""rgb"",
            },
            {
              "label": "hsb",
              "value": ""hsb"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""hex"",
              ""rgb"",
              ""hsb"",
            ],
          },
        },
        {
          "description": "",
          "name": "defaultFormat",
          "options": [
            {
              "label": "hex",
              "value": ""hex"",
            },
            {
              "label": "rgb",
              "value": ""rgb"",
            },
            {
              "label": "hsb",
              "value": ""hsb"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""hex"",
              ""rgb"",
              ""hsb"",
            ],
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "presets",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "label",
                  "type": {
                    "isRequired": true,
                    "type": "any",
                  },
                },
                {
                  "name": "colors",
                  "type": {
                    "isRequired": true,
                    "type": "array",
                    "value": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "metaColor",
                              "type": {
                                "isRequired": true,
                                "type": "any",
                              },
                            },
                            {
                              "name": "colors",
                              "type": {
                                "isRequired": true,
                                "type": "any",
                              },
                            },
                            {
                              "name": "cleared",
                              "type": {
                                "isRequired": true,
                                "type": "boolean",
                              },
                            },
                            {
                              "name": "__constructor",
                              "type": {
                                "isRequired": true,
                                "type": "any",
                              },
                            },
                            {
                              "name": "toHsb",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "toHsbString",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "toHex",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "toHexString",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "toRgb",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "toRgbString",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "isGradient",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "getColors",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "toCssString",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                            {
                              "name": "equals",
                              "type": {
                                "isRequired": true,
                                "type": "function",
                              },
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
                {
                  "name": "defaultOpen",
                  "type": {
                    "type": "boolean",
                  },
                },
                {
                  "name": "key",
                  "type": {
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "popup",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "popupOverlayInner",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabledAlpha",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabledFormat",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "keepParent",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFormatChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClear",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChangeComplete",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "ColorPicker",
      "methods": [],
      "name": "ColorPicker",
      "slots": [
        {
          "description": "",
          "name": "panelRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "panel",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "extra",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "components",
                      "propType": {
                        "isRequired": true,
                        "type": "shape",
                        "value": [
                          {
                            "name": "Picker",
                            "propType": {
                              "isRequired": true,
                              "type": "object",
                            },
                          },
                          {
                            "name": "Presets",
                            "propType": {
                              "isRequired": true,
                              "type": "object",
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "components",
                    "type": {
                      "isRequired": true,
                      "type": "struct",
                      "value": [
                        {
                          "name": "Picker",
                          "type": {
                            "isRequired": true,
                            "type": "any",
                          },
                        },
                        {
                          "name": "Presets",
                          "type": {
                            "isRequired": true,
                            "type": "any",
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "showText",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "color",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "metaColor",
                      "propType": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "colors",
                      "propType": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "cleared",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "__constructor",
                      "propType": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "toHsb",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => { b: number; a: number; h: number; s: number; }",
                        "type": "func",
                      },
                    },
                    {
                      "name": "toHsbString",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => string",
                        "type": "func",
                      },
                    },
                    {
                      "name": "toHex",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => string",
                        "type": "func",
                      },
                    },
                    {
                      "name": "toHexString",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => string",
                        "type": "func",
                      },
                    },
                    {
                      "name": "toRgb",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => RGB",
                        "type": "func",
                      },
                    },
                    {
                      "name": "toRgbString",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => string",
                        "type": "func",
                      },
                    },
                    {
                      "name": "isGradient",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => boolean",
                        "type": "func",
                      },
                    },
                    {
                      "name": "getColors",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => GradientColor",
                        "type": "func",
                      },
                    },
                    {
                      "name": "toCssString",
                      "propType": {
                        "isRequired": true,
                        "raw": "() => string",
                        "type": "func",
                      },
                    },
                    {
                      "name": "equals",
                      "propType": {
                        "isRequired": true,
                        "params": [
                          {
                            "name": "color",
                            "propType": {
                              "type": "oneOfType",
                              "value": [
                                "null",
                                "object",
                              ],
                            },
                          },
                        ],
                        "raw": "(color: AggregationColor | null) => boolean",
                        "returns": {
                          "propType": "bool",
                        },
                        "type": "func",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "metaColor",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "colors",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "cleared",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "__constructor",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "toHsb",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHsbString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHex",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toHexString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toRgb",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toRgbString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "isGradient",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "getColors",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "toCssString",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "equals",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "getTargetContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "iconPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "csp",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "nonce",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`{ button: { autoInsertSpace: boolean }}\` instead",
          "name": "autoInsertSpaceInButton",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "",
          "name": "form",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "input",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "inputNumber",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "textArea",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "select",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "pagination",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@descCN 语言包配置，语言包可到 \`antd/locale\` 目录下寻找。",
          "name": "locale",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "locale",
                "type": {
                  "isRequired": true,
                  "type": "string",
                },
              },
              {
                "name": "Pagination",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "items_per_page",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "jump_to",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "jump_to_confirm",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "page",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "prev_page",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "next_page",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "prev_5",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "next_5",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "prev_3",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "next_3",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "page_size",
                      "type": {
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "DatePicker",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "TimePicker",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "Calendar",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "Table",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "filterTitle",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "filterConfirm",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "filterReset",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "filterEmptyText",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "filterCheckall",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "filterSearchPlaceholder",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "emptyText",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "function",
                          },
                        ],
                      },
                    },
                    {
                      "name": "selectAll",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "selectNone",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "selectInvert",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "selectionAll",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "sortTitle",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "expand",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "collapse",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "triggerDesc",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "triggerAsc",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "cancelSort",
                      "type": {
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "Modal",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "okText",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "cancelText",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "justOkText",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "Tour",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "Next",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "Previous",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "Finish",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "Popconfirm",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "okText",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "cancelText",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "Transfer",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "titles",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "any",
                        },
                      },
                    },
                    {
                      "name": "notFoundContent",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "array",
                            "value": {
                              "type": "any",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "searchPlaceholder",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "itemUnit",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "itemsUnit",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "remove",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "selectAll",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "deselectAll",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "selectCurrent",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "selectInvert",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "removeAll",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "removeCurrent",
                      "type": {
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "Select",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "Upload",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "uploading",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "removeFile",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "downloadFile",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "uploadError",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "previewFile",
                      "type": {
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "Empty",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "description",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "global",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "Icon",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "Text",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "edit",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "copy",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "copied",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "expand",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "collapse",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "Form",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "optional",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "defaultValidateMessages",
                      "type": {
                        "isRequired": true,
                        "type": "struct",
                        "value": [
                          {
                            "name": "default",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "function",
                                },
                              ],
                            },
                          },
                          {
                            "name": "required",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "function",
                                },
                              ],
                            },
                          },
                          {
                            "name": "enum",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "function",
                                },
                              ],
                            },
                          },
                          {
                            "name": "whitespace",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "function",
                                },
                              ],
                            },
                          },
                          {
                            "name": "date",
                            "type": {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "format",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "parse",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "invalid",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                          {
                            "name": "types",
                            "type": {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "string",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "method",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "array",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "object",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "number",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "date",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "boolean",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "integer",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "float",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "regexp",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "email",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "url",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "hex",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                          {
                            "name": "string",
                            "type": {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "len",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "min",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "max",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "range",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                          {
                            "name": "number",
                            "type": {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "len",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "min",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "max",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "range",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                          {
                            "name": "array",
                            "type": {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "len",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "min",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "max",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "range",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                          {
                            "name": "pattern",
                            "type": {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "mismatch",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "Image",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "preview",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "QRCode",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "expired",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "refresh",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "scanned",
                      "type": {
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "ColorPicker",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "presetEmpty",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "transparent",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "singleColor",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "gradientColor",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "componentSize",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "componentDisabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""ltr"",
          "description": "@descCN 设置布局展示方向。",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "space",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "splitter",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "@descCN 设置 \`false\` 时关闭虚拟滚动。",
          "name": "virtual",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`popupMatchSelectWidth\` instead",
          "name": "dropdownMatchSelectWidth",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "popupMatchSelectWidth",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "popupOverflow",
          "options": [
            {
              "label": "scroll",
              "value": ""scroll"",
            },
            {
              "label": "viewport",
              "value": ""viewport"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""scroll"",
              ""viewport"",
            ],
          },
        },
        {
          "description": "",
          "name": "theme",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "token",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "components",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "algorithm",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "function",
                    },
                    {
                      "type": "array",
                      "value": {
                        "type": "function",
                      },
                    },
                  ],
                },
              },
              {
                "name": "inherit",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "hashed",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "cssVar",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "prefix",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "key",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "warning",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "strict",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "alert",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "anchor",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "button",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "calendar",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "carousel",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "cascader",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "treeSelect",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "collapse",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "divider",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "drawer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "typography",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "skeleton",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "spin",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "segmented",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "statistic",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "steps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "image",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "preview",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "layout",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "list",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "item",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "mentions",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "modal",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "progress",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "result",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "slider",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "breadcrumb",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "menu",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "floatButtonGroup",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "checkbox",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "descriptions",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "empty",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "badge",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "radio",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "rate",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "switch",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "transfer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "avatar",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "message",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tag",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "table",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "expandable",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "expandIcon",
                      "type": {
                        "type": "function",
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "card",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabs",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "timeline",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "timePicker",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "upload",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "notification",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tree",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "colorPicker",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "datePicker",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "rangePicker",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdown",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "flex",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Wave is special component which only patch on the effect of component interaction.",
          "name": "wave",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "disabled",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "showEffect",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tour",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tooltip",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "popover",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "popconfirm",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "ConfigProvider",
      "methods": [],
      "name": "ConfigProvider",
      "slots": [
        {
          "description": "",
          "name": "renderEmpty",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "componentName",
                "propType": {
                  "type": "oneOf",
                  "value": [
                    "Table",
                    "Table.filter",
                    "List",
                    "Select",
                    "TreeSelect",
                    "Cascader",
                    "Transfer",
                    "Mentions",
                  ],
                },
              },
              "type": {
                "type": "union",
                "value": [
                  ""Table"",
                  ""Table.filter"",
                  ""List"",
                  ""Select"",
                  ""TreeSelect"",
                  ""Cascader"",
                  ""Transfer"",
                  ""Mentions"",
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOk",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "DatePicker",
      "methods": [],
      "name": "DatePicker",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "column",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "layout",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "colon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "labelStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "contentStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "header",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "title",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "extra",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "label",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "content",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "header",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "title",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "extra",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "label",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "content",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "span",
                  "type": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                      {
                        "type": "union",
                        "value": [
                          ""filled"",
                        ],
                      },
                    ],
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Descriptions",
      "methods": [],
      "name": "Descriptions",
      "slots": [
        {
          "description": "@deprecated use \`items\` instead",
          "name": "children",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "orientation",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""right"",
              ""center"",
            ],
          },
        },
        {
          "description": "",
          "name": "orientationMargin",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dashed",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""solid"",
          "description": "@since 5.20.0",
          "name": "variant",
          "options": [
            {
              "label": "dashed",
              "value": ""dashed"",
            },
            {
              "label": "solid",
              "value": ""solid"",
            },
            {
              "label": "dotted",
              "value": ""dotted"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""dashed"",
              ""solid"",
              ""dotted"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "plain",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Divider",
      "methods": [],
      "name": "Divider",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "afterOpenChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`afterOpenChange\` instead",
          "name": "afterVisibleChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "footer",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "footer",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "push",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "distance",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "motion",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "struct",
                "value": [
                  {
                    "name": "motionName",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "appear",
                              "type": {
                                "type": "string",
                              },
                            },
                            {
                              "name": "enter",
                              "type": {
                                "type": "string",
                              },
                            },
                            {
                              "name": "leave",
                              "type": {
                                "type": "string",
                              },
                            },
                            {
                              "name": "appearActive",
                              "type": {
                                "type": "string",
                              },
                            },
                            {
                              "name": "enterActive",
                              "type": {
                                "type": "string",
                              },
                            },
                            {
                              "name": "leaveActive",
                              "type": {
                                "type": "string",
                              },
                            },
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "visible",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "motionAppear",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "motionEnter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "motionLeave",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "motionLeaveImmediately",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "motionDeadline",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "forceRender",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "removeOnLeave",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "leavedClassName",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "eventProps",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "onAppearPrepare",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEnterPrepare",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onLeavePrepare",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onAppearStart",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEnterStart",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onLeaveStart",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onAppearActive",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEnterActive",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onLeaveActive",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onAppearEnd",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEnterEnd",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onLeaveEnd",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onVisibleChanged",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "internalRef",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rootStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "width",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "mask",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "maskClosable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "maskClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "maskMotion",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "motionName",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "appear",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enter",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leave",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "appearActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enterActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leaveActive",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "visible",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionAppear",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionEnter",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeaveImmediately",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionDeadline",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "forceRender",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "removeOnLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "leavedClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "eventProps",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onAppearPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeavePrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onVisibleChanged",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "internalRef",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyOnClose",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getContainer",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "function",
              },
              {
                "type": "union",
                "value": [
                  "false",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "panelRef",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "Recommend to use closeIcon instead",
          "name": "closable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`styles.body\` instead",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.mask\` instead",
          "name": "maskStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.header\` instead",
          "name": "headerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.footer\` instead",
          "name": "footerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.wrapper\` instead",
          "name": "contentWrapperStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.content\` instead",
          "name": "drawerStyle",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Drawer",
      "methods": [],
      "name": "Drawer",
      "slots": [
        {
          "description": "",
          "name": "drawerRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "node",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
        {
          "description": "",
          "name": "footer",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "menu",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "theme",
                "type": {
                  "type": "union",
                  "value": [
                    ""light"",
                    ""dark"",
                  ],
                },
              },
              {
                "name": "inlineIndent",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "_internalDisableMenuItemTitleTooltip",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "items",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "any",
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "dashed",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "key",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "any",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "danger",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "icon",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "title",
                            "type": {
                              "type": "string",
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "icon",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "theme",
                            "type": {
                              "type": "union",
                              "value": [
                                ""light"",
                                ""dark"",
                              ],
                            },
                          },
                          {
                            "name": "children",
                            "type": {
                              "isRequired": true,
                              "type": "array",
                              "value": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "dashed",
                                        "type": {
                                          "type": "boolean",
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "children",
                                        "type": {
                                          "type": "array",
                                          "value": {
                                            "type": "union",
                                            "value": [
                                              {
                                                "type": "any",
                                              },
                                              {
                                                "type": "struct",
                                                "value": [
                                                  {
                                                    "name": "dashed",
                                                    "type": {
                                                      "type": "boolean",
                                                    },
                                                  },
                                                  {
                                                    "name": "key",
                                                    "type": {
                                                      "type": "union",
                                                      "value": [
                                                        {
                                                          "type": "string",
                                                        },
                                                        {
                                                          "type": "number",
                                                        },
                                                        {
                                                          "type": "any",
                                                        },
                                                      ],
                                                    },
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "children",
                            "type": {
                              "type": "array",
                              "value": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "dashed",
                                        "type": {
                                          "type": "boolean",
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "icon",
                                        "type": {
                                          "type": "any",
                                        },
                                      },
                                      {
                                        "name": "theme",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            ""light"",
                                            ""dark"",
                                          ],
                                        },
                                      },
                                      {
                                        "name": "children",
                                        "type": {
                                          "isRequired": true,
                                          "type": "array",
                                          "value": {
                                            "type": "union",
                                            "value": [
                                              {
                                                "type": "any",
                                              },
                                              {
                                                "type": "struct",
                                                "value": [
                                                  {
                                                    "name": "dashed",
                                                    "type": {
                                                      "type": "boolean",
                                                    },
                                                  },
                                                  {
                                                    "name": "key",
                                                    "type": {
                                                      "type": "union",
                                                      "value": [
                                                        {
                                                          "type": "string",
                                                        },
                                                        {
                                                          "type": "number",
                                                        },
                                                        {
                                                          "type": "any",
                                                        },
                                                      ],
                                                    },
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          {
                            "name": "key",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "any",
                                },
                              ],
                            },
                          },
                        ],
                      },
                    ],
                  },
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                ""click"",
                ""hover"",
                ""contextMenu"",
              ],
            },
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "destroyPopupOnHide",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "topCenter",
              "value": ""topCenter"",
            },
            {
              "label": "bottomCenter",
              "value": ""bottomCenter"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""topCenter"",
              ""bottomCenter"",
            ],
          },
        },
        {
          "description": "",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onOpenChange\` instead",
          "name": "onVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Dropdown",
      "methods": [],
      "name": "Dropdown",
      "slots": [
        {
          "description": "",
          "name": "dropdownRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "originNode",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`menu\` instead",
          "name": "overlay",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ image: {} }}\` instead",
          "name": "imageStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Empty",
      "methods": [],
      "name": "Empty",
      "slots": [
        {
          "description": "",
          "name": "image",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "vertical",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "wrap",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "union",
                "value": [
                  ""wrap"",
                  ""-moz-initial"",
                  ""inherit"",
                  ""initial"",
                  ""revert"",
                  ""revert-layer"",
                  ""unset"",
                  ""nowrap"",
                  ""wrap-reverse"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "justify",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""start"",
                  ""end"",
                  ""left"",
                  ""right"",
                  ""center"",
                  ""-moz-initial"",
                  ""inherit"",
                  ""initial"",
                  ""revert"",
                  ""revert-layer"",
                  ""unset"",
                  ""space-around"",
                  ""space-between"",
                  ""space-evenly"",
                  ""stretch"",
                  ""flex-end"",
                  ""flex-start"",
                  ""normal"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""start"",
                  ""end"",
                  ""center"",
                  ""-moz-initial"",
                  ""inherit"",
                  ""initial"",
                  ""revert"",
                  ""revert-layer"",
                  ""unset"",
                  ""stretch"",
                  ""flex-end"",
                  ""flex-start"",
                  ""normal"",
                  ""self-end"",
                  ""self-start"",
                  ""baseline"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "flex",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "gap",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "component",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Flex",
      "methods": [],
      "name": "Flex",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""primary"",
            ],
          },
        },
        {
          "description": "",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
        {
          "description": "",
          "name": "href",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "badge",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""button"",
          "description": "@since 5.21.0",
          "name": "htmlType",
          "options": [
            {
              "label": "submit",
              "value": ""submit"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "reset",
              "value": ""reset"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""submit"",
              ""button"",
              ""reset"",
            ],
          },
        },
        {
          "description": "",
          "name": "dangerouslySetInnerHTML",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "__html",
                "type": {
                  "isRequired": true,
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onCopy",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCopyCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPaste",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPasteCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionUpdate",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionUpdateCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocusCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlurCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeInputCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInputCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onReset",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResetCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSubmit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSubmitCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInvalid",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInvalidCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoad",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onError",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onErrorCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onKeyUp\` or \`onKeyDown\` instead",
          "name": "onKeyPress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onKeyUpCapture\` or \`onKeyDownCapture\` instead",
          "name": "onKeyPressCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAbort",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAbortCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlay",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayThrough",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayThroughCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDurationChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDurationChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEmptied",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEmptiedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEncrypted",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEncryptedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEnded",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEndedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedData",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedDataCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedMetadata",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedMetadataCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPause",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPauseCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlay",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlayCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlaying",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlayingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onProgress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onProgressCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRateChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRateChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResize",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResizeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeeked",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeekedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeeking",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeekingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStalled",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStalledCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSuspend",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSuspendCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTimeUpdate",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTimeUpdateCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onVolumeChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onVolumeChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWaiting",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWaitingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAuxClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAuxClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenu",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenuCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrag",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnterCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragExit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragExitCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeaveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrop",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDropCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelectCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onGotPointerCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onGotPointerCaptureCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLostPointerCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLostPointerCaptureCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScrollCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWheel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWheelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationIteration",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationIterationCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onToggle",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeToggle",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionRun",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionRunCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "FloatButton",
      "methods": [],
      "name": "FloatButton",
      "slots": [
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "tooltip",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "colon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "layout",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "inline",
              "value": ""inline"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
              ""inline"",
            ],
          },
        },
        {
          "description": "",
          "name": "labelAlign",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "labelWrap",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "labelCol",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "flex",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                    {
                      "type": "union",
                      "value": [
                        ""none"",
                        ""auto"",
                      ],
                    },
                  ],
                },
              },
              {
                "name": "span",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "order",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "push",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "pull",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "prefixCls",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "wrapperCol",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "flex",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                    {
                      "type": "union",
                      "value": [
                        ""none"",
                        ""auto"",
                      ],
                    },
                  ],
                },
              },
              {
                "name": "span",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "order",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "push",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "pull",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "prefixCls",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "form",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "scrollToField",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "focusField",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "getFieldInstance",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "feedbackIcons",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "scrollToFirstError",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "@deprecated Will warning in future branch. Pls use \`requiredMark\` instead.",
          "name": "hideRequiredMark",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Form",
      "methods": [],
      "name": "Form",
      "slots": [
        {
          "description": "",
          "name": "requiredMark",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "labelNode",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "info",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "required",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "required",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "src",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "wrapperClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "wrapperStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "previewPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "fallback",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "preview",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "src",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "visible",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "minScale",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "maxScale",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "onVisibleChange",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "getContainer",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "any",
                        },
                        {
                          "type": "function",
                        },
                        {
                          "type": "union",
                          "value": [
                            "false",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "mask",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "maskClassName",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "icons",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "rotateLeft",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rotateRight",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "zoomIn",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "zoomOut",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "close",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "left",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "right",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "flipX",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "flipY",
                          "type": {
                            "type": "any",
                          },
                        },
                      ],
                    },
                  },
                  {
                    "name": "scaleStep",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "movable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "imageRender",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onTransform",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "toolbarRender",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "@deprecated since version 3.2.1",
          "name": "onPreviewClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onError",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Image",
      "methods": [],
      "name": "Image",
      "slots": [
        {
          "description": "",
          "name": "placeholder",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "@deprecated Use \`variant="borderless"\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Input",
      "methods": [],
      "name": "Input",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Use \`variant\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "controls",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "upIcon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "downIcon",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "InputNumber",
      "methods": [],
      "name": "InputNumber",
      "slots": [
        {
          "description": "",
          "name": "addonBefore",
          "params": [],
        },
        {
          "description": "",
          "name": "addonAfter",
          "params": [],
        },
        {
          "description": "",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "",
          "name": "suffix",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "suffixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hasSider",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Layout",
      "methods": [],
      "name": "Layout",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dataSource",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "grid",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "gutter",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
              {
                "name": "column",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "xs",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "sm",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "md",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "lg",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "xl",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "xxl",
                "type": {
                  "type": "number",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "itemLayout",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "rootClassName",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "spinning",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "size",
                    "type": {
                      "type": "union",
                      "value": [
                        ""small"",
                        ""large"",
                        ""default"",
                      ],
                    },
                  },
                  {
                    "name": "tip",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "delay",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "wrapperClassName",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "indicator",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "fullscreen",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "percent",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""auto"",
                          ],
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "pagination",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "struct",
                "value": [
                  {
                    "name": "position",
                    "type": {
                      "type": "union",
                      "value": [
                        ""top"",
                        ""bottom"",
                        ""both"",
                      ],
                    },
                  },
                ],
              },
              {
                "type": "union",
                "value": [
                  "false",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rowKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "function",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "renderItem",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""large"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "split",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "emptyText",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "List",
      "methods": [],
      "name": "List",
      "slots": [
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
        {
          "description": "",
          "name": "loadMore",
          "params": [],
        },
        {
          "description": "",
          "name": "header",
          "params": [],
        },
        {
          "description": "",
          "name": "footer",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "label",
                  "type": {
                    "type": "any",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Mentions",
      "methods": [],
      "name": "Mentions",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "mode",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "inline",
              "value": ""inline"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
              ""inline"",
            ],
          },
        },
        {
          "description": "direction of menu",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "activeKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Menu motion define. Use \`defaultMotions\` if you need config motion of each mode",
          "name": "motion",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "motionName",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "appear",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enter",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leave",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "appearActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enterActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leaveActive",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "visible",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionAppear",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionEnter",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeaveImmediately",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionDeadline",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "forceRender",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "removeOnLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "leavedClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "eventProps",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onAppearPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeavePrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onVisibleChanged",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "internalRef",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@private Disable auto overflow. Pls note the prop name may refactor since we do not final decided.",
          "name": "disabledOverflow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "inlineCollapsed",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpenKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "openKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "defaultActiveFirst",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "selectable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultSelectedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "selectedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "inlineIndent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Default menu motion of each mode",
          "name": "defaultMotions",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "subMenuOpenDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "subMenuCloseDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "forceSubMenuRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "triggerSubMenuAction",
          "options": [
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""click"",
              ""hover"",
            ],
          },
        },
        {
          "description": "@private Internal usage. Do not use in your production.",
          "name": "overflowedIndicatorPopupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "theme",
          "options": [
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "dark",
              "value": ""dark"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""light"",
              ""dark"",
            ],
          },
        },
        {
          "description": "@private Internal Usage. Not promise crash if used in production. Connect with chenshuai2144",
          "name": "_internalDisableMenuItemTitleTooltip",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDeselect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Menu",
      "methods": [],
      "name": "Menu",
      "slots": [
        {
          "description": "@deprecated Please use \`items\` instead",
          "name": "children",
          "params": [],
        },
        {
          "description": "",
          "name": "expandIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "isSelected",
                      "propType": "bool",
                    },
                    {
                      "name": "isOpen",
                      "propType": "bool",
                    },
                    {
                      "name": "isSubMenu",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "isSelected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isOpen",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isSubMenu",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "itemIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "isSelected",
                      "propType": "bool",
                    },
                    {
                      "name": "isOpen",
                      "propType": "bool",
                    },
                    {
                      "name": "isSubMenu",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "isSelected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isOpen",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isSubMenu",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "overflowedIndicator",
          "params": [],
        },
        {
          "description": "*",
          "name": "_internalRenderMenuItem",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "originNode",
                "propType": "element",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "menuItemProps",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "stateProps",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "selected",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "selected",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "*",
          "name": "_internalRenderSubMenuItem",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "originNode",
                "propType": "element",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "subMenuItemProps",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "stateProps",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "selected",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "open",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "active",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "disabled",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "selected",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "open",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "active",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "Whether the modal dialog is visible or not",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Whether to apply loading visual effect for OK button or not",
          "name": "confirmLoading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "afterClose",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Callback when the animation ends when Modal is turned on and off",
          "name": "afterOpenChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Centered Modal",
          "name": "centered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Width of the modal dialog",
          "name": "width",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "Button \`type\` of the OK button",
          "name": "okType",
          "options": [
            {
              "label": "link",
              "value": ""link"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "dashed",
              "value": ""dashed"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""link"",
              ""text"",
              ""default"",
              ""primary"",
              ""dashed"",
              ""danger"",
            ],
          },
        },
        {
          "description": "Whether to close the modal dialog when the mask (area outside the modal) is clicked",
          "name": "maskClosable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Force render Modal",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "okButtonProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "href",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "htmlType",
                "type": {
                  "type": "union",
                  "value": [
                    ""submit"",
                    ""button"",
                    ""reset"",
                  ],
                },
              },
              {
                "name": "autoInsertSpace",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "cancelButtonProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "href",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "htmlType",
                "type": {
                  "type": "union",
                  "value": [
                    ""submit"",
                    ""button"",
                    ""reset"",
                  ],
                },
              },
              {
                "name": "autoInsertSpace",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyOnClose",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "maskTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "footer",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "mask",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "content",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "wrapper",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getContainer",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "function",
              },
              {
                "type": "union",
                "value": [
                  "false",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "@deprecated Please use \`styles.body\` instead",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.mask\` instead",
          "name": "maskStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "mask",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "wrapProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "focusTriggerAfterClose",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mousePosition",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "x",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "y",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead.",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@since 5.18.0",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "closable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "animation",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "footer",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "mask",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "wrapper",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "content",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "panelRef",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "maskAnimation",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "bodyProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "maskProps",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "Specify a function that will be called when a user clicks the OK button",
          "name": "onOk",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "Specify a function that will be called when a user clicks mask, close button on top right or Cancel button",
          "name": "onCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Modal",
      "methods": [],
      "name": "Modal",
      "slots": [
        {
          "description": "The modal dialog's title",
          "name": "title",
          "params": [],
        },
        {
          "description": "Text of the OK button",
          "name": "okText",
          "params": [],
        },
        {
          "description": "Text of the Cancel button",
          "name": "cancelText",
          "params": [],
        },
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "modalRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "node",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "footer",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "originNode",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "extra",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "OkBtn",
                      "propType": {
                        "isRequired": true,
                        "type": "object",
                      },
                    },
                    {
                      "name": "CancelBtn",
                      "propType": {
                        "isRequired": true,
                        "type": "object",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "OkBtn",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "CancelBtn",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "showQuickJumper",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "goButton",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "responsive",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "role",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "totalBoundaryShowSizeChanger",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showSizeChanger",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "placement",
                    "type": {
                      "type": "union",
                      "value": [
                        ""topLeft"",
                        ""topRight"",
                        ""bottomLeft"",
                        ""bottomRight"",
                      ],
                    },
                  },
                  {
                    "name": "mode",
                    "type": {
                      "type": "union",
                      "value": [
                        ""multiple"",
                        ""tags"",
                      ],
                    },
                  },
                  {
                    "name": "status",
                    "type": {
                      "type": "union",
                      "value": [
                        """",
                        ""warning"",
                        ""error"",
                      ],
                    },
                  },
                  {
                    "name": "popupClassName",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "dropdownClassName",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "dropdownMatchSelectWidth",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "popupMatchSelectWidth",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Not official support. Will be removed in next major version.",
          "name": "selectComponentClass",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "\`string\` type will be removed in next major version.",
          "name": "pageSizeOptions",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "items_per_page",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "jump_to",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "jump_to_confirm",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "page",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "prev_page",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "next_page",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "prev_5",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "next_5",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "prev_3",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "next_3",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "page_size",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "align",
          "options": [
            {
              "label": "start",
              "value": ""start"",
            },
            {
              "label": "end",
              "value": ""end"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""start"",
              ""end"",
              ""center"",
            ],
          },
        },
        {
          "description": "",
          "name": "selectPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "current",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "defaultCurrent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "total",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "pageSize",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "defaultPageSize",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "hideOnSinglePage",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showLessItems",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showPrevNextJumpers",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showTitle",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "simple",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "readOnly",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onShowSizeChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Pagination",
      "methods": [],
      "name": "Pagination",
      "slots": [
        {
          "description": "",
          "name": "sizeChangerRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "info",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "disabled",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "size",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                    {
                      "name": "onSizeChange",
                      "propType": {
                        "isRequired": true,
                        "params": [
                          {
                            "name": "value",
                            "propType": {
                              "type": "oneOfType",
                              "value": [
                                "string",
                                "number",
                              ],
                            },
                          },
                        ],
                        "raw": "(value: string | number) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "aria-label",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "className",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "options",
                      "propType": {
                        "isRequired": true,
                        "type": "arrayOf",
                        "value": {
                          "type": "shape",
                          "value": [
                            {
                              "name": "label",
                              "propType": {
                                "isRequired": true,
                                "type": "string",
                              },
                            },
                            {
                              "name": "value",
                              "propType": {
                                "isRequired": true,
                                "type": "oneOfType",
                                "value": [
                                  "string",
                                  "number",
                                ],
                              },
                            },
                          ],
                        },
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "disabled",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "size",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "onSizeChange",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "aria-label",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "options",
                    "type": {
                      "isRequired": true,
                      "type": "array",
                      "value": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "label",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "value",
                            "type": {
                              "isRequired": true,
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "prevIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "nextIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "jumpPrevIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "jumpNextIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "itemRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "page",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "type",
                "propType": {
                  "type": "oneOf",
                  "value": [
                    "page",
                    "prev",
                    "next",
                    "jump-prev",
                    "jump-next",
                  ],
                },
              },
              "type": {
                "type": "union",
                "value": [
                  ""page"",
                  ""prev"",
                  ""next"",
                  ""jump-prev"",
                  ""jump-next"",
                ],
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "element",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "showTotal",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "total",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "range",
                "propType": "object",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "okType",
          "options": [
            {
              "label": "link",
              "value": ""link"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "dashed",
              "value": ""dashed"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""link"",
              ""text"",
              ""default"",
              ""primary"",
              ""dashed"",
              ""danger"",
            ],
          },
        },
        {
          "description": "",
          "name": "okButtonProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "href",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "htmlType",
                "type": {
                  "type": "union",
                  "value": [
                    ""submit"",
                    ""button"",
                    ""reset"",
                  ],
                },
              },
              {
                "name": "autoInsertSpace",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "cancelButtonProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "href",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "htmlType",
                "type": {
                  "type": "union",
                  "value": [
                    ""submit"",
                    ""button"",
                    ""reset"",
                  ],
                },
              },
              {
                "name": "autoInsertSpace",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "showCancel",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""blue"",
                  ""purple"",
                  ""cyan"",
                  ""green"",
                  ""magenta"",
                  ""pink"",
                  ""red"",
                  ""orange"",
                  ""yellow"",
                  ""volcano"",
                  ""geekblue"",
                  ""lime"",
                  ""gold"",
                  ""blue-inverse"",
                  ""purple-inverse"",
                  ""cyan-inverse"",
                  ""green-inverse"",
                  ""magenta-inverse"",
                  ""pink-inverse"",
                  ""red-inverse"",
                  ""orange-inverse"",
                  ""yellow-inverse"",
                  ""volcano-inverse"",
                  ""geekblue-inverse"",
                  ""lime-inverse"",
                  ""gold-inverse"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`arrow={{ pointAtCenter: true }}\` instead.",
          "name": "arrowPointAtCenter",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "arrowPointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "keepParent",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "afterOpenChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead.",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`defaultOpen\` instead.",
          "name": "defaultVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`afterOpenChange\` instead.",
          "name": "afterVisibleChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "content",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "@deprecated Please use \`classNames={{ root: {} }}\`",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ root: {} }}\`",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    ""focus"",
                    ""click"",
                    ""hover"",
                    ""contextMenu"",
                  ],
                },
              },
              {
                "type": "union",
                "value": [
                  ""focus"",
                  ""click"",
                  ""hover"",
                  ""contextMenu"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "popupVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Trigger will memo content when close.",
          "name": "fresh",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Config popup motion",
          "name": "motion",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "motionName",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "appear",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enter",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leave",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "appearActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enterActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leaveActive",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "visible",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionAppear",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionEnter",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeaveImmediately",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionDeadline",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "forceRender",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "removeOnLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "leavedClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "eventProps",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onAppearPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeavePrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onVisibleChanged",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "internalRef",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getTooltipContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ body: {} }}\`",
          "name": "overlayInnerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onConfirm",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onOpenChange\` instead.",
          "name": "onVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupAlign",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Popconfirm",
      "methods": [],
      "name": "Popconfirm",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "okText",
          "params": [],
        },
        {
          "description": "",
          "name": "cancelText",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "overlay",
          "params": [],
        },
        {
          "description": "",
          "name": "arrowContent",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""blue"",
                  ""purple"",
                  ""cyan"",
                  ""green"",
                  ""magenta"",
                  ""pink"",
                  ""red"",
                  ""orange"",
                  ""yellow"",
                  ""volcano"",
                  ""geekblue"",
                  ""lime"",
                  ""gold"",
                  ""blue-inverse"",
                  ""purple-inverse"",
                  ""cyan-inverse"",
                  ""green-inverse"",
                  ""magenta-inverse"",
                  ""pink-inverse"",
                  ""red-inverse"",
                  ""orange-inverse"",
                  ""yellow-inverse"",
                  ""volcano-inverse"",
                  ""geekblue-inverse"",
                  ""lime-inverse"",
                  ""gold-inverse"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`arrow={{ pointAtCenter: true }}\` instead.",
          "name": "arrowPointAtCenter",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "arrowPointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "keepParent",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "afterOpenChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead.",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`defaultOpen\` instead.",
          "name": "defaultVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`afterOpenChange\` instead.",
          "name": "afterVisibleChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "content",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "@deprecated Please use \`classNames={{ root: {} }}\`",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ root: {} }}\`",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    ""focus"",
                    ""click"",
                    ""hover"",
                    ""contextMenu"",
                  ],
                },
              },
              {
                "type": "union",
                "value": [
                  ""focus"",
                  ""click"",
                  ""hover"",
                  ""contextMenu"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "popupVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Trigger will memo content when close.",
          "name": "fresh",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Config popup motion",
          "name": "motion",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "motionName",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "appear",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enter",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leave",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "appearActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enterActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leaveActive",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "visible",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionAppear",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionEnter",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeaveImmediately",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionDeadline",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "forceRender",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "removeOnLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "leavedClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "eventProps",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onAppearPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeavePrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onVisibleChanged",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "internalRef",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getTooltipContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ body: {} }}\`",
          "name": "overlayInnerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onOpenChange\` instead.",
          "name": "onVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupAlign",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Popover",
      "methods": [],
      "name": "Popover",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "content",
          "params": [],
        },
        {
          "description": "",
          "name": "overlay",
          "params": [],
        },
        {
          "description": "",
          "name": "arrowContent",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "line",
              "value": ""line"",
            },
            {
              "label": "dashboard",
              "value": ""dashboard"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""line"",
              ""dashboard"",
            ],
          },
        },
        {
          "description": "",
          "name": "percent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "active",
              "value": ""active"",
            },
            {
              "label": "normal",
              "value": ""normal"",
            },
            {
              "label": "exception",
              "value": ""exception"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""active"",
              ""normal"",
              ""exception"",
            ],
          },
        },
        {
          "description": "",
          "name": "showInfo",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "strokeWidth",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "strokeLinecap",
          "options": [
            {
              "label": "square",
              "value": ""square"",
            },
            {
              "label": "round",
              "value": ""round"",
            },
            {
              "label": "butt",
              "value": ""butt"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""square"",
              ""round"",
              ""butt"",
            ],
          },
        },
        {
          "description": "",
          "name": "strokeColor",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "trailColor",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`size\` instead",
          "name": "width",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "success",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "percent",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "progress",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "strokeColor",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "gapDegree",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "gapPosition",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "width",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "height",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
              {
                "type": "union",
                "value": [
                  ""small"",
                  ""default"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "steps",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "count",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "gap",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Use \`success\` instead",
          "name": "successPercent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "percentPosition",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "align",
                "type": {
                  "type": "union",
                  "value": [
                    ""start"",
                    ""end"",
                    ""center"",
                  ],
                },
              },
              {
                "name": "type",
                "type": {
                  "type": "union",
                  "value": [
                    ""inner"",
                    ""outer"",
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Progress",
      "methods": [],
      "name": "Progress",
      "slots": [
        {
          "description": "",
          "name": "format",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "percent",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "successPercent",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "canvas",
              "value": ""canvas"",
            },
            {
              "label": "svg",
              "value": ""svg"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""canvas"",
              ""svg"",
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "icon",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "iconSize",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "width",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "height",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "errorLevel",
          "options": [
            {
              "label": "M",
              "value": ""M"",
            },
            {
              "label": "Q",
              "value": ""Q"",
            },
            {
              "label": "L",
              "value": ""L"",
            },
            {
              "label": "H",
              "value": ""H"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""M"",
              ""Q"",
              ""L"",
              ""H"",
            ],
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "loading",
              "value": ""loading"",
            },
            {
              "label": "active",
              "value": ""active"",
            },
            {
              "label": "expired",
              "value": ""expired"",
            },
            {
              "label": "scanned",
              "value": ""scanned"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""loading"",
              ""active"",
              ""expired"",
              ""scanned"",
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "isRequired": true,
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "level",
          "options": [
            {
              "label": "M",
              "value": ""M"",
            },
            {
              "label": "Q",
              "value": ""Q"",
            },
            {
              "label": "L",
              "value": ""L"",
            },
            {
              "label": "H",
              "value": ""H"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""M"",
              ""Q"",
              ""L"",
              ""H"",
            ],
          },
        },
        {
          "description": "",
          "name": "bgColor",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "fgColor",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "includeMargin",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "marginSize",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "imageSettings",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "src",
                "type": {
                  "isRequired": true,
                  "type": "string",
                },
              },
              {
                "name": "height",
                "type": {
                  "isRequired": true,
                  "type": "number",
                },
              },
              {
                "name": "width",
                "type": {
                  "isRequired": true,
                  "type": "number",
                },
              },
              {
                "name": "excavate",
                "type": {
                  "isRequired": true,
                  "type": "boolean",
                },
              },
              {
                "name": "x",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "y",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "opacity",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "crossOrigin",
                "type": {
                  "type": "union",
                  "value": [
                    """",
                    ""anonymous"",
                    ""use-credentials"",
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "minVersion",
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onRefresh",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "QRCode",
      "methods": [],
      "name": "QRCode",
      "slots": [
        {
          "description": "",
          "name": "statusRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "info",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "status",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOf",
                        "value": [
                          "loading",
                          "expired",
                          "scanned",
                        ],
                      },
                    },
                    {
                      "name": "locale",
                      "propType": {
                        "type": "shape",
                        "value": [
                          {
                            "name": "expired",
                            "propType": "string",
                          },
                          {
                            "name": "refresh",
                            "propType": "string",
                          },
                          {
                            "name": "scanned",
                            "propType": "string",
                          },
                        ],
                      },
                    },
                    {
                      "name": "onRefresh",
                      "propType": "func",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "status",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        ""loading"",
                        ""expired"",
                        ""scanned"",
                      ],
                    },
                  },
                  {
                    "name": "locale",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "expired",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "refresh",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "scanned",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  },
                  {
                    "name": "onRefresh",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultChecked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "skipGroup",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "required",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyPress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Radio",
      "methods": [],
      "name": "Radio",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tooltips",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "direction",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "Is keyboard control enabled.",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "count",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "allowHalf",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onHoverChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Rate",
      "methods": [],
      "name": "Rate",
      "slots": [
        {
          "description": "",
          "name": "character",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "value",
                      "propType": "number",
                    },
                    {
                      "name": "index",
                      "propType": "number",
                    },
                    {
                      "name": "prefixCls",
                      "propType": "string",
                    },
                    {
                      "name": "allowHalf",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "onHover",
                      "propType": {
                        "params": [
                          {
                            "name": "e",
                            "propType": "object",
                          },
                          {
                            "name": "index",
                            "propType": "number",
                          },
                        ],
                        "raw": "(e: MouseEvent<HTMLDivElement, MouseEvent>, index: number) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "onClick",
                      "propType": {
                        "params": [
                          {
                            "name": "e",
                            "propType": "object",
                          },
                          {
                            "name": "index",
                            "propType": "number",
                          },
                        ],
                        "raw": "(e: KeyboardEvent<HTMLDivElement> | MouseEvent<HTMLDivElement, MouseEvent>, index: number) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "character",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                        ],
                      },
                    },
                    {
                      "name": "characterRender",
                      "propType": {
                        "params": [
                          {
                            "name": "origin",
                            "propType": "element",
                          },
                          {
                            "name": "props",
                            "propType": "object",
                          },
                        ],
                        "raw": "(origin: ReactElement<unknown, string | JSXElementConstructor<any>>, props: StarProps) => ReactNode",
                        "returns": {
                          "propType": "node",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "focused",
                      "propType": "bool",
                    },
                    {
                      "name": "count",
                      "propType": "number",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "value",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "index",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "allowHalf",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onHover",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onClick",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "character",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "characterRender",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "focused",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "count",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "characterRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "origin",
                "propType": "element",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "value",
                      "propType": "number",
                    },
                    {
                      "name": "index",
                      "propType": "number",
                    },
                    {
                      "name": "prefixCls",
                      "propType": "string",
                    },
                    {
                      "name": "allowHalf",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "onHover",
                      "propType": {
                        "params": [
                          {
                            "name": "e",
                            "propType": "object",
                          },
                          {
                            "name": "index",
                            "propType": "number",
                          },
                        ],
                        "raw": "(e: MouseEvent<HTMLDivElement, MouseEvent>, index: number) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "onClick",
                      "propType": {
                        "params": [
                          {
                            "name": "e",
                            "propType": "object",
                          },
                          {
                            "name": "index",
                            "propType": "number",
                          },
                        ],
                        "raw": "(e: KeyboardEvent<HTMLDivElement> | MouseEvent<HTMLDivElement, MouseEvent>, index: number) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "character",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "props",
                                "propType": "object",
                              },
                            ],
                            "raw": "(props: StarProps) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "characterRender",
                      "propType": "object",
                    },
                    {
                      "name": "focused",
                      "propType": "bool",
                    },
                    {
                      "name": "count",
                      "propType": "number",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "value",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "index",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "allowHalf",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onHover",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onClick",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "character",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "characterRender",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "focused",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "count",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "403",
              "value": "403",
            },
            {
              "label": "404",
              "value": "404",
            },
            {
              "label": "500",
              "value": "500",
            },
            {
              "label": "403",
              "value": ""403"",
            },
            {
              "label": "404",
              "value": ""404"",
            },
            {
              "label": "500",
              "value": ""500"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""info"",
              ""warning"",
              ""error"",
              "403",
              "404",
              "500",
              "403",
              "404",
              "500",
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Result",
      "methods": [],
      "name": "Result",
      "slots": [
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "subTitle",
          "params": [],
        },
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "gutter",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""top"",
                  ""bottom"",
                  ""middle"",
                  ""stretch"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "justify",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""start"",
                  ""end"",
                  ""center"",
                  ""space-around"",
                  ""space-between"",
                  ""space-evenly"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "wrap",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Row",
      "methods": [],
      "name": "Row",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "isRequired": true,
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "any",
                },
                {
                  "type": "struct",
                  "value": [
                    {
                      "name": "label",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "icon",
                      "type": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                  ],
                },
                {
                  "type": "struct",
                  "value": [
                    {
                      "name": "label",
                      "type": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                  ],
                },
              ],
            },
          },
        },
        {
          "description": "Option to fit width to its parent's width",
          "name": "block",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Option to control the display size",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "vertical",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "action",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "maxLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "list",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "step",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "shape",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "default",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "src",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "srcSet",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "alt",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "crossOrigin",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "anonymous",
              "value": ""anonymous"",
            },
            {
              "label": "use-credentials",
              "value": ""use-credentials"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""anonymous"",
              ""use-credentials"",
            ],
          },
        },
        {
          "description": "",
          "name": "href",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "start",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "label",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rows",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "required",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "span",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "form",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoComplete",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "controls",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "min",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "max",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "width",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "data",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "summary",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "wrap",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "accept",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "acceptCharset",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "allowFullScreen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "allowTransparency",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "as",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "async",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoPlay",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "capture",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "union",
                "value": [
                  ""user"",
                  ""environment"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "cellPadding",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "cellSpacing",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "charSet",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "challenge",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "cite",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "classID",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "cols",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "colSpan",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "coords",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dateTime",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defer",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "download",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "encType",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "formAction",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "formEncType",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "formMethod",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "formNoValidate",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "formTarget",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "frameBorder",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "headers",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "high",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "hrefLang",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "htmlFor",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "httpEquiv",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "integrity",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "keyParams",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "keyType",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "kind",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loop",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "low",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "manifest",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "marginHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "marginWidth",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "media",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "mediaGroup",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "method",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "minLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "muted",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "noValidate",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "optimum",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "pattern",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "playsInline",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "poster",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "preload",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "readOnly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "reversed",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rowSpan",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "sandbox",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "scope",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "scoped",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "scrolling",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "seamless",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "selected",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "sizes",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "srcDoc",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "srcLang",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "useMap",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "wmode",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "motionName",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Segmented",
      "methods": [],
      "name": "Segmented",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""topLeft"",
              ""topRight"",
              ""bottomLeft"",
              ""bottomRight"",
            ],
          },
        },
        {
          "description": "",
          "name": "mode",
          "options": [
            {
              "label": "multiple",
              "value": ""multiple"",
            },
            {
              "label": "tags",
              "value": ""tags"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""multiple"",
              ""tags"",
            ],
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`popupClassName\` instead",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`popupMatchSelectWidth\` instead",
          "name": "dropdownMatchSelectWidth",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "popupMatchSelectWidth",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "optionLabelProp",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "labelInValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "searchValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoClearSearchValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "maxLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "choiceTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "maxTagTextLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "maxTagCount",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "union",
                "value": [
                  ""responsive"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tokenSeparators",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "clearIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dropdownStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownAlign",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showAction",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                ""focus"",
                ""click"",
              ],
            },
          },
        },
        {
          "description": "",
          "name": "fieldNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "value",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "label",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "groupLabel",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "options",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Use \`searchValue\` instead",
          "name": "inputValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "In Select, \`false\` means do nothing.",
          "name": "filterOption",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "filterSort",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "optionFilterProp",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "optionRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "defaultActiveFirstOption",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "virtual",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "listHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "listItemHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "maxCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "@deprecated Use \`variant\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated \`showArrow\` is deprecated which will be removed in next major version. It will be a",
          "name": "showArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSearch",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClear",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDropdownVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInputKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDeselect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Select",
      "methods": [],
      "name": "Select",
      "slots": [
        {
          "description": "",
          "name": "tagRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "label",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "value",
                      "propType": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "onClose",
                      "propType": {
                        "isRequired": true,
                        "params": [
                          {
                            "name": "event",
                            "propType": "object",
                          },
                        ],
                        "raw": "(event?: MouseEvent<HTMLElement, MouseEvent> | undefined) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "closable",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "isMaxTag",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "label",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "value",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onClose",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "closable",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isMaxTag",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "notFoundContent",
          "params": [],
        },
        {
          "description": "",
          "name": "placeholder",
          "params": [],
        },
        {
          "description": "",
          "name": "maxTagPlaceholder",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "omittedValues",
                "propType": {
                  "type": "arrayOf",
                  "value": {
                    "type": "shape",
                    "value": [
                      {
                        "name": "key",
                        "propType": {
                          "type": "oneOfType",
                          "value": [
                            "string",
                            "number",
                            "object",
                          ],
                        },
                      },
                      {
                        "name": "value",
                        "propType": {
                          "type": "oneOfType",
                          "value": [
                            "string",
                            "number",
                          ],
                        },
                      },
                      {
                        "name": "label",
                        "propType": "node",
                      },
                      {
                        "name": "title",
                        "propType": "node",
                      },
                      {
                        "name": "disabled",
                        "propType": "bool",
                      },
                    ],
                  },
                },
              },
              "type": {
                "type": "array",
                "value": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "key",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                    {
                      "name": "value",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                        ],
                      },
                    },
                    {
                      "name": "label",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "title",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                },
              },
            },
          ],
        },
        {
          "description": "",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "",
          "name": "suffixIcon",
          "params": [],
        },
        {
          "description": "Clear all icon",
          "name": "clearIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "Selector remove icon",
          "name": "removeIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "dropdownRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "menu",
                "propType": "element",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "labelRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "label",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "value",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                        ],
                      },
                    },
                    {
                      "name": "key",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "label",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "value",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "key",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "menuItemSelectedIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "avatar",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "width",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "paragraph",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "width",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "array",
                          "value": {
                            "type": "union",
                            "value": [
                              {
                                "type": "string",
                              },
                              {
                                "type": "number",
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                  {
                    "name": "rows",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "round",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Skeleton",
      "methods": [],
      "name": "Skeleton",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "range",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "editable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "draggableTrack",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "minCount",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "maxCount",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "number",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "number",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles.handle\` instead",
          "name": "handleStyle",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "array",
                "value": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles.track\` instead",
          "name": "trackStyle",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "array",
                "value": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles.rail\` instead",
          "name": "railStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "reverse",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "min",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "max",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "step",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "marks",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dots",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "included",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "vertical",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tooltip",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "prefixCls",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "open",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "placement",
                "type": {
                  "type": "union",
                  "value": [
                    ""top"",
                    ""topLeft"",
                    ""topRight"",
                    ""bottom"",
                    ""bottomLeft"",
                    ""bottomRight"",
                    ""left"",
                    ""right"",
                    ""leftTop"",
                    ""leftBottom"",
                    ""rightTop"",
                    ""rightBottom"",
                  ],
                },
              },
              {
                "name": "getPopupContainer",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "formatter",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "autoAdjustOverflow",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated \`tooltipPrefixCls\` is deprecated. Please use \`tooltip.prefixCls\` instead.",
          "name": "tooltipPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated \`tooltipVisible\` is deprecated. Please use \`tooltip.open\` instead.",
          "name": "tooltipVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated \`getTooltipPopupContainer\` is deprecated. Please use \`tooltip.getPopupContainer\`",
          "name": "getTooltipPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated \`tooltipPlacement\` is deprecated. Please use \`tooltip.placement\` instead.",
          "name": "tooltipPlacement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "union",
                "value": [
                  {
                    "type": "function",
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onChangeComplete\` instead",
          "name": "onAfterChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "union",
                "value": [
                  {
                    "type": "function",
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChangeComplete",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "union",
                "value": [
                  {
                    "type": "function",
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Slider",
      "methods": [],
      "name": "Slider",
      "slots": [
        {
          "description": "@deprecated \`tipFormatter\` is deprecated. Please use \`tooltip.formatter\` instead.",
          "name": "tipFormatter",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "value",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""small"",
                  ""middle"",
                  ""large"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "align",
          "options": [
            {
              "label": "start",
              "value": ""start"",
            },
            {
              "label": "end",
              "value": ""end"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
            {
              "label": "baseline",
              "value": ""baseline"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""start"",
              ""end"",
              ""center"",
              ""baseline"",
            ],
          },
        },
        {
          "description": "",
          "name": "wrap",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "item",
                "type": {
                  "isRequired": true,
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "item",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Space",
      "methods": [],
      "name": "Space",
      "slots": [
        {
          "description": "",
          "name": "split",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "Customize prefix class name",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Additional class name of Spin",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Additional root class name of Spin",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Whether Spin is spinning",
          "name": "spinning",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Style of Spin",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Size of Spin, options: \`small\`, \`default\` and \`large\`",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""large"",
              ""default"",
            ],
          },
        },
        {
          "description": "Specifies a delay in milliseconds for loading state (prevent flush)",
          "name": "delay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "The className of wrapper when Spin has children",
          "name": "wrapperClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Display a backdrop with the \`Spin\` component",
          "name": "fullscreen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "percent",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "union",
                "value": [
                  ""auto"",
                ],
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Spin",
      "methods": [],
      "name": "Spin",
      "slots": [
        {
          "description": "Customize description content when Spin has children",
          "name": "tip",
          "params": [],
        },
        {
          "description": "React node of the spinning indicator",
          "name": "indicator",
          "params": [],
        },
        {
          "description": "Children of Spin",
          "name": "children",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "role",
          "type": {
            "isRequired": true,
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "valueStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "decimalSeparator",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "groupSeparator",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "precision",
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Statistic",
      "methods": [],
      "name": "Statistic",
      "slots": [
        {
          "description": "",
          "name": "valueRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "node",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "",
          "name": "suffix",
          "params": [],
        },
        {
          "description": "",
          "name": "formatter",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "value",
                "propType": {
                  "type": "oneOfType",
                  "value": [
                    "string",
                    "number",
                  ],
                },
              },
              "type": {
                "type": "union",
                "value": [
                  {
                    "type": "string",
                  },
                  {
                    "type": "number",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "config",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "formatter",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "object",
                          {
                            "type": "oneOf",
                            "value": [
                              false,
                              "number",
                              "countdown",
                            ],
                          },
                        ],
                      },
                    },
                    {
                      "name": "decimalSeparator",
                      "propType": "string",
                    },
                    {
                      "name": "groupSeparator",
                      "propType": "string",
                    },
                    {
                      "name": "precision",
                      "propType": "number",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "formatter",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "union",
                          "value": [
                            "false",
                            ""number"",
                            ""countdown"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "decimalSeparator",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "groupSeparator",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "precision",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "inline",
              "value": ""inline"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "navigation",
              "value": ""navigation"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""inline"",
              ""default"",
              ""navigation"",
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "current",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "iconPrefix",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "initial",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "labelPlacement",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "responsive",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "process",
              "value": ""process"",
            },
            {
              "label": "finish",
              "value": ""finish"",
            },
            {
              "label": "wait",
              "value": ""wait"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""error"",
              ""process"",
              ""finish"",
              ""wait"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "percent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "className",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "description",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "icon",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "onClick",
                  "type": {
                    "type": "function",
                  },
                },
                {
                  "name": "status",
                  "type": {
                    "type": "union",
                    "value": [
                      ""error"",
                      ""process"",
                      ""finish"",
                      ""wait"",
                    ],
                  },
                },
                {
                  "name": "disabled",
                  "type": {
                    "type": "boolean",
                  },
                },
                {
                  "name": "title",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "subTitle",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "style",
                  "type": {
                    "type": "any",
                  },
                },
              ],
            },
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Steps",
      "methods": [],
      "name": "Steps",
      "slots": [
        {
          "description": "",
          "name": "progressDot",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "iconDot",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "info",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "index",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                    {
                      "name": "status",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOf",
                        "value": [
                          "error",
                          "process",
                          "finish",
                          "wait",
                        ],
                      },
                    },
                    {
                      "name": "title",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "description",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "index",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "status",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        ""error"",
                        ""process"",
                        ""finish"",
                        ""wait"",
                      ],
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "description",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultChecked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Alias for \`checked\`.",
          "name": "value",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Alias for \`defaultChecked\`.",
          "name": "defaultValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Switch",
      "methods": [],
      "name": "Switch",
      "slots": [
        {
          "description": "",
          "name": "checkedChildren",
          "params": [],
        },
        {
          "description": "",
          "name": "unCheckedChildren",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "dropdownPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dataSource",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "columns",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "struct",
                  "value": [
                    {
                      "name": "children",
                      "type": {
                        "isRequired": true,
                        "type": "array",
                        "value": {
                          "type": "union",
                          "value": [
                            {
                              "type": "any",
                            },
                            {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "title",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "any",
                                      },
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "number",
                                      },
                                      {
                                        "type": "boolean",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "sorter",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "boolean",
                                      },
                                      {
                                        "type": "function",
                                      },
                                      {
                                        "type": "struct",
                                        "value": [
                                          {
                                            "name": "compare",
                                            "type": {
                                              "type": "function",
                                            },
                                          },
                                          {
                                            "name": "multiple",
                                            "type": {
                                              "type": "number",
                                            },
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "sortOrder",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "any",
                                      },
                                      {
                                        "type": "union",
                                        "value": [
                                          ""descend"",
                                          ""ascend"",
                                        ],
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "defaultSortOrder",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "any",
                                      },
                                      {
                                        "type": "union",
                                        "value": [
                                          ""descend"",
                                          ""ascend"",
                                        ],
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "sortDirections",
                                  "type": {
                                    "type": "array",
                                    "value": {
                                      "type": "union",
                                      "value": [
                                        {
                                          "type": "any",
                                        },
                                        {
                                          "type": "union",
                                          "value": [
                                            ""descend"",
                                            ""ascend"",
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                {
                                  "name": "sortIcon",
                                  "type": {
                                    "type": "function",
                                  },
                                },
                                {
                                  "name": "showSorterTooltip",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "boolean",
                                      },
                                      {
                                        "type": "any",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "filtered",
                                  "type": {
                                    "type": "boolean",
                                  },
                                },
                                {
                                  "name": "filters",
                                  "type": {
                                    "type": "array",
                                    "value": {
                                      "type": "struct",
                                      "value": [
                                        {
                                          "name": "text",
                                          "type": {
                                            "isRequired": true,
                                            "type": "any",
                                          },
                                        },
                                        {
                                          "name": "value",
                                          "type": {
                                            "isRequired": true,
                                            "type": "union",
                                            "value": [
                                              {
                                                "type": "string",
                                              },
                                              {
                                                "type": "number",
                                              },
                                              {
                                                "type": "any",
                                              },
                                              {
                                                "type": "boolean",
                                              },
                                            ],
                                          },
                                        },
                                        {
                                          "name": "children",
                                          "type": {
                                            "type": "array",
                                            "value": {
                                              "type": "any",
                                            },
                                          },
                                        },
                                      ],
                                    },
                                  },
                                },
                                {
                                  "name": "filterDropdown",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "any",
                                      },
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "number",
                                      },
                                      {
                                        "type": "boolean",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "filterOnClose",
                                  "type": {
                                    "type": "boolean",
                                  },
                                },
                                {
                                  "name": "filterMultiple",
                                  "type": {
                                    "type": "boolean",
                                  },
                                },
                                {
                                  "name": "filteredValue",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "any",
                                      },
                                      {
                                        "type": "array",
                                        "value": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                            {
                                              "type": "boolean",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "defaultFilteredValue",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "any",
                                      },
                                      {
                                        "type": "array",
                                        "value": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                            {
                                              "type": "boolean",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "filterIcon",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "any",
                                      },
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "number",
                                      },
                                      {
                                        "type": "boolean",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "filterMode",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      ""menu"",
                                      ""tree"",
                                    ],
                                  },
                                },
                                {
                                  "name": "filterSearch",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "boolean",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "onFilter",
                                  "type": {
                                    "type": "function",
                                  },
                                },
                                {
                                  "name": "filterDropdownProps",
                                  "type": {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "onOpenChange",
                                        "type": {
                                          "type": "function",
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "filterResetToDefaultFilteredValue",
                                  "type": {
                                    "type": "boolean",
                                  },
                                },
                                {
                                  "name": "responsive",
                                  "type": {
                                    "type": "array",
                                    "value": {
                                      "type": "union",
                                      "value": [
                                        ""xxl"",
                                        ""xl"",
                                        ""lg"",
                                        ""md"",
                                        ""sm"",
                                        ""xs"",
                                      ],
                                    },
                                  },
                                },
                                {
                                  "name": "filterDropdownOpen",
                                  "type": {
                                    "type": "boolean",
                                  },
                                },
                                {
                                  "name": "onFilterDropdownOpenChange",
                                  "type": {
                                    "type": "function",
                                  },
                                },
                                {
                                  "name": "filterDropdownVisible",
                                  "type": {
                                    "type": "boolean",
                                  },
                                },
                                {
                                  "name": "onFilterDropdownVisibleChange",
                                  "type": {
                                    "type": "function",
                                  },
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                  ],
                },
                {
                  "type": "struct",
                  "value": [
                    {
                      "name": "title",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "function",
                          },
                        ],
                      },
                    },
                    {
                      "name": "sorter",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "function",
                          },
                          {
                            "type": "struct",
                            "value": [
                              {
                                "name": "compare",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "multiple",
                                "type": {
                                  "type": "number",
                                },
                              },
                            ],
                          },
                        ],
                      },
                    },
                    {
                      "name": "sortOrder",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "union",
                            "value": [
                              ""descend"",
                              ""ascend"",
                            ],
                          },
                        ],
                      },
                    },
                    {
                      "name": "defaultSortOrder",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "union",
                            "value": [
                              ""descend"",
                              ""ascend"",
                            ],
                          },
                        ],
                      },
                    },
                    {
                      "name": "sortDirections",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "union",
                          "value": [
                            {
                              "type": "any",
                            },
                            {
                              "type": "union",
                              "value": [
                                ""descend"",
                                ""ascend"",
                              ],
                            },
                          ],
                        },
                      },
                    },
                    {
                      "name": "sortIcon",
                      "type": {
                        "type": "function",
                      },
                    },
                    {
                      "name": "showSorterTooltip",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                    {
                      "name": "filtered",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "filters",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "struct",
                          "value": [
                            {
                              "name": "text",
                              "type": {
                                "isRequired": true,
                                "type": "any",
                              },
                            },
                            {
                              "name": "value",
                              "type": {
                                "isRequired": true,
                                "type": "union",
                                "value": [
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                ],
                              },
                            },
                            {
                              "name": "children",
                              "type": {
                                "type": "array",
                                "value": {
                                  "type": "any",
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                    {
                      "name": "filterDropdown",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "function",
                          },
                        ],
                      },
                    },
                    {
                      "name": "filterOnClose",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "filterMultiple",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "filteredValue",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "array",
                            "value": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "any",
                                },
                                {
                                  "type": "boolean",
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "defaultFilteredValue",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "array",
                            "value": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "any",
                                },
                                {
                                  "type": "boolean",
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "filterIcon",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "function",
                          },
                        ],
                      },
                    },
                    {
                      "name": "filterMode",
                      "type": {
                        "type": "union",
                        "value": [
                          ""menu"",
                          ""tree"",
                        ],
                      },
                    },
                    {
                      "name": "filterSearch",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "function",
                          },
                        ],
                      },
                    },
                    {
                      "name": "onFilter",
                      "type": {
                        "type": "function",
                      },
                    },
                    {
                      "name": "filterDropdownProps",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "onOpenChange",
                            "type": {
                              "type": "function",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "filterResetToDefaultFilteredValue",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "responsive",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "union",
                          "value": [
                            ""xxl"",
                            ""xl"",
                            ""lg"",
                            ""md"",
                            ""sm"",
                            ""xs"",
                          ],
                        },
                      },
                    },
                    {
                      "name": "filterDropdownOpen",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "onFilterDropdownOpenChange",
                      "type": {
                        "type": "function",
                      },
                    },
                    {
                      "name": "filterDropdownVisible",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "onFilterDropdownVisibleChange",
                      "type": {
                        "type": "function",
                      },
                    },
                  ],
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "pagination",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "struct",
                "value": [
                  {
                    "name": "position",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          ""topLeft"",
                          ""topRight"",
                          ""bottomLeft"",
                          ""bottomRight"",
                          ""none"",
                          ""topCenter"",
                          ""bottomCenter"",
                        ],
                      },
                    },
                  },
                ],
              },
              {
                "type": "union",
                "value": [
                  "false",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "rootClassName",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "spinning",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "size",
                    "type": {
                      "type": "union",
                      "value": [
                        ""small"",
                        ""large"",
                        ""default"",
                      ],
                    },
                  },
                  {
                    "name": "tip",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "delay",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "wrapperClassName",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "indicator",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "fullscreen",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "percent",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "number",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""auto"",
                          ],
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "filterTitle",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "filterConfirm",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "filterReset",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "filterEmptyText",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "filterCheckall",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "filterSearchPlaceholder",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "emptyText",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "selectAll",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "selectNone",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "selectInvert",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "selectionAll",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "sortTitle",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "expand",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "collapse",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "triggerDesc",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "triggerAsc",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "cancelSort",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rowSelection",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "preserveSelectedRowKeys",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "type",
                "type": {
                  "type": "union",
                  "value": [
                    ""checkbox"",
                    ""radio"",
                  ],
                },
              },
              {
                "name": "selectedRowKeys",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "defaultSelectedRowKeys",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "onChange",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "getCheckboxProps",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onSelect",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onSelectMultiple",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onSelectAll",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onSelectInvert",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onSelectNone",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "selections",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          {
                            "type": "struct",
                            "value": [
                              {
                                "name": "key",
                                "type": {
                                  "isRequired": true,
                                  "type": "string",
                                },
                              },
                              {
                                "name": "text",
                                "type": {
                                  "isRequired": true,
                                  "type": "any",
                                },
                              },
                              {
                                "name": "onSelect",
                                "type": {
                                  "type": "function",
                                },
                              },
                            ],
                          },
                          {
                            "type": "union",
                            "value": [
                              ""SELECT_ALL"",
                              ""SELECT_INVERT"",
                              ""SELECT_NONE"",
                            ],
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "hideSelectAll",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "fixed",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "union",
                      "value": [
                        ""left"",
                        ""right"",
                      ],
                    },
                  ],
                },
              },
              {
                "name": "columnWidth",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "columnTitle",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "checkStrictly",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "renderCell",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onCell",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "scroll",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "sortDirections",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "any",
                },
                {
                  "type": "union",
                  "value": [
                    ""descend"",
                    ""ascend"",
                  ],
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "showSorterTooltip",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "virtual",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "@deprecated Use \`expandable.expandIcon\` instead",
          "name": "expandIcon",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "components",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "table",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
              {
                "name": "header",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "table",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                    {
                      "name": "wrapper",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                    {
                      "name": "row",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                    {
                      "name": "cell",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "function",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "wrapper",
                          "type": {
                            "type": "union",
                            "value": [
                              {
                                "type": "string",
                              },
                              {
                                "type": "number",
                              },
                              {
                                "type": "any",
                              },
                            ],
                          },
                        },
                        {
                          "name": "row",
                          "type": {
                            "type": "union",
                            "value": [
                              {
                                "type": "string",
                              },
                              {
                                "type": "number",
                              },
                              {
                                "type": "any",
                              },
                            ],
                          },
                        },
                        {
                          "name": "cell",
                          "type": {
                            "type": "union",
                            "value": [
                              {
                                "type": "string",
                              },
                              {
                                "type": "number",
                              },
                              {
                                "type": "any",
                              },
                            ],
                          },
                        },
                      ],
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "footer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Config expand rows",
          "name": "expandable",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "expandedRowKeys",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "defaultExpandedRowKeys",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "expandedRowRender",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "columnTitle",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "expandRowByClick",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "expandIcon",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onExpand",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onExpandedRowsChange",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "defaultExpandAllRows",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "indentSize",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "expandIconColumnIndex",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "showExpandColumn",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "expandedRowClassName",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "childrenColumnName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "rowExpandable",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "columnWidth",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "fixed",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "union",
                      "value": [
                        ""left"",
                        ""right"",
                      ],
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Use \`expandable.expandedRowKeys\` instead",
          "name": "expandedRowKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "@deprecated Use \`expandable.defaultExpandedRowKeys\` instead",
          "name": "defaultExpandedRowKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "@deprecated Use \`expandable.expandedRowRender\` instead",
          "name": "expandedRowRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Use \`expandable.expandRowByClick\` instead",
          "name": "expandRowByClick",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Use \`expandable.defaultExpandAllRows\` instead",
          "name": "defaultExpandAllRows",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "indentSize",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "@deprecated Use \`expandable.expandIconColumnIndex\` instead",
          "name": "expandIconColumnIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "@deprecated Use \`expandable.expandedRowClassName\` instead",
          "name": "expandedRowClassName",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Use \`expandable.childrenColumnName\` instead",
          "name": "childrenColumnName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rowKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tableLayout",
          "options": [
            {
              "label": "auto",
              "value": ""auto"",
            },
            {
              "label": "fixed",
              "value": ""fixed"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""auto"",
              ""fixed"",
            ],
          },
        },
        {
          "description": "",
          "name": "rowClassName",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "summary",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showHeader",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "sticky",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "offsetHeader",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "offsetSummary",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "offsetScroll",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "getContainer",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "rowHoverable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@private Internal usage, may remove by refactor.",
          "name": "tailor",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@private Internal usage, may remove by refactor.",
          "name": "getContainerWidth",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`expandable.onExpand\` instead",
          "name": "onExpand",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`expandable.onExpandedRowsChange\` instead",
          "name": "onExpandedRowsChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRow",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onHeaderRow",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Table",
      "methods": [],
      "name": "Table",
      "slots": [
        {
          "description": "",
          "name": "caption",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "line",
              "value": ""line"",
            },
            {
              "label": "card",
              "value": ""card"",
            },
            {
              "label": "editable-card",
              "value": ""editable-card"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""line"",
              ""card"",
              ""editable-card"",
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "hideAdd",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "centered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "more",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`indicator={{ size: ... }}\` instead",
          "name": "indicatorSize",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@private Internal usage. Not promise will rename in future",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "dropdownAriaLabel",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "removeAriaLabel",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "addAriaLabel",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "animated",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "inkBar",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "tabPane",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "tabPaneMotion",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "motionName",
                          "type": {
                            "type": "union",
                            "value": [
                              {
                                "type": "string",
                              },
                              {
                                "type": "struct",
                                "value": [
                                  {
                                    "name": "appear",
                                    "type": {
                                      "type": "string",
                                    },
                                  },
                                  {
                                    "name": "enter",
                                    "type": {
                                      "type": "string",
                                    },
                                  },
                                  {
                                    "name": "leave",
                                    "type": {
                                      "type": "string",
                                    },
                                  },
                                  {
                                    "name": "appearActive",
                                    "type": {
                                      "type": "string",
                                    },
                                  },
                                  {
                                    "name": "enterActive",
                                    "type": {
                                      "type": "string",
                                    },
                                  },
                                  {
                                    "name": "leaveActive",
                                    "type": {
                                      "type": "string",
                                    },
                                  },
                                ],
                              },
                            ],
                          },
                        },
                        {
                          "name": "visible",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "motionAppear",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "motionEnter",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "motionLeave",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "motionLeaveImmediately",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "motionDeadline",
                          "type": {
                            "type": "number",
                          },
                        },
                        {
                          "name": "forceRender",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "removeOnLeave",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "leavedClassName",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "eventProps",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "onAppearPrepare",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onEnterPrepare",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onLeavePrepare",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onAppearStart",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onEnterStart",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onLeaveStart",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onAppearActive",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onEnterActive",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onLeaveActive",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onAppearEnd",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onEnterEnd",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onLeaveEnd",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "onVisibleChanged",
                          "type": {
                            "type": "function",
                          },
                        },
                        {
                          "name": "internalRef",
                          "type": {
                            "type": "union",
                            "value": [
                              {
                                "type": "any",
                              },
                              {
                                "type": "function",
                              },
                            ],
                          },
                        },
                        {
                          "name": "children",
                          "type": {
                            "type": "function",
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyInactiveTabPane",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "key",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "label",
                  "type": {
                    "isRequired": true,
                    "type": "any",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "activeKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultActiveKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tabBarGutter",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "tabBarStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabPosition",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "indicator",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "size",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "align",
                "type": {
                  "type": "union",
                  "value": [
                    ""start"",
                    ""end"",
                    ""center"",
                  ],
                },
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onEdit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTabClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTabScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tabs",
      "methods": [],
      "name": "Tabs",
      "slots": [
        {
          "description": "",
          "name": "addIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "moreIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "removeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "tabBarExtraContent",
          "params": [],
        },
        {
          "description": "",
          "name": "renderTabBar",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "id",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "activeKey",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "animated",
                      "propType": {
                        "isRequired": true,
                        "type": "shape",
                        "value": [
                          {
                            "name": "inkBar",
                            "propType": "bool",
                          },
                          {
                            "name": "tabPane",
                            "propType": "bool",
                          },
                          {
                            "name": "tabPaneMotion",
                            "propType": {
                              "type": "shape",
                              "value": [
                                {
                                  "name": "motionName",
                                  "propType": {
                                    "type": "oneOfType",
                                    "value": [
                                      "string",
                                      {
                                        "type": "shape",
                                        "value": [
                                          {
                                            "name": "appear",
                                            "propType": "string",
                                          },
                                          {
                                            "name": "enter",
                                            "propType": "string",
                                          },
                                          {
                                            "name": "leave",
                                            "propType": "string",
                                          },
                                          {
                                            "name": "appearActive",
                                            "propType": "string",
                                          },
                                          {
                                            "name": "enterActive",
                                            "propType": "string",
                                          },
                                          {
                                            "name": "leaveActive",
                                            "propType": "string",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "visible",
                                  "propType": "bool",
                                },
                                {
                                  "name": "motionAppear",
                                  "propType": "bool",
                                },
                                {
                                  "name": "motionEnter",
                                  "propType": "bool",
                                },
                                {
                                  "name": "motionLeave",
                                  "propType": "bool",
                                },
                                {
                                  "name": "motionLeaveImmediately",
                                  "propType": "bool",
                                },
                                {
                                  "name": "motionDeadline",
                                  "propType": "number",
                                },
                                {
                                  "name": "forceRender",
                                  "propType": "bool",
                                },
                                {
                                  "name": "removeOnLeave",
                                  "propType": "bool",
                                },
                                {
                                  "name": "leavedClassName",
                                  "propType": "string",
                                },
                                {
                                  "name": "eventProps",
                                  "propType": "object",
                                },
                                {
                                  "name": "onAppearPrepare",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionPrepareEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onEnterPrepare",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionPrepareEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onLeavePrepare",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionPrepareEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onAppearStart",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onEnterStart",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onLeaveStart",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onAppearActive",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onEnterActive",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onLeaveActive",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "void",
                                          "object",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onAppearEnd",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEndEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "bool",
                                          "void",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onEnterEnd",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEndEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "bool",
                                          "void",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onLeaveEnd",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "element",
                                        "propType": "object",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                    "raw": "MotionEndEventHandler",
                                    "returns": {
                                      "propType": {
                                        "type": "oneOfType",
                                        "value": [
                                          "bool",
                                          "void",
                                        ],
                                      },
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "onVisibleChanged",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "visible",
                                        "propType": "bool",
                                      },
                                    ],
                                    "raw": "(visible: boolean) => void",
                                    "returns": {
                                      "propType": "void",
                                    },
                                    "type": "func",
                                  },
                                },
                                {
                                  "name": "internalRef",
                                  "propType": {
                                    "type": "oneOfType",
                                    "value": [
                                      "null",
                                      {
                                        "params": [
                                          {
                                            "name": "instance",
                                            "propType": {
                                              "type": "oneOfType",
                                              "value": [
                                                "null",
                                                "object",
                                              ],
                                            },
                                          },
                                        ],
                                        "raw": "(instance: any) => void | (() => VoidOrUndefinedOnly)",
                                        "returns": {
                                          "propType": {
                                            "type": "oneOfType",
                                            "value": [
                                              "void",
                                              "func",
                                            ],
                                          },
                                        },
                                        "type": "func",
                                      },
                                      "object",
                                    ],
                                  },
                                },
                                {
                                  "name": "children",
                                  "propType": {
                                    "params": [
                                      {
                                        "name": "props",
                                        "propType": {
                                          "type": "shape",
                                          "value": [
                                            {
                                              "name": "visible",
                                              "propType": "bool",
                                            },
                                            {
                                              "name": "className",
                                              "propType": "string",
                                            },
                                            {
                                              "name": "style",
                                              "propType": "object",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "ref",
                                        "propType": {
                                          "params": [
                                            {
                                              "name": "node",
                                              "propType": "any",
                                            },
                                          ],
                                          "raw": "(node: any) => void",
                                          "returns": {
                                            "propType": "void",
                                          },
                                          "type": "func",
                                        },
                                      },
                                    ],
                                    "raw": "(props: { [key: string]: any; visible?: boolean | undefined; className?: string | undefined; style?: CSSProperties | undefined; }, ref: (node: any) => void) => ReactElement<unknown, string | JSXElementConstructor<...>>",
                                    "returns": {
                                      "propType": "element",
                                    },
                                    "type": "func",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "tabPosition",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOf",
                        "value": [
                          "top",
                          "bottom",
                          "left",
                          "right",
                        ],
                      },
                    },
                    {
                      "name": "rtl",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "mobile",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "editable",
                      "propType": {
                        "isRequired": true,
                        "type": "shape",
                        "value": [
                          {
                            "name": "onEdit",
                            "propType": {
                              "isRequired": true,
                              "params": [
                                {
                                  "name": "type",
                                  "propType": {
                                    "type": "oneOf",
                                    "value": [
                                      "add",
                                      "remove",
                                    ],
                                  },
                                },
                                {
                                  "name": "info",
                                  "propType": {
                                    "type": "shape",
                                    "value": [
                                      {
                                        "name": "key",
                                        "propType": "string",
                                      },
                                      {
                                        "name": "event",
                                        "propType": "object",
                                      },
                                    ],
                                  },
                                },
                              ],
                              "raw": "(type: "add" | "remove", info: { key?: string | undefined; event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>; }) => void",
                              "returns": {
                                "propType": "void",
                              },
                              "type": "func",
                            },
                          },
                          {
                            "name": "showAdd",
                            "propType": "bool",
                          },
                          {
                            "name": "removeIcon",
                            "propType": "node",
                          },
                          {
                            "name": "addIcon",
                            "propType": "node",
                          },
                        ],
                      },
                    },
                    {
                      "name": "locale",
                      "propType": {
                        "isRequired": true,
                        "type": "shape",
                        "value": [
                          {
                            "name": "dropdownAriaLabel",
                            "propType": "string",
                          },
                          {
                            "name": "removeAriaLabel",
                            "propType": "string",
                          },
                          {
                            "name": "addAriaLabel",
                            "propType": "string",
                          },
                        ],
                      },
                    },
                    {
                      "name": "more",
                      "propType": {
                        "isRequired": true,
                        "type": "object",
                      },
                    },
                    {
                      "name": "tabBarGutter",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                    {
                      "name": "onTabClick",
                      "propType": {
                        "isRequired": true,
                        "params": [
                          {
                            "name": "key",
                            "propType": "string",
                          },
                          {
                            "name": "e",
                            "propType": "object",
                          },
                        ],
                        "raw": "(key: string, e: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "onTabScroll",
                      "propType": {
                        "isRequired": true,
                        "params": [
                          {
                            "name": "info",
                            "propType": {
                              "type": "shape",
                              "value": [
                                {
                                  "name": "direction",
                                  "propType": {
                                    "isRequired": true,
                                    "type": "oneOf",
                                    "value": [
                                      "top",
                                      "bottom",
                                      "left",
                                      "right",
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                        "raw": "OnTabScroll",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "extra",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                        ],
                      },
                    },
                    {
                      "name": "style",
                      "propType": {
                        "isRequired": true,
                        "type": "object",
                      },
                    },
                    {
                      "name": "panes",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "id",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "activeKey",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "animated",
                    "type": {
                      "isRequired": true,
                      "type": "struct",
                      "value": [
                        {
                          "name": "inkBar",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "tabPane",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "tabPaneMotion",
                          "type": {
                            "type": "struct",
                            "value": [
                              {
                                "name": "motionName",
                                "type": {
                                  "type": "union",
                                  "value": [
                                    {
                                      "type": "string",
                                    },
                                    {
                                      "type": "struct",
                                      "value": [
                                        {
                                          "name": "appear",
                                          "type": {
                                            "type": "string",
                                          },
                                        },
                                        {
                                          "name": "enter",
                                          "type": {
                                            "type": "string",
                                          },
                                        },
                                        {
                                          "name": "leave",
                                          "type": {
                                            "type": "string",
                                          },
                                        },
                                        {
                                          "name": "appearActive",
                                          "type": {
                                            "type": "string",
                                          },
                                        },
                                        {
                                          "name": "enterActive",
                                          "type": {
                                            "type": "string",
                                          },
                                        },
                                        {
                                          "name": "leaveActive",
                                          "type": {
                                            "type": "string",
                                          },
                                        },
                                      ],
                                    },
                                  ],
                                },
                              },
                              {
                                "name": "visible",
                                "type": {
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "motionAppear",
                                "type": {
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "motionEnter",
                                "type": {
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "motionLeave",
                                "type": {
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "motionLeaveImmediately",
                                "type": {
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "motionDeadline",
                                "type": {
                                  "type": "number",
                                },
                              },
                              {
                                "name": "forceRender",
                                "type": {
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "removeOnLeave",
                                "type": {
                                  "type": "boolean",
                                },
                              },
                              {
                                "name": "leavedClassName",
                                "type": {
                                  "type": "string",
                                },
                              },
                              {
                                "name": "eventProps",
                                "type": {
                                  "type": "any",
                                },
                              },
                              {
                                "name": "onAppearPrepare",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onEnterPrepare",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onLeavePrepare",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onAppearStart",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onEnterStart",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onLeaveStart",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onAppearActive",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onEnterActive",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onLeaveActive",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onAppearEnd",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onEnterEnd",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onLeaveEnd",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "onVisibleChanged",
                                "type": {
                                  "type": "function",
                                },
                              },
                              {
                                "name": "internalRef",
                                "type": {
                                  "type": "union",
                                  "value": [
                                    {
                                      "type": "any",
                                    },
                                    {
                                      "type": "function",
                                    },
                                  ],
                                },
                              },
                              {
                                "name": "children",
                                "type": {
                                  "type": "function",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                  {
                    "name": "tabPosition",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        ""top"",
                        ""bottom"",
                        ""left"",
                        ""right"",
                      ],
                    },
                  },
                  {
                    "name": "rtl",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "mobile",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "editable",
                    "type": {
                      "isRequired": true,
                      "type": "struct",
                      "value": [
                        {
                          "name": "onEdit",
                          "type": {
                            "isRequired": true,
                            "type": "function",
                          },
                        },
                        {
                          "name": "showAdd",
                          "type": {
                            "type": "boolean",
                          },
                        },
                        {
                          "name": "removeIcon",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "addIcon",
                          "type": {
                            "type": "any",
                          },
                        },
                      ],
                    },
                  },
                  {
                    "name": "locale",
                    "type": {
                      "isRequired": true,
                      "type": "struct",
                      "value": [
                        {
                          "name": "dropdownAriaLabel",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "removeAriaLabel",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "addAriaLabel",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  },
                  {
                    "name": "more",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "tabBarGutter",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "onTabClick",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "onTabScroll",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "extra",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "panes",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "DefaultTabBar",
                "propType": "object",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""success"",
                  ""warning"",
                  ""error"",
                  ""default"",
                  ""processing"",
                  ""blue"",
                  ""purple"",
                  ""cyan"",
                  ""green"",
                  ""magenta"",
                  ""pink"",
                  ""red"",
                  ""orange"",
                  ""yellow"",
                  ""volcano"",
                  ""geekblue"",
                  ""lime"",
                  ""gold"",
                  ""blue-inverse"",
                  ""purple-inverse"",
                  ""cyan-inverse"",
                  ""green-inverse"",
                  ""magenta-inverse"",
                  ""pink-inverse"",
                  ""red-inverse"",
                  ""orange-inverse"",
                  ""yellow-inverse"",
                  ""volcano-inverse"",
                  ""geekblue-inverse"",
                  ""lime-inverse"",
                  ""gold-inverse"",
                ],
              },
            ],
          },
        },
        {
          "description": "Advised to use closeIcon instead.",
          "name": "closable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "@deprecated \`visible\` will be removed in next major version.",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tag",
      "methods": [],
      "name": "Tag",
      "slots": [
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "TimePicker",
      "methods": [],
      "name": "TimePicker",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "reverse",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mode",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "alternate",
              "value": ""alternate"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""right"",
              ""alternate"",
            ],
          },
        },
        {
          "description": "",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "key",
                  "type": {
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
                {
                  "name": "prefixCls",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "className",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "color",
                  "type": {
                    "type": "union",
                    "value": [
                      {
                        "type": "any",
                      },
                      {
                        "type": "union",
                        "value": [
                          ""blue"",
                          ""green"",
                          ""red"",
                          ""gray"",
                        ],
                      },
                    ],
                  },
                },
                {
                  "name": "dot",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "pending",
                  "type": {
                    "type": "boolean",
                  },
                },
                {
                  "name": "position",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "style",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "label",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "children",
                  "type": {
                    "type": "any",
                  },
                },
              ],
            },
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Timeline",
      "methods": [],
      "name": "Timeline",
      "slots": [
        {
          "description": "指定最后一个幽灵节点是否存在或内容",
          "name": "pending",
          "params": [],
        },
        {
          "description": "",
          "name": "pendingDot",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""blue"",
                  ""purple"",
                  ""cyan"",
                  ""green"",
                  ""magenta"",
                  ""pink"",
                  ""red"",
                  ""orange"",
                  ""yellow"",
                  ""volcano"",
                  ""geekblue"",
                  ""lime"",
                  ""gold"",
                  ""blue-inverse"",
                  ""purple-inverse"",
                  ""cyan-inverse"",
                  ""green-inverse"",
                  ""magenta-inverse"",
                  ""pink-inverse"",
                  ""red-inverse"",
                  ""orange-inverse"",
                  ""yellow-inverse"",
                  ""volcano-inverse"",
                  ""geekblue-inverse"",
                  ""lime-inverse"",
                  ""gold-inverse"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`arrow={{ pointAtCenter: true }}\` instead.",
          "name": "arrowPointAtCenter",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "arrowPointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "keepParent",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "afterOpenChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead.",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`defaultOpen\` instead.",
          "name": "defaultVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`afterOpenChange\` instead.",
          "name": "afterVisibleChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "content",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "@deprecated Please use \`classNames={{ root: {} }}\`",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ root: {} }}\`",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    ""focus"",
                    ""click"",
                    ""hover"",
                    ""contextMenu"",
                  ],
                },
              },
              {
                "type": "union",
                "value": [
                  ""focus"",
                  ""click"",
                  ""hover"",
                  ""contextMenu"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "popupVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Trigger will memo content when close.",
          "name": "fresh",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Config popup motion",
          "name": "motion",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "motionName",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "appear",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enter",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leave",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "appearActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enterActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leaveActive",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "visible",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionAppear",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionEnter",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeaveImmediately",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionDeadline",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "forceRender",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "removeOnLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "leavedClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "eventProps",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onAppearPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeavePrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onVisibleChanged",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "internalRef",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getTooltipContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ body: {} }}\`",
          "name": "overlayInnerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onOpenChange\` instead.",
          "name": "onVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupAlign",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tooltip",
      "methods": [],
      "name": "Tooltip",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "overlay",
          "params": [],
        },
        {
          "description": "",
          "name": "arrowContent",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "steps",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "cover",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "nextButtonProps",
                  "type": {
                    "type": "struct",
                    "value": [
                      {
                        "name": "children",
                        "type": {
                          "type": "any",
                        },
                      },
                      {
                        "name": "onClick",
                        "type": {
                          "type": "function",
                        },
                      },
                      {
                        "name": "className",
                        "type": {
                          "type": "string",
                        },
                      },
                      {
                        "name": "style",
                        "type": {
                          "type": "any",
                        },
                      },
                    ],
                  },
                },
                {
                  "name": "prevButtonProps",
                  "type": {
                    "type": "struct",
                    "value": [
                      {
                        "name": "children",
                        "type": {
                          "type": "any",
                        },
                      },
                      {
                        "name": "onClick",
                        "type": {
                          "type": "function",
                        },
                      },
                      {
                        "name": "className",
                        "type": {
                          "type": "string",
                        },
                      },
                      {
                        "name": "style",
                        "type": {
                          "type": "any",
                        },
                      },
                    ],
                  },
                },
                {
                  "name": "indicatorsRender",
                  "type": {
                    "type": "function",
                  },
                },
                {
                  "name": "type",
                  "type": {
                    "type": "union",
                    "value": [
                      ""default"",
                      ""primary"",
                    ],
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "current",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""primary"",
            ],
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "closable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
              ""center"",
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "gap",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "offset",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
              {
                "name": "radius",
                "type": {
                  "type": "number",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "animated",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "placeholder",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "defaultCurrent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mask",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "color",
                    "type": {
                      "type": "string",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "scrollIntoViewOptions",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "block",
                    "type": {
                      "type": "union",
                      "value": [
                        ""start"",
                        ""end"",
                        ""center"",
                        ""nearest"",
                      ],
                    },
                  },
                  {
                    "name": "inline",
                    "type": {
                      "type": "union",
                      "value": [
                        ""start"",
                        ""end"",
                        ""center"",
                        ""nearest"",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "disabledInteraction",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupAlign",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFinish",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tour",
      "methods": [],
      "name": "Tour",
      "slots": [
        {
          "description": "",
          "name": "indicatorsRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "current",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "total",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dataSource",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "targetKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "selectedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "render",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "listStyle",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "operationStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "titles",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "operations",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "placeholder",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "defaultValue",
                    "type": {
                      "type": "string",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "filterOption",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "footer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "rowKey",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showSelectAll",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "selectAllLabels",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "any",
                },
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "boolean",
                },
                {
                  "type": "function",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "oneWay",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "pagination",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "pageSize",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "simple",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "showSizeChanger",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "showLessItems",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelectChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSearch",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Transfer",
      "methods": [],
      "name": "Transfer",
      "slots": [
        {
          "description": "",
          "name": "selectionsIcon",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "showLine",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "showLeafIcon",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Whether to support multiple selection",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Whether to automatically expand the parent node",
          "name": "autoExpandParent",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Node selection in Checkable state is fully controlled (the selected state of parent and child nodes is no longer associated)",
          "name": "checkStrictly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Whether to support selection",
          "name": "checkable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "whether to disable the tree",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Expand all tree nodes by default",
          "name": "defaultExpandAll",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Expand the corresponding tree node by default",
          "name": "defaultExpandParent",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Expand the specified tree node by default",
          "name": "defaultExpandedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "(Controlled) Expand the specified tree node",
          "name": "expandedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "(Controlled) Tree node with checked checkbox",
          "name": "checkedKeys",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "checked",
                    "type": {
                      "isRequired": true,
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                  },
                  {
                    "name": "halfChecked",
                    "type": {
                      "isRequired": true,
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "Tree node with checkbox checked by default",
          "name": "defaultCheckedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "(Controlled) Set the selected tree node",
          "name": "selectedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "Tree node selected by default",
          "name": "defaultSelectedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "selectable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Click on the tree node to trigger",
          "name": "filterAntTreeNode",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "loadedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "Set the node to be draggable (IE>8)",
          "name": "draggable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "function",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "nodeDraggable",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showIcon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "blockNode",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "fieldNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "title",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "_title",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "key",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "virtual",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "activeKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "loadData",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "motion",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "filterTreeNode",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "treeData",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "rootStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "focusable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "expandAction",
          "options": [
            {
              "label": "false",
              "value": "false",
            },
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "doubleClick",
              "value": ""doubleClick"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              "false",
              ""click"",
              ""doubleClick"",
            ],
          },
        },
        {
          "description": "",
          "name": "allowDrop",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "titleRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "itemHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "scrollWidth",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "itemScrollOffset",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoad",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenu",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrop",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onExpand",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCheck",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRightClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "Used for \`rc-tree-select\` only.",
          "name": "onActiveChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tree",
      "methods": [],
      "name": "Tree",
      "slots": [
        {
          "description": "",
          "name": "icon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "eventKey",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "prefixCls",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "className",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "expanded",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "selected",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "checked",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "halfChecked",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "children",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "title",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "pos",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "dragOver",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "dragOverGapTop",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "dragOverGapBottom",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "isLeaf",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "selectable",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "disabled",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "disableCheckbox",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "eventKey",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "prefixCls",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selected",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checked",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "halfChecked",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "pos",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "dragOver",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapTop",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapBottom",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isLeaf",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selectable",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disableCheckbox",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "switcherIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "className",
                      "propType": "string",
                    },
                    {
                      "name": "checkable",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "disableCheckbox",
                      "propType": "bool",
                    },
                    {
                      "name": "title",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "data",
                                "propType": "object",
                              },
                            ],
                            "raw": "(data: DataNode) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "key",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "eventKey",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "isLeaf",
                      "propType": "bool",
                    },
                    {
                      "name": "checked",
                      "propType": "bool",
                    },
                    {
                      "name": "expanded",
                      "propType": "bool",
                    },
                    {
                      "name": "loading",
                      "propType": "bool",
                    },
                    {
                      "name": "selected",
                      "propType": "bool",
                    },
                    {
                      "name": "selectable",
                      "propType": "bool",
                    },
                    {
                      "name": "icon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "props",
                                "propType": {
                                  "type": "shape",
                                  "value": [
                                    {
                                      "name": "eventKey",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "prefixCls",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "className",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "expanded",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "selected",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "checked",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "halfChecked",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "children",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "node",
                                      },
                                    },
                                    {
                                      "name": "title",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "node",
                                      },
                                    },
                                    {
                                      "name": "pos",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "dragOver",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "dragOverGapTop",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "dragOverGapBottom",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "isLeaf",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "selectable",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "disabled",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "disableCheckbox",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                            "raw": "(props: AntdTreeNodeAttribute) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "children",
                      "propType": "node",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "checkable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disableCheckbox",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "key",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "eventKey",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "isLeaf",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loading",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selectable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "switcherLoadingIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "dropIndicatorRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "dropPosition",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOf",
                        "value": [
                          0,
                          1,
                          -1,
                        ],
                      },
                    },
                    {
                      "name": "dropLevelOffset",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                    {
                      "name": "indent",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "dropPosition",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                        "-1",
                      ],
                    },
                  },
                  {
                    "name": "dropLevelOffset",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "indent",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""topLeft"",
              ""topRight"",
              ""bottomLeft"",
              ""bottomRight"",
            ],
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`popupClassName\` instead",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`variant\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "treeLine",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "showLeafIcon",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`popupMatchSelectWidth\` instead",
          "name": "dropdownMatchSelectWidth",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "popupMatchSelectWidth",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "@deprecated \`showArrow\` is deprecated which will be removed in next major version. It will be a",
          "name": "showArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "labelInValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "searchValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoClearSearchValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "maxLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "choiceTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@private Internal usage. Do not use in your production.",
          "name": "getRawInputElement",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "maxTagTextLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "maxTagCount",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "union",
                "value": [
                  ""responsive"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tokenSeparators",
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "clearIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dropdownStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownAlign",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showAction",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                ""focus"",
                ""click"",
              ],
            },
          },
        },
        {
          "description": "",
          "name": "fieldNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "value",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "label",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "_title",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Use \`searchValue\` instead",
          "name": "inputValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "virtual",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "listHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "listItemHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "maxCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "showCheckedStrategy",
          "options": [
            {
              "label": "SHOW_PARENT",
              "value": ""SHOW_PARENT"",
            },
            {
              "label": "SHOW_CHILD",
              "value": ""SHOW_CHILD"",
            },
            {
              "label": "SHOW_ALL",
              "value": ""SHOW_ALL"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""SHOW_PARENT"",
              ""SHOW_CHILD"",
              ""SHOW_ALL"",
            ],
          },
        },
        {
          "description": "",
          "name": "loadData",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "filterTreeNode",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "treeNodeFilterProp",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "treeNodeLabelProp",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "treeCheckStrictly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "treeData",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "treeDataSimpleMode",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "id",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "pId",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                  {
                    "name": "rootPId",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "treeLoadedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "treeDefaultExpandAll",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "treeExpandedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "treeDefaultExpandedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "treeExpandAction",
          "options": [
            {
              "label": "false",
              "value": "false",
            },
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "doubleClick",
              "value": ""doubleClick"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              "false",
              ""click"",
              ""doubleClick"",
            ],
          },
        },
        {
          "description": "",
          "name": "listItemScrollOffset",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "treeTitleRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSearch",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClear",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDropdownVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInputKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDeselect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTreeLoad",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTreeExpand",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "TreeSelect",
      "methods": [],
      "name": "TreeSelect",
      "slots": [
        {
          "description": "",
          "name": "suffixIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "switcherIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "className",
                      "propType": "string",
                    },
                    {
                      "name": "checkable",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "disableCheckbox",
                      "propType": "bool",
                    },
                    {
                      "name": "title",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "data",
                                "propType": "object",
                              },
                            ],
                            "raw": "(data: DataNode) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "key",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "eventKey",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "isLeaf",
                      "propType": "bool",
                    },
                    {
                      "name": "checked",
                      "propType": "bool",
                    },
                    {
                      "name": "expanded",
                      "propType": "bool",
                    },
                    {
                      "name": "loading",
                      "propType": "bool",
                    },
                    {
                      "name": "selected",
                      "propType": "bool",
                    },
                    {
                      "name": "selectable",
                      "propType": "bool",
                    },
                    {
                      "name": "icon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "props",
                                "propType": {
                                  "type": "shape",
                                  "value": [
                                    {
                                      "name": "eventKey",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "prefixCls",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "className",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "expanded",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "selected",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "checked",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "halfChecked",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "children",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "node",
                                      },
                                    },
                                    {
                                      "name": "title",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "node",
                                      },
                                    },
                                    {
                                      "name": "pos",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "dragOver",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "dragOverGapTop",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "dragOverGapBottom",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "isLeaf",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "selectable",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "disabled",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "disableCheckbox",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                            "raw": "(props: AntdTreeNodeAttribute) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "children",
                      "propType": "node",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "checkable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disableCheckbox",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "key",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "eventKey",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "isLeaf",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loading",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selectable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "tagRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "label",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "value",
                      "propType": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "onClose",
                      "propType": {
                        "isRequired": true,
                        "params": [
                          {
                            "name": "event",
                            "propType": "object",
                          },
                        ],
                        "raw": "(event?: MouseEvent<HTMLElement, MouseEvent> | undefined) => void",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "closable",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "isMaxTag",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "label",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "value",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onClose",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                  {
                    "name": "closable",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isMaxTag",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "notFoundContent",
          "params": [],
        },
        {
          "description": "",
          "name": "placeholder",
          "params": [],
        },
        {
          "description": "",
          "name": "maxTagPlaceholder",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "omittedValues",
                "propType": {
                  "type": "arrayOf",
                  "value": {
                    "type": "shape",
                    "value": [
                      {
                        "name": "key",
                        "propType": {
                          "type": "oneOfType",
                          "value": [
                            "string",
                            "number",
                            "object",
                          ],
                        },
                      },
                      {
                        "name": "value",
                        "propType": {
                          "type": "oneOfType",
                          "value": [
                            "string",
                            "number",
                          ],
                        },
                      },
                      {
                        "name": "label",
                        "propType": "node",
                      },
                      {
                        "name": "title",
                        "propType": "node",
                      },
                      {
                        "name": "disabled",
                        "propType": "bool",
                      },
                    ],
                  },
                },
              },
              "type": {
                "type": "array",
                "value": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "key",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                    {
                      "name": "value",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                        ],
                      },
                    },
                    {
                      "name": "label",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "title",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                },
              },
            },
          ],
        },
        {
          "description": "",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "Clear all icon",
          "name": "clearIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "Selector remove icon",
          "name": "removeIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "dropdownRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "menu",
                "propType": "element",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "treeCheckable",
          "params": [],
        },
        {
          "description": "",
          "name": "treeIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "eventKey",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "prefixCls",
                      "propType": "string",
                    },
                    {
                      "name": "className",
                      "propType": "string",
                    },
                    {
                      "name": "style",
                      "propType": "object",
                    },
                    {
                      "name": "id",
                      "propType": "string",
                    },
                    {
                      "name": "expanded",
                      "propType": "bool",
                    },
                    {
                      "name": "selected",
                      "propType": "bool",
                    },
                    {
                      "name": "checked",
                      "propType": "bool",
                    },
                    {
                      "name": "loaded",
                      "propType": "bool",
                    },
                    {
                      "name": "loading",
                      "propType": "bool",
                    },
                    {
                      "name": "halfChecked",
                      "propType": "bool",
                    },
                    {
                      "name": "title",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "data",
                                "propType": "object",
                              },
                            ],
                            "raw": "(data: TreeDataType) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "dragOver",
                      "propType": "bool",
                    },
                    {
                      "name": "dragOverGapTop",
                      "propType": "bool",
                    },
                    {
                      "name": "dragOverGapBottom",
                      "propType": "bool",
                    },
                    {
                      "name": "pos",
                      "propType": "string",
                    },
                    {
                      "name": "domRef",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          {
                            "params": [
                              {
                                "name": "instance",
                                "propType": {
                                  "type": "oneOfType",
                                  "value": [
                                    "null",
                                    "object",
                                  ],
                                },
                              },
                            ],
                            "raw": "(instance: HTMLDivElement | null) => void | (() => VoidOrUndefinedOnly)",
                            "returns": {
                              "propType": {
                                "type": "oneOfType",
                                "value": [
                                  "void",
                                  "func",
                                ],
                              },
                            },
                            "type": "func",
                          },
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "data",
                      "propType": "object",
                    },
                    {
                      "name": "isStart",
                      "propType": {
                        "type": "arrayOf",
                        "value": "bool",
                      },
                    },
                    {
                      "name": "isEnd",
                      "propType": {
                        "type": "arrayOf",
                        "value": "bool",
                      },
                    },
                    {
                      "name": "active",
                      "propType": "bool",
                    },
                    {
                      "name": "onMouseMove",
                      "propType": {
                        "params": [
                          {
                            "name": "event",
                            "propType": "object",
                          },
                        ],
                        "raw": "MouseEventHandler<HTMLDivElement>",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "isLeaf",
                      "propType": "bool",
                    },
                    {
                      "name": "checkable",
                      "propType": "bool",
                    },
                    {
                      "name": "selectable",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "disableCheckbox",
                      "propType": "bool",
                    },
                    {
                      "name": "icon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                        ],
                      },
                    },
                    {
                      "name": "switcherIcon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                        ],
                      },
                    },
                    {
                      "name": "children",
                      "propType": "node",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "eventKey",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "id",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loaded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loading",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "halfChecked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "dragOver",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapTop",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapBottom",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "pos",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "domRef",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "data",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "isStart",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "boolean",
                      },
                    },
                  },
                  {
                    "name": "isEnd",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "boolean",
                      },
                    },
                  },
                  {
                    "name": "active",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onMouseMove",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "isLeaf",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checkable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selectable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disableCheckbox",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "switcherIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "@deprecated Use \`ref\` directly if using React 16",
          "name": "setContentRef",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Typography",
      "methods": [],
      "name": "Typography",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "select",
              "value": ""select"",
            },
            {
              "label": "drag",
              "value": ""drag"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""select"",
              ""drag"",
            ],
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultFileList",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "uid",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "size",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "name",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "fileName",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "lastModified",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "lastModifiedDate",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "url",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "status",
                  "type": {
                    "type": "union",
                    "value": [
                      ""error"",
                      ""done"",
                      ""uploading"",
                      ""removed"",
                    ],
                  },
                },
                {
                  "name": "percent",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "thumbUrl",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "crossOrigin",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "originFileObj",
                  "type": {
                    "type": "struct",
                    "value": [
                      {
                        "name": "lastModifiedDate",
                        "type": {
                          "isRequired": true,
                          "type": "any",
                        },
                      },
                    ],
                  },
                },
                {
                  "name": "response",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "error",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "linkProps",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "type",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "xhr",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "preview",
                  "type": {
                    "type": "string",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "fileList",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "uid",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "size",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "name",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "fileName",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "lastModified",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "lastModifiedDate",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "url",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "status",
                  "type": {
                    "type": "union",
                    "value": [
                      ""error"",
                      ""done"",
                      ""uploading"",
                      ""removed"",
                    ],
                  },
                },
                {
                  "name": "percent",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "thumbUrl",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "crossOrigin",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "originFileObj",
                  "type": {
                    "type": "struct",
                    "value": [
                      {
                        "name": "lastModifiedDate",
                        "type": {
                          "isRequired": true,
                          "type": "any",
                        },
                      },
                    ],
                  },
                },
                {
                  "name": "response",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "error",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "linkProps",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "type",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "xhr",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "preview",
                  "type": {
                    "type": "string",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "action",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "directory",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "data",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "method",
          "options": [
            {
              "label": "POST",
              "value": ""POST"",
            },
            {
              "label": "PUT",
              "value": ""PUT"",
            },
            {
              "label": "PATCH",
              "value": ""PATCH"",
            },
            {
              "label": "post",
              "value": ""post"",
            },
            {
              "label": "put",
              "value": ""put"",
            },
            {
              "label": "patch",
              "value": ""patch"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""POST"",
              ""PUT"",
              ""PATCH"",
              ""post"",
              ""put"",
              ""patch"",
            ],
          },
        },
        {
          "description": "",
          "name": "headers",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showUploadList",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "extra",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "showRemoveIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "showPreviewIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "showDownloadIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "removeIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "downloadIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "previewIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "accept",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "beforeUpload",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "listType",
          "options": [
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "picture",
              "value": ""picture"",
            },
            {
              "label": "picture-card",
              "value": ""picture-card"",
            },
            {
              "label": "picture-circle",
              "value": ""picture-circle"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""text"",
              ""picture"",
              ""picture-card"",
              ""picture-circle"",
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "supportServerRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "customRequest",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "withCredentials",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "openFileDialogOnClick",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "uploading",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "removeFile",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "downloadFile",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "uploadError",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "previewFile",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "previewFile",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`beforeUpload\` directly",
          "name": "transformFile",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "iconRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "isImageUrl",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "progress",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "itemRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Config max count of \`fileList\`. Will replace current one when \`maxCount\` is 1",
          "name": "maxCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "capture",
          "type": {
            "isRequired": true,
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "hasControlInside",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrop",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPreview",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDownload",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRemove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Upload",
      "methods": [],
      "name": "Upload",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "rotate",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "width",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "image",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "content",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "font",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "color",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "addColorStop",
                          "type": {
                            "isRequired": true,
                            "type": "function",
                          },
                        },
                      ],
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "setTransform",
                          "type": {
                            "isRequired": true,
                            "type": "function",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "fontSize",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "fontWeight",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "union",
                      "value": [
                        ""light"",
                        ""normal"",
                        ""weight"",
                      ],
                    },
                  ],
                },
              },
              {
                "name": "fontStyle",
                "type": {
                  "type": "union",
                  "value": [
                    ""none"",
                    ""normal"",
                    ""italic"",
                    ""oblique"",
                  ],
                },
              },
              {
                "name": "fontFamily",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "textAlign",
                "type": {
                  "type": "union",
                  "value": [
                    ""start"",
                    ""end"",
                    ""left"",
                    ""right"",
                    ""center"",
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "gap",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "offset",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "inherit",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Watermark",
      "methods": [],
      "name": "Watermark",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "layout",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "lazy",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onResizeStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResize",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResizeEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Splitter",
      "methods": [],
      "name": "Splitter",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Alert",
      "methods": [],
      "name": "ErrorBoundary",
      "slots": [
        {
          "description": "",
          "name": "message",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
      ],
      "subName": "ErrorBoundary",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "href",
          "type": {
            "isRequired": true,
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "replace",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Anchor",
      "methods": [],
      "name": "Link",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
      ],
      "subName": "Link",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Please use \`max={{ count: number }}\`",
          "name": "maxCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "@deprecated Please use \`max={{ style: CSSProperties }}\`",
          "name": "maxStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`max={{ popover: PopoverProps }}\`",
          "name": "maxPopoverPlacement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
            ],
          },
        },
        {
          "description": "@deprecated Please use \`max={{ popover: PopoverProps }}\`",
          "name": "maxPopoverTrigger",
          "options": [
            {
              "label": "focus",
              "value": ""focus"",
            },
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""focus"",
              ""click"",
              ""hover"",
            ],
          },
        },
        {
          "description": "",
          "name": "max",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "count",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "popover",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "title",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "function",
                          },
                        ],
                      },
                    },
                    {
                      "name": "content",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "any",
                          },
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "function",
                          },
                        ],
                      },
                    },
                    {
                      "name": "onOpenChange",
                      "type": {
                        "type": "function",
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""small"",
                  ""large"",
                  ""default"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Avatar",
      "methods": [],
      "name": "Group",
      "slots": [],
      "subName": "Group",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""blue"",
                  ""purple"",
                  ""cyan"",
                  ""green"",
                  ""magenta"",
                  ""pink"",
                  ""red"",
                  ""orange"",
                  ""yellow"",
                  ""volcano"",
                  ""geekblue"",
                  ""lime"",
                  ""gold"",
                  ""blue-inverse"",
                  ""purple-inverse"",
                  ""cyan-inverse"",
                  ""green-inverse"",
                  ""magenta-inverse"",
                  ""pink-inverse"",
                  ""red-inverse"",
                  ""orange-inverse"",
                  ""yellow-inverse"",
                  ""volcano-inverse"",
                  ""geekblue-inverse"",
                  ""lime-inverse"",
                  ""gold-inverse"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "start",
              "value": ""start"",
            },
            {
              "label": "end",
              "value": ""end"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""start"",
              ""end"",
            ],
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Badge",
      "methods": [],
      "name": "Ribbon",
      "slots": [
        {
          "description": "",
          "name": "text",
          "params": [],
        },
      ],
      "subName": "Ribbon",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "href",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "menu",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "menu",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "theme",
                      "type": {
                        "type": "union",
                        "value": [
                          ""light"",
                          ""dark"",
                        ],
                      },
                    },
                    {
                      "name": "inlineIndent",
                      "type": {
                        "type": "number",
                      },
                    },
                    {
                      "name": "_internalDisableMenuItemTitleTooltip",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "items",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "union",
                          "value": [
                            {
                              "type": "any",
                            },
                            {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "dashed",
                                  "type": {
                                    "type": "boolean",
                                  },
                                },
                                {
                                  "name": "key",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "number",
                                      },
                                      {
                                        "type": "any",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "danger",
                                  "type": {
                                    "type": "boolean",
                                  },
                                },
                                {
                                  "name": "icon",
                                  "type": {
                                    "type": "any",
                                  },
                                },
                                {
                                  "name": "title",
                                  "type": {
                                    "type": "string",
                                  },
                                },
                              ],
                            },
                            {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "icon",
                                  "type": {
                                    "type": "any",
                                  },
                                },
                                {
                                  "name": "theme",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      ""light"",
                                      ""dark"",
                                    ],
                                  },
                                },
                                {
                                  "name": "children",
                                  "type": {
                                    "isRequired": true,
                                    "type": "array",
                                    "value": {
                                      "type": "union",
                                      "value": [
                                        {
                                          "type": "any",
                                        },
                                        {
                                          "type": "struct",
                                          "value": [
                                            {
                                              "name": "dashed",
                                              "type": {
                                                "type": "boolean",
                                              },
                                            },
                                            {
                                              "name": "key",
                                              "type": {
                                                "type": "union",
                                                "value": [
                                                  {
                                                    "type": "string",
                                                  },
                                                  {
                                                    "type": "number",
                                                  },
                                                  {
                                                    "type": "any",
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                        {
                                          "type": "struct",
                                          "value": [
                                            {
                                              "name": "children",
                                              "type": {
                                                "type": "array",
                                                "value": {
                                                  "type": "union",
                                                  "value": [
                                                    {
                                                      "type": "any",
                                                    },
                                                    {
                                                      "type": "struct",
                                                      "value": [
                                                        {
                                                          "name": "dashed",
                                                          "type": {
                                                            "type": "boolean",
                                                          },
                                                        },
                                                        {
                                                          "name": "key",
                                                          "type": {
                                                            "type": "union",
                                                            "value": [
                                                              {
                                                                "type": "string",
                                                              },
                                                              {
                                                                "type": "number",
                                                              },
                                                              {
                                                                "type": "any",
                                                              },
                                                            ],
                                                          },
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                            {
                                              "name": "key",
                                              "type": {
                                                "type": "union",
                                                "value": [
                                                  {
                                                    "type": "string",
                                                  },
                                                  {
                                                    "type": "number",
                                                  },
                                                  {
                                                    "type": "any",
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                              ],
                            },
                            {
                              "type": "struct",
                              "value": [
                                {
                                  "name": "children",
                                  "type": {
                                    "type": "array",
                                    "value": {
                                      "type": "union",
                                      "value": [
                                        {
                                          "type": "any",
                                        },
                                        {
                                          "type": "struct",
                                          "value": [
                                            {
                                              "name": "dashed",
                                              "type": {
                                                "type": "boolean",
                                              },
                                            },
                                            {
                                              "name": "key",
                                              "type": {
                                                "type": "union",
                                                "value": [
                                                  {
                                                    "type": "string",
                                                  },
                                                  {
                                                    "type": "number",
                                                  },
                                                  {
                                                    "type": "any",
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                        {
                                          "type": "struct",
                                          "value": [
                                            {
                                              "name": "icon",
                                              "type": {
                                                "type": "any",
                                              },
                                            },
                                            {
                                              "name": "theme",
                                              "type": {
                                                "type": "union",
                                                "value": [
                                                  ""light"",
                                                  ""dark"",
                                                ],
                                              },
                                            },
                                            {
                                              "name": "children",
                                              "type": {
                                                "isRequired": true,
                                                "type": "array",
                                                "value": {
                                                  "type": "union",
                                                  "value": [
                                                    {
                                                      "type": "any",
                                                    },
                                                    {
                                                      "type": "struct",
                                                      "value": [
                                                        {
                                                          "name": "dashed",
                                                          "type": {
                                                            "type": "boolean",
                                                          },
                                                        },
                                                        {
                                                          "name": "key",
                                                          "type": {
                                                            "type": "union",
                                                            "value": [
                                                              {
                                                                "type": "string",
                                                              },
                                                              {
                                                                "type": "number",
                                                              },
                                                              {
                                                                "type": "any",
                                                              },
                                                            ],
                                                          },
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                              },
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  },
                                },
                                {
                                  "name": "key",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "number",
                                      },
                                      {
                                        "type": "any",
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          ],
                        },
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoFocus",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "arrow",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "pointAtCenter",
                          "type": {
                            "type": "boolean",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "trigger",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      ""click"",
                      ""hover"",
                      ""contextMenu"",
                    ],
                  },
                },
              },
              {
                "name": "dropdownRender",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onOpenChange",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "open",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "disabled",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "destroyPopupOnHide",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "align",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "points",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "string",
                        },
                      },
                    },
                    {
                      "name": "_experimental",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "offset",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "union",
                          "value": [
                            {
                              "type": "number",
                            },
                            {
                              "type": "any",
                            },
                          ],
                        },
                      },
                    },
                    {
                      "name": "targetOffset",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "union",
                          "value": [
                            {
                              "type": "number",
                            },
                            {
                              "type": "any",
                            },
                          ],
                        },
                      },
                    },
                    {
                      "name": "overflow",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "adjustX",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "boolean",
                                },
                              ],
                            },
                          },
                          {
                            "name": "adjustY",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "boolean",
                                },
                              ],
                            },
                          },
                          {
                            "name": "shiftX",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "boolean",
                                },
                              ],
                            },
                          },
                          {
                            "name": "shiftY",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "boolean",
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "autoArrow",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "htmlRegion",
                      "type": {
                        "type": "union",
                        "value": [
                          ""visible"",
                          ""scroll"",
                          ""visibleFirst"",
                        ],
                      },
                    },
                    {
                      "name": "dynamicInset",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "useCssRight",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "useCssBottom",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "useCssTransform",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "ignoreShake",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                },
              },
              {
                "name": "getPopupContainer",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "prefixCls",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "rootClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "transitionName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "placement",
                "type": {
                  "type": "union",
                  "value": [
                    ""top"",
                    ""topLeft"",
                    ""topRight"",
                    ""bottom"",
                    ""bottomLeft"",
                    ""bottomRight"",
                    ""topCenter"",
                    ""bottomCenter"",
                  ],
                },
              },
              {
                "name": "overlayClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "overlayStyle",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "forceRender",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "mouseEnterDelay",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "mouseLeaveDelay",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "openClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "autoAdjustOverflow",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "boolean",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "adjustX",
                          "type": {
                            "type": "union",
                            "value": [
                              "0",
                              "1",
                            ],
                          },
                        },
                        {
                          "name": "adjustY",
                          "type": {
                            "type": "union",
                            "value": [
                              "0",
                              "1",
                            ],
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "overlay",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "visible",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "onVisibleChange",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Breadcrumb",
      "methods": [],
      "name": "Item",
      "slots": [
        {
          "description": "@deprecated Please use \`menu\` instead",
          "name": "overlay",
          "params": [],
        },
        {
          "description": "",
          "name": "separator",
          "params": [],
        },
      ],
      "subName": "Item",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Button",
      "methods": [],
      "name": "Group",
      "slots": [],
      "subName": "Group",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hoverable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Card",
      "methods": [],
      "name": "Grid",
      "slots": [],
      "subName": "Grid",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Card",
      "methods": [],
      "name": "Meta",
      "slots": [
        {
          "description": "",
          "name": "avatar",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
      ],
      "subName": "Meta",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "fieldNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "label",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "value",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "any",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "array",
                  "value": {
                    "type": "any",
                  },
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "any",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "array",
                  "value": {
                    "type": "any",
                  },
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "changeOnSelect",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showCheckedStrategy",
          "options": [
            {
              "label": "SHOW_PARENT",
              "value": ""SHOW_PARENT"",
            },
            {
              "label": "SHOW_CHILD",
              "value": ""SHOW_CHILD"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""SHOW_PARENT"",
              ""SHOW_CHILD"",
            ],
          },
        },
        {
          "description": "",
          "name": "expandTrigger",
          "options": [
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""click"",
              ""hover"",
            ],
          },
        },
        {
          "description": "",
          "name": "loadData",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Cascader",
      "methods": [],
      "name": "Panel",
      "slots": [
        {
          "description": "",
          "name": "notFoundContent",
          "params": [],
        },
        {
          "description": "",
          "name": "expandIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "loadingIcon",
          "params": [],
        },
      ],
      "subName": "Panel",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "struct",
                  "value": [
                    {
                      "name": "label",
                      "type": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "value",
                      "type": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "title",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "id",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "onChange",
                      "type": {
                        "type": "function",
                      },
                    },
                    {
                      "name": "required",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Checkbox",
      "methods": [],
      "name": "Group",
      "slots": [],
      "subName": "Group",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "@deprecated Use \`collapsible="disabled"\` instead",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "collapsible",
          "options": [
            {
              "label": "icon",
              "value": ""icon"",
            },
            {
              "label": "disabled",
              "value": ""disabled"",
            },
            {
              "label": "header",
              "value": ""header"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""icon"",
              ""disabled"",
              ""header"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Collapse",
      "methods": [],
      "name": "Panel",
      "slots": [
        {
          "description": "",
          "name": "header",
          "params": [],
        },
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
      ],
      "subName": "Panel",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "isRequired": true,
            "type": "struct",
            "value": [
              {
                "name": "getTargetContainer",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "getPopupContainer",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "rootPrefixCls",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "iconPrefixCls",
                "type": {
                  "isRequired": true,
                  "type": "string",
                },
              },
              {
                "name": "getPrefixCls",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "renderEmpty",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "csp",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "nonce",
                      "type": {
                        "type": "string",
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoInsertSpaceInButton",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "variant",
                "type": {
                  "type": "union",
                  "value": [
                    ""outlined"",
                    ""borderless"",
                    ""filled"",
                  ],
                },
              },
              {
                "name": "input",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "textArea",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "inputNumber",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "pagination",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "locale",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "locale",
                      "type": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "Pagination",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "items_per_page",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "jump_to",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "jump_to_confirm",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "page",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "prev_page",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "next_page",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "prev_5",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "next_5",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "prev_3",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "next_3",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "page_size",
                            "type": {
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "DatePicker",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "TimePicker",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "Calendar",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "Table",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "filterTitle",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "filterConfirm",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "filterReset",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "filterEmptyText",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "filterCheckall",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "filterSearchPlaceholder",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "emptyText",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "any",
                                },
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "boolean",
                                },
                                {
                                  "type": "function",
                                },
                              ],
                            },
                          },
                          {
                            "name": "selectAll",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "selectNone",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "selectInvert",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "selectionAll",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "sortTitle",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "expand",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "collapse",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "triggerDesc",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "triggerAsc",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "cancelSort",
                            "type": {
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "Modal",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "okText",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "cancelText",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "justOkText",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "Tour",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "Next",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "Previous",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "Finish",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "Popconfirm",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "okText",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "cancelText",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "Transfer",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "titles",
                            "type": {
                              "type": "array",
                              "value": {
                                "type": "any",
                              },
                            },
                          },
                          {
                            "name": "notFoundContent",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "any",
                                },
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "boolean",
                                },
                                {
                                  "type": "array",
                                  "value": {
                                    "type": "any",
                                  },
                                },
                              ],
                            },
                          },
                          {
                            "name": "searchPlaceholder",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "itemUnit",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "itemsUnit",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "remove",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "selectAll",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "deselectAll",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "selectCurrent",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "selectInvert",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "removeAll",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "removeCurrent",
                            "type": {
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "Select",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "Upload",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "uploading",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "removeFile",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "downloadFile",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "uploadError",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "previewFile",
                            "type": {
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "Empty",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "description",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "global",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "Icon",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "Text",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "edit",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "copy",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "copied",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "expand",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "collapse",
                            "type": {
                              "type": "any",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "Form",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "optional",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "defaultValidateMessages",
                            "type": {
                              "isRequired": true,
                              "type": "struct",
                              "value": [
                                {
                                  "name": "default",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "required",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "enum",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "whitespace",
                                  "type": {
                                    "type": "union",
                                    "value": [
                                      {
                                        "type": "string",
                                      },
                                      {
                                        "type": "function",
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "date",
                                  "type": {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "format",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "parse",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "invalid",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "types",
                                  "type": {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "string",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "method",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "array",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "object",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "number",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "date",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "boolean",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "integer",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "float",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "regexp",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "email",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "url",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "hex",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "string",
                                  "type": {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "len",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "min",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "max",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "range",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "number",
                                  "type": {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "len",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "min",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "max",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "range",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "array",
                                  "type": {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "len",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "min",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "max",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                      {
                                        "name": "range",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                {
                                  "name": "pattern",
                                  "type": {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "mismatch",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "function",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "Image",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "preview",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "QRCode",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "expired",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "refresh",
                            "type": {
                              "type": "string",
                            },
                          },
                          {
                            "name": "scanned",
                            "type": {
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "ColorPicker",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "presetEmpty",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "transparent",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "singleColor",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                          {
                            "name": "gradientColor",
                            "type": {
                              "isRequired": true,
                              "type": "string",
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "direction",
                "type": {
                  "type": "union",
                  "value": [
                    ""ltr"",
                    ""rtl"",
                  ],
                },
              },
              {
                "name": "space",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "splitter",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "virtual",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "popupMatchSelectWidth",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "popupOverflow",
                "type": {
                  "type": "union",
                  "value": [
                    ""scroll"",
                    ""viewport"",
                  ],
                },
              },
              {
                "name": "form",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "theme",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "token",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "components",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "algorithm",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "function",
                          },
                          {
                            "type": "array",
                            "value": {
                              "type": "function",
                            },
                          },
                        ],
                      },
                    },
                    {
                      "name": "inherit",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "hashed",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "cssVar",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "boolean",
                          },
                          {
                            "type": "struct",
                            "value": [
                              {
                                "name": "prefix",
                                "type": {
                                  "type": "string",
                                },
                              },
                              {
                                "name": "key",
                                "type": {
                                  "type": "string",
                                },
                              },
                            ],
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "select",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "alert",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "anchor",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "button",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "divider",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "drawer",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "calendar",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "carousel",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "cascader",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "treeSelect",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "collapse",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "floatButtonGroup",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "typography",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "skeleton",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "spin",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "segmented",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "steps",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "statistic",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "image",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "preview",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "layout",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "list",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "item",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "mentions",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "modal",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "progress",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "result",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "slider",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "breadcrumb",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "menu",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "checkbox",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "descriptions",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "empty",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "badge",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "radio",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "rate",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "switch",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "transfer",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "avatar",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "message",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "tag",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "table",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "expandable",
                      "type": {
                        "type": "struct",
                        "value": [
                          {
                            "name": "expandIcon",
                            "type": {
                              "type": "function",
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "card",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "tabs",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "timeline",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "timePicker",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "tour",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "tooltip",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "popover",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "popconfirm",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "upload",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "notification",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "tree",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "colorPicker",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "datePicker",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "rangePicker",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "dropdown",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "className",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
              },
              {
                "name": "flex",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "wave",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "disabled",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "showEffect",
                      "type": {
                        "type": "function",
                      },
                    },
                  ],
                },
              },
              {
                "name": "warning",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "strict",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "ConfigProvider",
      "methods": [],
      "name": "ConfigContext",
      "slots": [],
      "subName": "ConfigContext",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "value",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "sync": true,
          "type": {
            "isRequired": true,
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "ConfigProvider",
      "methods": [],
      "name": "SizeContext",
      "slots": [],
      "subName": "SizeContext",
    },
    {
      "attrs": [
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOk",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "DatePicker",
      "methods": [],
      "name": "WeekPicker",
      "slots": [],
      "subName": "WeekPicker",
    },
    {
      "attrs": [
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOk",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "DatePicker",
      "methods": [],
      "name": "MonthPicker",
      "slots": [],
      "subName": "MonthPicker",
    },
    {
      "attrs": [
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOk",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "DatePicker",
      "methods": [],
      "name": "YearPicker",
      "slots": [],
      "subName": "YearPicker",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""topLeft"",
              ""topRight"",
              ""bottomLeft"",
              ""bottomRight"",
            ],
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "popupStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "DatePicker",
      "methods": [],
      "name": "RangePicker",
      "slots": [],
      "subName": "RangePicker",
    },
    {
      "attrs": [
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOk",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "DatePicker",
      "methods": [],
      "name": "TimePicker",
      "slots": [],
      "subName": "TimePicker",
    },
    {
      "attrs": [
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOk",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "DatePicker",
      "methods": [],
      "name": "QuarterPicker",
      "slots": [],
      "subName": "QuarterPicker",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "getWeekDay",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getMillisecond",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getSecond",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getMinute",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getHour",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getDate",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getMonth",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getYear",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getNow",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getFixedDate",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "getEndDate",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "addYear",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "addMonth",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "addDate",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "setYear",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "setMonth",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "setDate",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "setHour",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "setMinute",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "setSecond",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "setMillisecond",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "isAfter",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "isValidate",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "isRequired": true,
            "type": "struct",
            "value": [
              {
                "name": "getWeekFirstDay",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "getWeekFirstDate",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "getWeek",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "format",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "parse",
                "type": {
                  "isRequired": true,
                  "type": "function",
                },
              },
              {
                "name": "getShortWeekDays",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "getShortMonths",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "DatePicker",
      "methods": [],
      "name": "DatePicker",
      "slots": [],
      "subName": "generatePicker",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ label: {} }}\` instead",
          "name": "labelStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ content: {} }}\` instead",
          "name": "contentStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "label",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "content",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "label",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "content",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "span",
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Descriptions",
      "methods": [],
      "name": "Item",
      "slots": [
        {
          "description": "",
          "name": "label",
          "params": [],
        },
      ],
      "subName": "Item",
    },
    {
      "attrs": [
        {
          "description": "Recommend to use closeIcon instead",
          "name": "closable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "footer",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "footer",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles.body\` instead",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.mask\` instead",
          "name": "maskStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.header\` instead",
          "name": "headerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.footer\` instead",
          "name": "footerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.wrapper\` instead",
          "name": "contentWrapperStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated Please use \`styles.content\` instead",
          "name": "drawerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
              ""left"",
              ""right"",
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Drawer",
      "methods": [],
      "name": "Drawer",
      "slots": [
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
        {
          "description": "",
          "name": "footer",
          "params": [],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "menu",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "theme",
                "type": {
                  "type": "union",
                  "value": [
                    ""light"",
                    ""dark"",
                  ],
                },
              },
              {
                "name": "inlineIndent",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "_internalDisableMenuItemTitleTooltip",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "items",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "any",
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "dashed",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "key",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "any",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "danger",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "icon",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "title",
                            "type": {
                              "type": "string",
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "icon",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "theme",
                            "type": {
                              "type": "union",
                              "value": [
                                ""light"",
                                ""dark"",
                              ],
                            },
                          },
                          {
                            "name": "children",
                            "type": {
                              "isRequired": true,
                              "type": "array",
                              "value": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "dashed",
                                        "type": {
                                          "type": "boolean",
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "children",
                                        "type": {
                                          "type": "array",
                                          "value": {
                                            "type": "union",
                                            "value": [
                                              {
                                                "type": "any",
                                              },
                                              {
                                                "type": "struct",
                                                "value": [
                                                  {
                                                    "name": "dashed",
                                                    "type": {
                                                      "type": "boolean",
                                                    },
                                                  },
                                                  {
                                                    "name": "key",
                                                    "type": {
                                                      "type": "union",
                                                      "value": [
                                                        {
                                                          "type": "string",
                                                        },
                                                        {
                                                          "type": "number",
                                                        },
                                                        {
                                                          "type": "any",
                                                        },
                                                      ],
                                                    },
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "children",
                            "type": {
                              "type": "array",
                              "value": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "dashed",
                                        "type": {
                                          "type": "boolean",
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "icon",
                                        "type": {
                                          "type": "any",
                                        },
                                      },
                                      {
                                        "name": "theme",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            ""light"",
                                            ""dark"",
                                          ],
                                        },
                                      },
                                      {
                                        "name": "children",
                                        "type": {
                                          "isRequired": true,
                                          "type": "array",
                                          "value": {
                                            "type": "union",
                                            "value": [
                                              {
                                                "type": "any",
                                              },
                                              {
                                                "type": "struct",
                                                "value": [
                                                  {
                                                    "name": "dashed",
                                                    "type": {
                                                      "type": "boolean",
                                                    },
                                                  },
                                                  {
                                                    "name": "key",
                                                    "type": {
                                                      "type": "union",
                                                      "value": [
                                                        {
                                                          "type": "string",
                                                        },
                                                        {
                                                          "type": "number",
                                                        },
                                                        {
                                                          "type": "any",
                                                        },
                                                      ],
                                                    },
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          {
                            "name": "key",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "any",
                                },
                              ],
                            },
                          },
                        ],
                      },
                    ],
                  },
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                ""click"",
                ""hover"",
                ""contextMenu"",
              ],
            },
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "destroyPopupOnHide",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "topCenter",
              "value": ""topCenter"",
            },
            {
              "label": "bottomCenter",
              "value": ""bottomCenter"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""topCenter"",
              ""bottomCenter"",
            ],
          },
        },
        {
          "description": "",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onOpenChange\` instead",
          "name": "onVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Dropdown",
      "methods": [],
      "name": "Dropdown",
      "slots": [
        {
          "description": "",
          "name": "dropdownRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "originNode",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`menu\` instead",
          "name": "overlay",
          "params": [],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "link",
              "value": ""link"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "dashed",
              "value": ""dashed"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""link"",
              ""text"",
              ""default"",
              ""primary"",
              ""dashed"",
            ],
          },
        },
        {
          "description": "",
          "name": "htmlType",
          "options": [
            {
              "label": "submit",
              "value": ""submit"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "reset",
              "value": ""reset"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""submit"",
              ""button"",
              ""reset"",
            ],
          },
        },
        {
          "description": "",
          "name": "danger",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "delay",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "href",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "buttonsRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "menu",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "theme",
                "type": {
                  "type": "union",
                  "value": [
                    ""light"",
                    ""dark"",
                  ],
                },
              },
              {
                "name": "inlineIndent",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "_internalDisableMenuItemTitleTooltip",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "items",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "any",
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "dashed",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "key",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "any",
                                },
                              ],
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "danger",
                            "type": {
                              "type": "boolean",
                            },
                          },
                          {
                            "name": "icon",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "title",
                            "type": {
                              "type": "string",
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "icon",
                            "type": {
                              "type": "any",
                            },
                          },
                          {
                            "name": "theme",
                            "type": {
                              "type": "union",
                              "value": [
                                ""light"",
                                ""dark"",
                              ],
                            },
                          },
                          {
                            "name": "children",
                            "type": {
                              "isRequired": true,
                              "type": "array",
                              "value": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "dashed",
                                        "type": {
                                          "type": "boolean",
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "children",
                                        "type": {
                                          "type": "array",
                                          "value": {
                                            "type": "union",
                                            "value": [
                                              {
                                                "type": "any",
                                              },
                                              {
                                                "type": "struct",
                                                "value": [
                                                  {
                                                    "name": "dashed",
                                                    "type": {
                                                      "type": "boolean",
                                                    },
                                                  },
                                                  {
                                                    "name": "key",
                                                    "type": {
                                                      "type": "union",
                                                      "value": [
                                                        {
                                                          "type": "string",
                                                        },
                                                        {
                                                          "type": "number",
                                                        },
                                                        {
                                                          "type": "any",
                                                        },
                                                      ],
                                                    },
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                        ],
                      },
                      {
                        "type": "struct",
                        "value": [
                          {
                            "name": "children",
                            "type": {
                              "type": "array",
                              "value": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "dashed",
                                        "type": {
                                          "type": "boolean",
                                        },
                                      },
                                      {
                                        "name": "key",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            {
                                              "type": "string",
                                            },
                                            {
                                              "type": "number",
                                            },
                                            {
                                              "type": "any",
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  {
                                    "type": "struct",
                                    "value": [
                                      {
                                        "name": "icon",
                                        "type": {
                                          "type": "any",
                                        },
                                      },
                                      {
                                        "name": "theme",
                                        "type": {
                                          "type": "union",
                                          "value": [
                                            ""light"",
                                            ""dark"",
                                          ],
                                        },
                                      },
                                      {
                                        "name": "children",
                                        "type": {
                                          "isRequired": true,
                                          "type": "array",
                                          "value": {
                                            "type": "union",
                                            "value": [
                                              {
                                                "type": "any",
                                              },
                                              {
                                                "type": "struct",
                                                "value": [
                                                  {
                                                    "name": "dashed",
                                                    "type": {
                                                      "type": "boolean",
                                                    },
                                                  },
                                                  {
                                                    "name": "key",
                                                    "type": {
                                                      "type": "union",
                                                      "value": [
                                                        {
                                                          "type": "string",
                                                        },
                                                        {
                                                          "type": "number",
                                                        },
                                                        {
                                                          "type": "any",
                                                        },
                                                      ],
                                                    },
                                                  },
                                                ],
                                              },
                                            ],
                                          },
                                        },
                                      },
                                    ],
                                  },
                                ],
                              },
                            },
                          },
                          {
                            "name": "key",
                            "type": {
                              "type": "union",
                              "value": [
                                {
                                  "type": "string",
                                },
                                {
                                  "type": "number",
                                },
                                {
                                  "type": "any",
                                },
                              ],
                            },
                          },
                        ],
                      },
                    ],
                  },
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                ""click"",
                ""hover"",
                ""contextMenu"",
              ],
            },
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "destroyPopupOnHide",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "topCenter",
              "value": ""topCenter"",
            },
            {
              "label": "bottomCenter",
              "value": ""bottomCenter"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""topCenter"",
              ""bottomCenter"",
            ],
          },
        },
        {
          "description": "",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onOpenChange\` instead",
          "name": "onVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Dropdown",
      "methods": [],
      "name": "Button",
      "slots": [
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "dropdownRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "originNode",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`menu\` instead",
          "name": "overlay",
          "params": [],
        },
      ],
      "subName": "Button",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "trigger",
          "options": [
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""click"",
              ""hover"",
            ],
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""primary"",
            ],
          },
        },
        {
          "description": "",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
        {
          "description": "",
          "name": "href",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "badge",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""button"",
          "description": "@since 5.21.0",
          "name": "htmlType",
          "options": [
            {
              "label": "submit",
              "value": ""submit"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "reset",
              "value": ""reset"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""submit"",
              ""button"",
              ""reset"",
            ],
          },
        },
        {
          "description": "",
          "name": "dangerouslySetInnerHTML",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "__html",
                "type": {
                  "isRequired": true,
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCopy",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCopyCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPaste",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPasteCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionUpdate",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionUpdateCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocusCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlurCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeInputCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInputCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onReset",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResetCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSubmit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSubmitCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInvalid",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInvalidCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoad",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onError",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onErrorCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onKeyUp\` or \`onKeyDown\` instead",
          "name": "onKeyPress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onKeyUpCapture\` or \`onKeyDownCapture\` instead",
          "name": "onKeyPressCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAbort",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAbortCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlay",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayThrough",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayThroughCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDurationChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDurationChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEmptied",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEmptiedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEncrypted",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEncryptedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEnded",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEndedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedData",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedDataCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedMetadata",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedMetadataCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPause",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPauseCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlay",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlayCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlaying",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlayingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onProgress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onProgressCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRateChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRateChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResize",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResizeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeeked",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeekedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeeking",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeekingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStalled",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStalledCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSuspend",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSuspendCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTimeUpdate",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTimeUpdateCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onVolumeChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onVolumeChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWaiting",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWaitingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAuxClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAuxClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenu",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenuCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrag",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnterCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragExit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragExitCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeaveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrop",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDropCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelectCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onGotPointerCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onGotPointerCaptureCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLostPointerCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLostPointerCaptureCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScrollCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWheel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWheelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationIteration",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationIterationCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onToggle",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeToggle",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionRun",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionRunCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "FloatButton",
      "methods": [],
      "name": "Group",
      "slots": [
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "tooltip",
          "params": [],
        },
      ],
      "subName": "Group",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "visibilityHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "duration",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""primary"",
            ],
          },
        },
        {
          "description": "",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
        {
          "description": "",
          "name": "href",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""button"",
          "description": "@since 5.21.0",
          "name": "htmlType",
          "options": [
            {
              "label": "submit",
              "value": ""submit"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "reset",
              "value": ""reset"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""submit"",
              ""button"",
              ""reset"",
            ],
          },
        },
        {
          "description": "",
          "name": "dangerouslySetInnerHTML",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "__html",
                "type": {
                  "isRequired": true,
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "badge",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onError",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onKeyUp\` or \`onKeyDown\` instead",
          "name": "onKeyPress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCopy",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCopyCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPaste",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPasteCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionUpdate",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionUpdateCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocusCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlurCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeInputCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInputCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onReset",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResetCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSubmit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSubmitCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInvalid",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInvalidCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoad",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onErrorCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onKeyUpCapture\` or \`onKeyDownCapture\` instead",
          "name": "onKeyPressCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAbort",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAbortCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlay",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayThrough",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayThroughCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDurationChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDurationChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEmptied",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEmptiedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEncrypted",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEncryptedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEnded",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEndedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedData",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedDataCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedMetadata",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedMetadataCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPause",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPauseCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlay",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlayCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlaying",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlayingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onProgress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onProgressCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRateChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRateChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResize",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResizeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeeked",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeekedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeeking",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeekingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStalled",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStalledCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSuspend",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSuspendCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTimeUpdate",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTimeUpdateCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onVolumeChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onVolumeChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWaiting",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWaitingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAuxClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAuxClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenu",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenuCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrag",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnterCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragExit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragExitCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeaveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrop",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDropCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelectCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onGotPointerCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onGotPointerCaptureCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLostPointerCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLostPointerCaptureCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScrollCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWheel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWheelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationIteration",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationIterationCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onToggle",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeToggle",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionRun",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionRunCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "FloatButton",
      "methods": [],
      "name": "BackTop",
      "slots": [
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "tooltip",
          "params": [],
        },
      ],
      "subName": "BackTop",
    },
    {
      "attrs": [
        {
          "description": "Convert to FloatGroup when configured",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "backTop",
                  "type": {
                    "type": "boolean",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "backTop",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""primary"",
            ],
          },
        },
        {
          "description": "",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
        {
          "description": "",
          "name": "href",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""button"",
          "description": "@since 5.21.0",
          "name": "htmlType",
          "options": [
            {
              "label": "submit",
              "value": ""submit"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "reset",
              "value": ""reset"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""submit"",
              ""button"",
              ""reset"",
            ],
          },
        },
        {
          "description": "",
          "name": "dangerouslySetInnerHTML",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "__html",
                "type": {
                  "isRequired": true,
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "badge",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "trigger",
          "options": [
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""click"",
              ""hover"",
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onError",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onKeyUp\` or \`onKeyDown\` instead",
          "name": "onKeyPress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCopy",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCopyCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPaste",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPasteCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionUpdate",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCompositionUpdateCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocusCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlurCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeInputCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInputCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onReset",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResetCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSubmit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSubmitCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInvalid",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInvalidCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoad",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onErrorCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Use \`onKeyUpCapture\` or \`onKeyDownCapture\` instead",
          "name": "onKeyPressCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAbort",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAbortCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlay",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayThrough",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCanPlayThroughCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDurationChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDurationChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEmptied",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEmptiedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEncrypted",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEncryptedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEnded",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onEndedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedData",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedDataCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedMetadata",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadedMetadataCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoadStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPause",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPauseCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlay",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlayCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlaying",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPlayingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onProgress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onProgressCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRateChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRateChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResize",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onResizeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeeked",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeekedCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeeking",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSeekingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStalled",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStalledCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSuspend",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSuspendCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTimeUpdate",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTimeUpdateCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onVolumeChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onVolumeChangeCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWaiting",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWaitingCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAuxClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAuxClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenu",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenuCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClickCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrag",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnterCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragExit",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragExitCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeaveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrop",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDropCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelectCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTouchStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerDownCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerMoveCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerUpCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOverCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOut",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPointerOutCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onGotPointerCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onGotPointerCaptureCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLostPointerCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLostPointerCaptureCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScrollCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWheel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onWheelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationIteration",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onAnimationIterationCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onToggle",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBeforeToggle",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionCancelCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionEndCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionRun",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionRunCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTransitionStartCapture",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "FloatButton",
      "methods": [],
      "name": "FloatButton",
      "slots": [
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "tooltip",
          "params": [],
        },
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "noStyle",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hasFeedback",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "icons",
                    "type": {
                      "isRequired": true,
                      "type": "function",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "validateStatus",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "validating",
              "value": ""validating"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""success"",
              ""warning"",
              ""error"",
              ""validating"",
            ],
          },
        },
        {
          "description": "",
          "name": "required",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "hidden",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "initialValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "messageVariables",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "@deprecated No need anymore",
          "name": "fieldKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "layout",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "vertical",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "colon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "labelAlign",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "labelCol",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "flex",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                    {
                      "type": "union",
                      "value": [
                        ""none"",
                        ""auto"",
                      ],
                    },
                  ],
                },
              },
              {
                "name": "span",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "order",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "push",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "pull",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "prefixCls",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "htmlFor",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "wrapperCol",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "flex",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                    {
                      "type": "union",
                      "value": [
                        ""none"",
                        ""auto"",
                      ],
                    },
                  ],
                },
              },
              {
                "name": "span",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "order",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "push",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "pull",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
              {
                "name": "prefixCls",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "validating",
              "value": ""validating"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""success"",
              ""warning"",
              ""error"",
              ""validating"",
            ],
          },
        },
        {
          "description": "",
          "name": "fieldId",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "validateTrigger",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "union",
                "value": [
                  "false",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "preserve",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Set up \`dependencies\` field.",
          "name": "dependencies",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "getValueFromEvent",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "normalize",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "rules",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "any",
                },
                {
                  "type": "struct",
                  "value": [
                    {
                      "name": "type",
                      "type": {
                        "isRequired": true,
                        "type": "union",
                        "value": [
                          ""array"",
                        ],
                      },
                    },
                    {
                      "name": "defaultField",
                      "type": {
                        "type": "any",
                      },
                    },
                  ],
                },
                {
                  "type": "function",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "shouldUpdate",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "Trigger will after configured milliseconds.",
          "name": "validateDebounce",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "validateFirst",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "union",
                "value": [
                  ""parallel"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "valuePropName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "getValueProps",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@private Passed by Form.List props. Do not use since it will break by path check.",
          "name": "isListField",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@private Passed by Form.List props. Do not use since it will break by path check.",
          "name": "isList",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onReset",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMetaChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Form",
      "methods": [],
      "name": "Item",
      "slots": [
        {
          "description": "",
          "name": "tooltip",
          "params": [],
        },
        {
          "description": "",
          "name": "label",
          "params": [],
        },
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
        {
          "description": "",
          "name": "help",
          "params": [],
        },
      ],
      "subName": "Item",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "isRequired": true,
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "rules",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "warningOnly",
                  "type": {
                    "type": "boolean",
                  },
                },
                {
                  "name": "message",
                  "type": {
                    "type": "union",
                    "value": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
                {
                  "name": "validator",
                  "type": {
                    "isRequired": true,
                    "type": "function",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "initialValue",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Form",
      "methods": [],
      "name": "List",
      "slots": [],
      "subName": "List",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "fieldId",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "helpStatus",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "validating",
              "value": ""validating"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""success"",
              ""warning"",
              ""error"",
              ""validating"",
            ],
          },
        },
        {
          "description": "",
          "name": "errors",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "warnings",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onVisibleChanged",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Form",
      "methods": [],
      "name": "ErrorList",
      "slots": [
        {
          "description": "",
          "name": "help",
          "params": [],
        },
      ],
      "subName": "ErrorList",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "previewPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "icons",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "rotateLeft",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "rotateRight",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "zoomIn",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "zoomOut",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "close",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "left",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "right",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "flipX",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "flipY",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "items",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "fallback",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "preview",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "current",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "countRender",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "toolbarRender",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "imageRender",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onVisibleChange",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onChange",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Image",
      "methods": [],
      "name": "PreviewGroup",
      "slots": [],
      "subName": "PreviewGroup",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""large"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "compact",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Input",
      "methods": [],
      "name": "Group",
      "slots": [],
      "subName": "Group",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "inputPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "@deprecated Use \`variant="borderless"\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onSearch",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Input",
      "methods": [],
      "name": "Search",
      "slots": [
        {
          "description": "",
          "name": "enterButton",
          "params": [],
        },
      ],
      "subName": "Search",
    },
    {
      "attrs": [
        {
          "description": "@deprecated Use \`variant\` instead",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Input",
      "methods": [],
      "name": "TextArea",
      "slots": [],
      "subName": "TextArea",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "inputPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "action",
          "options": [
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""click"",
              ""hover"",
            ],
          },
        },
        {
          "description": "",
          "name": "visibilityToggle",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "visible",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onVisibleChange",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "@deprecated Use \`variant="borderless"\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Input",
      "methods": [],
      "name": "Password",
      "slots": [
        {
          "description": "",
          "name": "iconRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "visible",
                "propType": "bool",
              },
              "type": {
                "type": "boolean",
              },
            },
          ],
        },
      ],
      "subName": "Password",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "length",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "formatter",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "mask",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onInput",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Input",
      "methods": [],
      "name": "OTP",
      "slots": [],
      "subName": "OTP",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Use \`variant\` instead.",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              """",
              ""warning"",
              ""error"",
            ],
          },
        },
        {
          "description": "",
          "name": "controls",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "upIcon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "downIcon",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": ""outlined"",
          "description": "@since 5.13.0",
          "name": "variant",
          "options": [
            {
              "label": "outlined",
              "value": ""outlined"",
            },
            {
              "label": "borderless",
              "value": ""borderless"",
            },
            {
              "label": "filled",
              "value": ""filled"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""outlined"",
              ""borderless"",
              ""filled"",
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "InputNumber",
      "methods": [],
      "name": "InputNumber",
      "slots": [
        {
          "description": "",
          "name": "addonBefore",
          "params": [],
        },
        {
          "description": "",
          "name": "addonAfter",
          "params": [],
        },
        {
          "description": "",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "",
          "name": "suffix",
          "params": [],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "suffixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hasSider",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Layout",
      "methods": [],
      "name": "Header",
      "slots": [],
      "subName": "Header",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "suffixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hasSider",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Layout",
      "methods": [],
      "name": "Footer",
      "slots": [],
      "subName": "Footer",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "suffixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hasSider",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Layout",
      "methods": [],
      "name": "Content",
      "slots": [],
      "subName": "Content",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "collapsible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "collapsed",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultCollapsed",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "reverseArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "zeroWidthTriggerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "width",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "collapsedWidth",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "breakpoint",
          "options": [
            {
              "label": "xxl",
              "value": ""xxl"",
            },
            {
              "label": "xl",
              "value": ""xl"",
            },
            {
              "label": "lg",
              "value": ""lg"",
            },
            {
              "label": "md",
              "value": ""md"",
            },
            {
              "label": "sm",
              "value": ""sm"",
            },
            {
              "label": "xs",
              "value": ""xs"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""xxl"",
              ""xl"",
              ""lg"",
              ""md"",
              ""sm"",
              ""xs"",
            ],
          },
        },
        {
          "description": "",
          "name": "theme",
          "options": [
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "dark",
              "value": ""dark"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""light"",
              ""dark"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onCollapse",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBreakpoint",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Layout",
      "methods": [],
      "name": "Sider",
      "slots": [
        {
          "description": "",
          "name": "trigger",
          "params": [],
        },
      ],
      "subName": "Sider",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "isRequired": true,
            "type": "struct",
            "value": [
              {
                "name": "siderCollapsed",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Layout",
      "methods": [],
      "name": "Layout",
      "slots": [],
      "subName": "_InternalSiderContext",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "actions",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "extra",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "actions",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "extra",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "actions",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "colStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "List",
      "methods": [],
      "name": "Item",
      "slots": [
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
      ],
      "subName": "Item",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Mentions",
      "methods": [],
      "name": "Option",
      "slots": [],
      "subName": "Option",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dashed",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Menu",
      "methods": [],
      "name": "Divider",
      "slots": [],
      "subName": "Divider",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "danger",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@private Internal filled key. Do not set it directly",
          "name": "eventKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@private Do not use. Private warning empty usage",
          "name": "warnKey",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated No place to use this. Should remove",
          "name": "attribute",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Menu",
      "methods": [],
      "name": "Item",
      "slots": [
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "extra",
          "params": [],
        },
        {
          "description": "",
          "name": "itemIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "isSelected",
                      "propType": "bool",
                    },
                    {
                      "name": "isOpen",
                      "propType": "bool",
                    },
                    {
                      "name": "isSubMenu",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "isSelected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isOpen",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isSubMenu",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "Item",
    },
    {
      "attrs": [
        {
          "description": "@deprecated No longer needed, it can now be safely deleted.",
          "name": "level",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "popupStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "popupOffset",
          "type": {
            "type": "array",
            "value": {
              "type": "number",
            },
          },
        },
        {
          "description": "",
          "name": "theme",
          "options": [
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "dark",
              "value": ""dark"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""light"",
              ""dark"",
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTitleClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTitleMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onTitleMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Menu",
      "methods": [],
      "name": "SubMenu",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "expandIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "isSelected",
                      "propType": "bool",
                    },
                    {
                      "name": "isOpen",
                      "propType": "bool",
                    },
                    {
                      "name": "isSubMenu",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "isSelected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isOpen",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isSubMenu",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "itemIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "isSelected",
                      "propType": "bool",
                    },
                    {
                      "name": "isOpen",
                      "propType": "bool",
                    },
                    {
                      "name": "isSubMenu",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "isSelected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isOpen",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isSubMenu",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "SubMenu",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@private Internal filled key. Do not set it directly",
          "name": "eventKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@private Do not use. Private warning empty usage",
          "name": "warnKey",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Menu",
      "methods": [],
      "name": "ItemGroup",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
      ],
      "subName": "ItemGroup",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "closable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "afterClose",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "animation",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "footer",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "mask",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "content",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "wrapper",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "header",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "footer",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "mask",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "wrapper",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "content",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "maskStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "width",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "mask",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "maskClosable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "afterOpenChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "destroyOnClose",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getContainer",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "function",
              },
              {
                "type": "union",
                "value": [
                  "false",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "panelRef",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "mousePosition",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "x",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "y",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "maskTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "maskAnimation",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "bodyProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "maskProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "focusTriggerAfterClose",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "ariaId",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "holderRef",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "warn",
              "value": ""warn"",
            },
            {
              "label": "confirm",
              "value": ""confirm"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""info"",
              ""warning"",
              ""error"",
              ""warn"",
              ""confirm"",
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseUp",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Modal",
      "methods": [],
      "name": "Modal",
      "slots": [
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "modalRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "node",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "footer",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "originNode",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "extra",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "OkBtn",
                      "propType": {
                        "isRequired": true,
                        "type": "object",
                      },
                    },
                    {
                      "name": "CancelBtn",
                      "propType": {
                        "isRequired": true,
                        "type": "object",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "OkBtn",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "CancelBtn",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "close",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "okType",
          "options": [
            {
              "label": "link",
              "value": ""link"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "dashed",
              "value": ""dashed"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""link"",
              ""text"",
              ""default"",
              ""primary"",
              ""dashed"",
              ""danger"",
            ],
          },
        },
        {
          "description": "",
          "name": "okButtonProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "href",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "htmlType",
                "type": {
                  "type": "union",
                  "value": [
                    ""submit"",
                    ""button"",
                    ""reset"",
                  ],
                },
              },
              {
                "name": "autoInsertSpace",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "cancelButtonProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "href",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "htmlType",
                "type": {
                  "type": "union",
                  "value": [
                    ""submit"",
                    ""button"",
                    ""reset"",
                  ],
                },
              },
              {
                "name": "autoInsertSpace",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "showCancel",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onConfirm",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCancel",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPopupClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Popconfirm",
      "methods": [],
      "name": "Popconfirm",
      "slots": [
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "okText",
          "params": [],
        },
        {
          "description": "",
          "name": "cancelText",
          "params": [],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "content",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead.",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""blue"",
                  ""purple"",
                  ""cyan"",
                  ""green"",
                  ""magenta"",
                  ""pink"",
                  ""red"",
                  ""orange"",
                  ""yellow"",
                  ""volcano"",
                  ""geekblue"",
                  ""lime"",
                  ""gold"",
                  ""blue-inverse"",
                  ""purple-inverse"",
                  ""cyan-inverse"",
                  ""green-inverse"",
                  ""magenta-inverse"",
                  ""pink-inverse"",
                  ""red-inverse"",
                  ""orange-inverse"",
                  ""yellow-inverse"",
                  ""volcano-inverse"",
                  ""geekblue-inverse"",
                  ""lime-inverse"",
                  ""gold-inverse"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "arrowPointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`classNames={{ root: {} }}\`",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ root: {} }}\`",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    ""focus"",
                    ""click"",
                    ""hover"",
                    ""contextMenu"",
                  ],
                },
              },
              {
                "type": "union",
                "value": [
                  ""focus"",
                  ""click"",
                  ""hover"",
                  ""contextMenu"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "popupVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "keepParent",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`defaultOpen\` instead.",
          "name": "defaultVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`afterOpenChange\` instead.",
          "name": "afterVisibleChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Trigger will memo content when close.",
          "name": "fresh",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Config popup motion",
          "name": "motion",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "motionName",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "appear",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enter",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leave",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "appearActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enterActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leaveActive",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "visible",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionAppear",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionEnter",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeaveImmediately",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionDeadline",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "forceRender",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "removeOnLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "leavedClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "eventProps",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onAppearPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeavePrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onVisibleChanged",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "internalRef",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getTooltipContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ body: {} }}\`",
          "name": "overlayInnerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "afterOpenChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`arrow={{ pointAtCenter: true }}\` instead.",
          "name": "arrowPointAtCenter",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onPopupAlign",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onOpenChange\` instead.",
          "name": "onVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Popover",
      "methods": [],
      "name": "Popover",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "overlay",
          "params": [],
        },
        {
          "description": "",
          "name": "arrowContent",
          "params": [],
        },
        {
          "description": "",
          "name": "content",
          "params": [],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "optionType",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""button"",
            ],
          },
        },
        {
          "description": "",
          "name": "buttonStyle",
          "options": [
            {
              "label": "solid",
              "value": ""solid"",
            },
            {
              "label": "outline",
              "value": ""outline"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""solid"",
              ""outline"",
            ],
          },
        },
        {
          "description": "",
          "name": "block",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "struct",
                  "value": [
                    {
                      "name": "label",
                      "type": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "value",
                      "type": {
                        "isRequired": true,
                        "type": "any",
                      },
                    },
                    {
                      "name": "style",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "disabled",
                      "type": {
                        "type": "boolean",
                      },
                    },
                    {
                      "name": "title",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "id",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "onChange",
                      "type": {
                        "type": "function",
                      },
                    },
                    {
                      "name": "required",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Radio",
      "methods": [],
      "name": "Group",
      "slots": [],
      "subName": "Group",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultChecked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "skipGroup",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "required",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyPress",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Radio",
      "methods": [],
      "name": "Button",
      "slots": [],
      "subName": "Button",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""large"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "block",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "round",
              "value": ""round"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
              ""default"",
              ""round"",
            ],
          },
        },
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Skeleton",
      "methods": [],
      "name": "Button",
      "slots": [],
      "subName": "Button",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "union",
                "value": [
                  ""small"",
                  ""large"",
                  ""default"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Skeleton",
      "methods": [],
      "name": "Avatar",
      "slots": [],
      "subName": "Avatar",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""large"",
              ""default"",
            ],
          },
        },
        {
          "description": "",
          "name": "block",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Skeleton",
      "methods": [],
      "name": "Input",
      "slots": [],
      "subName": "Input",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Skeleton",
      "methods": [],
      "name": "Image",
      "slots": [],
      "subName": "Image",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "fullSize",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Skeleton",
      "methods": [],
      "name": "Node",
      "slots": [],
      "subName": "Node",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "options": [
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""small"",
              ""middle"",
              ""large"",
            ],
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "description": "",
          "name": "block",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Space",
      "methods": [],
      "name": "Compact",
      "slots": [],
      "subName": "Compact",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "format",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "role",
          "type": {
            "isRequired": true,
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "valueStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "decimalSeparator",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "groupSeparator",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "precision",
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onFinish",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Statistic",
      "methods": [],
      "name": "Countdown",
      "slots": [
        {
          "description": "",
          "name": "valueRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "node",
                "propType": "node",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "",
          "name": "suffix",
          "params": [],
        },
        {
          "description": "",
          "name": "formatter",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "value",
                "propType": {
                  "type": "oneOfType",
                  "value": [
                    "string",
                    "number",
                  ],
                },
              },
              "type": {
                "type": "union",
                "value": [
                  {
                    "type": "string",
                  },
                  {
                    "type": "number",
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "config",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "formatter",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "object",
                          {
                            "type": "oneOf",
                            "value": [
                              false,
                              "number",
                              "countdown",
                            ],
                          },
                        ],
                      },
                    },
                    {
                      "name": "decimalSeparator",
                      "propType": "string",
                    },
                    {
                      "name": "groupSeparator",
                      "propType": "string",
                    },
                    {
                      "name": "precision",
                      "propType": "number",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "formatter",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "union",
                          "value": [
                            "false",
                            ""number"",
                            ""countdown"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "decimalSeparator",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "groupSeparator",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "precision",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "Countdown",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapperStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "iconPrefix",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "stepIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "stepNumber",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "status",
          "options": [
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "process",
              "value": ""process"",
            },
            {
              "label": "finish",
              "value": ""finish"",
            },
            {
              "label": "wait",
              "value": ""wait"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""error"",
              ""process"",
              ""finish"",
              ""wait"",
            ],
          },
        },
        {
          "description": "",
          "name": "icons",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "finish",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
              {
                "name": "error",
                "type": {
                  "isRequired": true,
                  "type": "any",
                },
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onStepClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Steps",
      "methods": [],
      "name": "Step",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "subTitle",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "tailContent",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
        {
          "description": "",
          "name": "progressDot",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "iconDot",
                "propType": "any",
              },
              "type": {
                "type": "any",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "info",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "index",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                    {
                      "name": "status",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOf",
                        "value": [
                          "error",
                          "process",
                          "finish",
                          "wait",
                        ],
                      },
                    },
                    {
                      "name": "title",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "description",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "index",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "status",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        ""error"",
                        ""process"",
                        ""finish"",
                        ""wait"",
                      ],
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "description",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "stepIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "info",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "index",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                    {
                      "name": "status",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOf",
                        "value": [
                          "error",
                          "process",
                          "finish",
                          "wait",
                        ],
                      },
                    },
                    {
                      "name": "title",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "description",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "node",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "index",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "status",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        ""error"",
                        ""process"",
                        ""finish"",
                        ""wait"",
                      ],
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "description",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "node",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "render",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "stepItem",
                "propType": "element",
              },
              "type": {
                "type": "any",
              },
            },
          ],
        },
      ],
      "subName": "Step",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "fixed",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "union",
                "value": [
                  ""top"",
                  ""bottom"",
                ],
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Table",
      "methods": [],
      "name": "Summary",
      "slots": [],
      "subName": "Summary",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "closable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tabKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "animated",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "destroyInactiveTabPane",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Tabs",
      "methods": [],
      "name": "TabPane",
      "slots": [
        {
          "description": "",
          "name": "tab",
          "params": [],
        },
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [],
        },
      ],
      "subName": "TabPane",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "It is an absolute controlled component and has no uncontrolled mode.",
          "name": "checked",
          "type": {
            "isRequired": true,
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tag",
      "methods": [],
      "name": "CheckableTag",
      "slots": [],
      "subName": "CheckableTag",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "TimePicker",
      "methods": [],
      "name": "RangePicker",
      "slots": [],
      "subName": "RangePicker",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""blue"",
                  ""green"",
                  ""red"",
                  ""gray"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "pending",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "position",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Timeline",
      "methods": [],
      "name": "Item",
      "slots": [
        {
          "description": "",
          "name": "dot",
          "params": [],
        },
        {
          "description": "",
          "name": "label",
          "params": [],
        },
      ],
      "subName": "Item",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "open",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "animation",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "@deprecated Use \`motion\` instead",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
            ],
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "content",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`open\` instead.",
          "name": "visible",
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""blue"",
                  ""purple"",
                  ""cyan"",
                  ""green"",
                  ""magenta"",
                  ""pink"",
                  ""red"",
                  ""orange"",
                  ""yellow"",
                  ""volcano"",
                  ""geekblue"",
                  ""lime"",
                  ""gold"",
                  ""blue-inverse"",
                  ""purple-inverse"",
                  ""cyan-inverse"",
                  ""green-inverse"",
                  ""magenta-inverse"",
                  ""pink-inverse"",
                  ""red-inverse"",
                  ""orange-inverse"",
                  ""yellow-inverse"",
                  ""volcano-inverse"",
                  ""geekblue-inverse"",
                  ""lime-inverse"",
                  ""gold-inverse"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "classNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "styles",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "root",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "body",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "arrowPointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`classNames={{ root: {} }}\`",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "points",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "_experimental",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "offset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "targetOffset",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "union",
                    "value": [
                      {
                        "type": "number",
                      },
                      {
                        "type": "any",
                      },
                    ],
                  },
                },
              },
              {
                "name": "overflow",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "adjustX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "adjustY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftX",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                    {
                      "name": "shiftY",
                      "type": {
                        "type": "union",
                        "value": [
                          {
                            "type": "number",
                          },
                          {
                            "type": "boolean",
                          },
                        ],
                      },
                    },
                  ],
                },
              },
              {
                "name": "autoArrow",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "htmlRegion",
                "type": {
                  "type": "union",
                  "value": [
                    ""visible"",
                    ""scroll"",
                    ""visibleFirst"",
                  ],
                },
              },
              {
                "name": "dynamicInset",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssRight",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssBottom",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "useCssTransform",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "ignoreShake",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ root: {} }}\`",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "trigger",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    ""focus"",
                    ""click"",
                    ""hover"",
                    ""contextMenu"",
                  ],
                },
              },
              {
                "type": "union",
                "value": [
                  ""focus"",
                  ""click"",
                  ""hover"",
                  ""contextMenu"",
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "popupVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "adjustX",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                  {
                    "name": "adjustY",
                    "type": {
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "keepParent",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "@deprecated Please use \`defaultOpen\` instead.",
          "name": "defaultVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "@deprecated Please use \`afterOpenChange\` instead.",
          "name": "afterVisibleChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Trigger will memo content when close.",
          "name": "fresh",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Config popup motion",
          "name": "motion",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "motionName",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "appear",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enter",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leave",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "appearActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "enterActive",
                          "type": {
                            "type": "string",
                          },
                        },
                        {
                          "name": "leaveActive",
                          "type": {
                            "type": "string",
                          },
                        },
                      ],
                    },
                  ],
                },
              },
              {
                "name": "visible",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionAppear",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionEnter",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionLeaveImmediately",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "motionDeadline",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "forceRender",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "removeOnLeave",
                "type": {
                  "type": "boolean",
                },
              },
              {
                "name": "leavedClassName",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "eventProps",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onAppearPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterPrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeavePrepare",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveStart",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveActive",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onAppearEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onEnterEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onLeaveEnd",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "onVisibleChanged",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "internalRef",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "any",
                    },
                    {
                      "type": "function",
                    },
                  ],
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "function",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "getTooltipContainer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`styles={{ body: {} }}\`",
          "name": "overlayInnerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "afterOpenChange",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`arrow={{ pointAtCenter: true }}\` instead.",
          "name": "arrowPointAtCenter",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onPopupAlign",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "@deprecated Please use \`onOpenChange\` instead.",
          "name": "onVisibleChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onOpenChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tooltip",
      "methods": [],
      "name": "Tooltip",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "overlay",
          "params": [],
        },
        {
          "description": "",
          "name": "arrowContent",
          "params": [],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "nextButtonProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "children",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onClick",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prevButtonProps",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "children",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "onClick",
                "type": {
                  "type": "function",
                },
              },
              {
                "name": "className",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "style",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""primary"",
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "total",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "current",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "arrow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "pointAtCenter",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "topLeft",
              "value": ""topLeft"",
            },
            {
              "label": "topRight",
              "value": ""topRight"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottomLeft",
              "value": ""bottomLeft"",
            },
            {
              "label": "bottomRight",
              "value": ""bottomRight"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "leftTop",
              "value": ""leftTop"",
            },
            {
              "label": "leftBottom",
              "value": ""leftBottom"",
            },
            {
              "label": "rightTop",
              "value": ""rightTop"",
            },
            {
              "label": "rightBottom",
              "value": ""rightBottom"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""topLeft"",
              ""topRight"",
              ""bottom"",
              ""bottomLeft"",
              ""bottomRight"",
              ""left"",
              ""right"",
              ""leftTop"",
              ""leftBottom"",
              ""rightTop"",
              ""rightBottom"",
              ""center"",
            ],
          },
        },
        {
          "description": "",
          "name": "mask",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "color",
                    "type": {
                      "type": "string",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "scrollIntoViewOptions",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "block",
                    "type": {
                      "type": "union",
                      "value": [
                        ""start"",
                        ""end"",
                        ""center"",
                        ""nearest"",
                      ],
                    },
                  },
                  {
                    "name": "inline",
                    "type": {
                      "type": "union",
                      "value": [
                        ""start"",
                        ""end"",
                        ""center"",
                        ""nearest"",
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "closable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClose",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFinish",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPrev",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onNext",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tour",
      "methods": [],
      "name": "Tour",
      "slots": [
        {
          "description": "",
          "name": "cover",
          "params": [],
        },
        {
          "description": "",
          "name": "indicatorsRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "current",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "total",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "renderPanel",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "step",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "prefixCls",
                      "propType": "string",
                    },
                    {
                      "name": "total",
                      "propType": "number",
                    },
                    {
                      "name": "current",
                      "propType": "number",
                    },
                    {
                      "name": "onClose",
                      "propType": "func",
                    },
                    {
                      "name": "onFinish",
                      "propType": "func",
                    },
                    {
                      "name": "renderPanel",
                      "propType": "object",
                    },
                    {
                      "name": "onPrev",
                      "propType": "func",
                    },
                    {
                      "name": "onNext",
                      "propType": "func",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "total",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "current",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "onClose",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onFinish",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "renderPanel",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "onPrev",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onNext",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
            },
            {
              "description": undefined,
              "name": {
                "name": "current",
                "propType": "number",
              },
              "type": {
                "type": "number",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "closeIcon",
          "params": [],
        },
      ],
      "subName": "_InternalPanelDoNotUseOrYouWillBeFired",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "isRequired": true,
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dataSource",
          "type": {
            "isRequired": true,
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "filterOption",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "checkedKeys",
          "type": {
            "isRequired": true,
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "handleFilter",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "handleClear",
          "type": {
            "isRequired": true,
            "type": "function",
          },
        },
        {
          "description": "Render item",
          "name": "render",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "placeholder",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "defaultValue",
                    "type": {
                      "type": "string",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "searchPlaceholder",
          "type": {
            "isRequired": true,
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "itemUnit",
          "type": {
            "isRequired": true,
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "itemsUnit",
          "type": {
            "isRequired": true,
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "renderList",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "footer",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "type": {
            "isRequired": true,
            "type": "union",
            "value": [
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "description": "",
          "name": "showSelectAll",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showRemove",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "pagination",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "pageSize",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "simple",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "showSizeChanger",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "showLessItems",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "titles",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "remove",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "selectAll",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "deselectAll",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "selectCurrent",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "selectInvert",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "removeAll",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "removeCurrent",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onItemSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "isRequired": true,
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onItemSelectAll",
          "params": [
            {
              "name": "event",
              "type": {
                "isRequired": true,
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onItemRemove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "isRequired": true,
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Transfer",
      "methods": [],
      "name": "List",
      "slots": [
        {
          "description": "",
          "name": "titleText",
          "params": [],
        },
        {
          "description": "",
          "name": "selectAllLabel",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "info",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "selectedCount",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                    {
                      "name": "totalCount",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "selectedCount",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "totalCount",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "selectionsIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "notFoundContent",
          "params": [],
        },
      ],
      "subName": "List",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "handleClear",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Transfer",
      "methods": [],
      "name": "Search",
      "slots": [],
      "subName": "Search",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "leftArrowText",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rightArrowText",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "moveToLeft",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "moveToRight",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "leftActive",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rightActive",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "oneWay",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Transfer",
      "methods": [],
      "name": "Operation",
      "slots": [],
      "subName": "Operation",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "eventKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "expanded",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "selected",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loaded",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "halfChecked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dragOver",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dragOverGapTop",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dragOverGapBottom",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "pos",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "domRef",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "New added in Tree for easy data access",
          "name": "data",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "isStart",
          "type": {
            "type": "array",
            "value": {
              "type": "boolean",
            },
          },
        },
        {
          "description": "",
          "name": "isEnd",
          "type": {
            "type": "array",
            "value": {
              "type": "boolean",
            },
          },
        },
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "isLeaf",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checkable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "selectable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disableCheckbox",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onMouseMove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tree",
      "methods": [],
      "name": "TreeNode",
      "slots": [
        {
          "description": "",
          "name": "title",
          "params": [],
        },
        {
          "description": "",
          "name": "icon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "eventKey",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "prefixCls",
                      "propType": "string",
                    },
                    {
                      "name": "className",
                      "propType": "string",
                    },
                    {
                      "name": "style",
                      "propType": "object",
                    },
                    {
                      "name": "id",
                      "propType": "string",
                    },
                    {
                      "name": "expanded",
                      "propType": "bool",
                    },
                    {
                      "name": "selected",
                      "propType": "bool",
                    },
                    {
                      "name": "checked",
                      "propType": "bool",
                    },
                    {
                      "name": "loaded",
                      "propType": "bool",
                    },
                    {
                      "name": "loading",
                      "propType": "bool",
                    },
                    {
                      "name": "halfChecked",
                      "propType": "bool",
                    },
                    {
                      "name": "title",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "data",
                                "propType": "object",
                              },
                            ],
                            "raw": "(data: TreeDataType) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "dragOver",
                      "propType": "bool",
                    },
                    {
                      "name": "dragOverGapTop",
                      "propType": "bool",
                    },
                    {
                      "name": "dragOverGapBottom",
                      "propType": "bool",
                    },
                    {
                      "name": "pos",
                      "propType": "string",
                    },
                    {
                      "name": "domRef",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          {
                            "params": [
                              {
                                "name": "instance",
                                "propType": {
                                  "type": "oneOfType",
                                  "value": [
                                    "null",
                                    "object",
                                  ],
                                },
                              },
                            ],
                            "raw": "(instance: HTMLDivElement | null) => void | (() => VoidOrUndefinedOnly)",
                            "returns": {
                              "propType": {
                                "type": "oneOfType",
                                "value": [
                                  "void",
                                  "func",
                                ],
                              },
                            },
                            "type": "func",
                          },
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "data",
                      "propType": "object",
                    },
                    {
                      "name": "isStart",
                      "propType": {
                        "type": "arrayOf",
                        "value": "bool",
                      },
                    },
                    {
                      "name": "isEnd",
                      "propType": {
                        "type": "arrayOf",
                        "value": "bool",
                      },
                    },
                    {
                      "name": "active",
                      "propType": "bool",
                    },
                    {
                      "name": "onMouseMove",
                      "propType": {
                        "params": [
                          {
                            "name": "event",
                            "propType": "object",
                          },
                        ],
                        "raw": "MouseEventHandler<HTMLDivElement>",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "isLeaf",
                      "propType": "bool",
                    },
                    {
                      "name": "checkable",
                      "propType": "bool",
                    },
                    {
                      "name": "selectable",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "disableCheckbox",
                      "propType": "bool",
                    },
                    {
                      "name": "icon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                        ],
                      },
                    },
                    {
                      "name": "switcherIcon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                        ],
                      },
                    },
                    {
                      "name": "children",
                      "propType": "node",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "eventKey",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "id",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loaded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loading",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "halfChecked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "dragOver",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapTop",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapBottom",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "pos",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "domRef",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "data",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "isStart",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "boolean",
                      },
                    },
                  },
                  {
                    "name": "isEnd",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "boolean",
                      },
                    },
                  },
                  {
                    "name": "active",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onMouseMove",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "isLeaf",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checkable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selectable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disableCheckbox",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "switcherIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "switcherIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "eventKey",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "prefixCls",
                      "propType": "string",
                    },
                    {
                      "name": "className",
                      "propType": "string",
                    },
                    {
                      "name": "style",
                      "propType": "object",
                    },
                    {
                      "name": "id",
                      "propType": "string",
                    },
                    {
                      "name": "expanded",
                      "propType": "bool",
                    },
                    {
                      "name": "selected",
                      "propType": "bool",
                    },
                    {
                      "name": "checked",
                      "propType": "bool",
                    },
                    {
                      "name": "loaded",
                      "propType": "bool",
                    },
                    {
                      "name": "loading",
                      "propType": "bool",
                    },
                    {
                      "name": "halfChecked",
                      "propType": "bool",
                    },
                    {
                      "name": "title",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "data",
                                "propType": "object",
                              },
                            ],
                            "raw": "(data: TreeDataType) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "dragOver",
                      "propType": "bool",
                    },
                    {
                      "name": "dragOverGapTop",
                      "propType": "bool",
                    },
                    {
                      "name": "dragOverGapBottom",
                      "propType": "bool",
                    },
                    {
                      "name": "pos",
                      "propType": "string",
                    },
                    {
                      "name": "domRef",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          {
                            "params": [
                              {
                                "name": "instance",
                                "propType": {
                                  "type": "oneOfType",
                                  "value": [
                                    "null",
                                    "object",
                                  ],
                                },
                              },
                            ],
                            "raw": "(instance: HTMLDivElement | null) => void | (() => VoidOrUndefinedOnly)",
                            "returns": {
                              "propType": {
                                "type": "oneOfType",
                                "value": [
                                  "void",
                                  "func",
                                ],
                              },
                            },
                            "type": "func",
                          },
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "data",
                      "propType": "object",
                    },
                    {
                      "name": "isStart",
                      "propType": {
                        "type": "arrayOf",
                        "value": "bool",
                      },
                    },
                    {
                      "name": "isEnd",
                      "propType": {
                        "type": "arrayOf",
                        "value": "bool",
                      },
                    },
                    {
                      "name": "active",
                      "propType": "bool",
                    },
                    {
                      "name": "onMouseMove",
                      "propType": {
                        "params": [
                          {
                            "name": "event",
                            "propType": "object",
                          },
                        ],
                        "raw": "MouseEventHandler<HTMLDivElement>",
                        "returns": {
                          "propType": "void",
                        },
                        "type": "func",
                      },
                    },
                    {
                      "name": "isLeaf",
                      "propType": "bool",
                    },
                    {
                      "name": "checkable",
                      "propType": "bool",
                    },
                    {
                      "name": "selectable",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "disableCheckbox",
                      "propType": "bool",
                    },
                    {
                      "name": "icon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                        ],
                      },
                    },
                    {
                      "name": "switcherIcon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                        ],
                      },
                    },
                    {
                      "name": "children",
                      "propType": "node",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "eventKey",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "prefixCls",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "style",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "id",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loaded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loading",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "halfChecked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "dragOver",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapTop",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapBottom",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "pos",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "domRef",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "data",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "isStart",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "boolean",
                      },
                    },
                  },
                  {
                    "name": "isEnd",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "boolean",
                      },
                    },
                  },
                  {
                    "name": "active",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onMouseMove",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "isLeaf",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checkable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selectable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disableCheckbox",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "switcherIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                      ],
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "TreeNode",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "expandAction",
          "options": [
            {
              "label": "false",
              "value": "false",
            },
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "doubleClick",
              "value": ""doubleClick"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              "false",
              ""click"",
              ""doubleClick"",
            ],
          },
        },
        {
          "description": "",
          "name": "showLine",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "showLeafIcon",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "Whether to support multiple selection",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Whether to automatically expand the parent node",
          "name": "autoExpandParent",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Node selection in Checkable state is fully controlled (the selected state of parent and child nodes is no longer associated)",
          "name": "checkStrictly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Whether to support selection",
          "name": "checkable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "whether to disable the tree",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Expand all tree nodes by default",
          "name": "defaultExpandAll",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Expand the corresponding tree node by default",
          "name": "defaultExpandParent",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Expand the specified tree node by default",
          "name": "defaultExpandedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "(Controlled) Expand the specified tree node",
          "name": "expandedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "(Controlled) Tree node with checked checkbox",
          "name": "checkedKeys",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                    {
                      "type": "any",
                    },
                  ],
                },
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "checked",
                    "type": {
                      "isRequired": true,
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                  },
                  {
                    "name": "halfChecked",
                    "type": {
                      "isRequired": true,
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "type": "any",
                          },
                        ],
                      },
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "Tree node with checkbox checked by default",
          "name": "defaultCheckedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "(Controlled) Set the selected tree node",
          "name": "selectedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "Tree node selected by default",
          "name": "defaultSelectedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "selectable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Click on the tree node to trigger",
          "name": "filterAntTreeNode",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "loadedKeys",
          "type": {
            "type": "array",
            "value": {
              "type": "union",
              "value": [
                {
                  "type": "string",
                },
                {
                  "type": "number",
                },
                {
                  "type": "any",
                },
              ],
            },
          },
        },
        {
          "description": "Set the node to be draggable (IE>8)",
          "name": "draggable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "function",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "nodeDraggable",
                    "type": {
                      "type": "function",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showIcon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "blockNode",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "fieldNames",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "title",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "_title",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "string",
                  },
                },
              },
              {
                "name": "key",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "virtual",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "activeKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "loadData",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "motion",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "filterTreeNode",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "treeData",
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "description": "",
          "name": "rootStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "focusable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "allowDrop",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "titleRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "itemHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "scrollWidth",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "itemScrollOffset",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onMouseEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onMouseLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onBlur",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onFocus",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onKeyDown",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onSelect",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onLoad",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onContextMenu",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDoubleClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnd",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragEnter",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragLeave",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragOver",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDragStart",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrop",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onScroll",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onExpand",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onCheck",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRightClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "Used for \`rc-tree-select\` only.",
          "name": "onActiveChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Tree",
      "methods": [],
      "name": "DirectoryTree",
      "slots": [
        {
          "description": "",
          "name": "icon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "eventKey",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "prefixCls",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "className",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "expanded",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "selected",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "checked",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "halfChecked",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "children",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "title",
                      "propType": {
                        "isRequired": true,
                        "type": "node",
                      },
                    },
                    {
                      "name": "pos",
                      "propType": {
                        "isRequired": true,
                        "type": "string",
                      },
                    },
                    {
                      "name": "dragOver",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "dragOverGapTop",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "dragOverGapBottom",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "isLeaf",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "selectable",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "disabled",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                    {
                      "name": "disableCheckbox",
                      "propType": {
                        "isRequired": true,
                        "type": "bool",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "eventKey",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "prefixCls",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "className",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selected",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checked",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "halfChecked",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "isRequired": true,
                      "type": "any",
                    },
                  },
                  {
                    "name": "pos",
                    "type": {
                      "isRequired": true,
                      "type": "string",
                    },
                  },
                  {
                    "name": "dragOver",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapTop",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "dragOverGapBottom",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "isLeaf",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selectable",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disableCheckbox",
                    "type": {
                      "isRequired": true,
                      "type": "boolean",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "switcherIcon",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "className",
                      "propType": "string",
                    },
                    {
                      "name": "checkable",
                      "propType": "bool",
                    },
                    {
                      "name": "disabled",
                      "propType": "bool",
                    },
                    {
                      "name": "disableCheckbox",
                      "propType": "bool",
                    },
                    {
                      "name": "title",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "data",
                                "propType": "object",
                              },
                            ],
                            "raw": "(data: DataNode) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "key",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "eventKey",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "string",
                          "number",
                          "object",
                        ],
                      },
                    },
                    {
                      "name": "isLeaf",
                      "propType": "bool",
                    },
                    {
                      "name": "checked",
                      "propType": "bool",
                    },
                    {
                      "name": "expanded",
                      "propType": "bool",
                    },
                    {
                      "name": "loading",
                      "propType": "bool",
                    },
                    {
                      "name": "selected",
                      "propType": "bool",
                    },
                    {
                      "name": "selectable",
                      "propType": "bool",
                    },
                    {
                      "name": "icon",
                      "propType": {
                        "type": "oneOfType",
                        "value": [
                          "null",
                          "string",
                          "number",
                          "object",
                          "bool",
                          "element",
                          {
                            "params": [
                              {
                                "name": "props",
                                "propType": {
                                  "type": "shape",
                                  "value": [
                                    {
                                      "name": "eventKey",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "prefixCls",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "className",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "expanded",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "selected",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "checked",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "halfChecked",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "children",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "node",
                                      },
                                    },
                                    {
                                      "name": "title",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "node",
                                      },
                                    },
                                    {
                                      "name": "pos",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "string",
                                      },
                                    },
                                    {
                                      "name": "dragOver",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "dragOverGapTop",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "dragOverGapBottom",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "isLeaf",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "selectable",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "disabled",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                    {
                                      "name": "disableCheckbox",
                                      "propType": {
                                        "isRequired": true,
                                        "type": "bool",
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                            "raw": "(props: AntdTreeNodeAttribute) => ReactNode",
                            "returns": {
                              "propType": "node",
                            },
                            "type": "func",
                          },
                        ],
                      },
                    },
                    {
                      "name": "children",
                      "propType": "node",
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "className",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "checkable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disabled",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "disableCheckbox",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "title",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "key",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "eventKey",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "any",
                        },
                      ],
                    },
                  },
                  {
                    "name": "isLeaf",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "checked",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "loading",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selected",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "selectable",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "children",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
              },
            },
          ],
        },
        {
          "description": "",
          "name": "switcherLoadingIcon",
          "params": [],
        },
        {
          "description": "",
          "name": "dropIndicatorRender",
          "params": [
            {
              "description": undefined,
              "name": {
                "name": "props",
                "propType": {
                  "type": "shape",
                  "value": [
                    {
                      "name": "dropPosition",
                      "propType": {
                        "isRequired": true,
                        "type": "oneOf",
                        "value": [
                          0,
                          1,
                          -1,
                        ],
                      },
                    },
                    {
                      "name": "dropLevelOffset",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                    {
                      "name": "indent",
                      "propType": {
                        "isRequired": true,
                        "type": "number",
                      },
                    },
                  ],
                },
              },
              "type": {
                "type": "struct",
                "value": [
                  {
                    "name": "dropPosition",
                    "type": {
                      "isRequired": true,
                      "type": "union",
                      "value": [
                        "0",
                        "1",
                        "-1",
                      ],
                    },
                  },
                  {
                    "name": "dropLevelOffset",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                  {
                    "name": "indent",
                    "type": {
                      "isRequired": true,
                      "type": "number",
                    },
                  },
                ],
              },
            },
          ],
        },
      ],
      "subName": "DirectoryTree",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "value",
          "sync": true,
          "type": {
            "isRequired": true,
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "TreeSelect",
      "methods": [],
      "name": "TreeNode",
      "slots": [],
      "subName": "TreeNode",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "ellipsis",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "editable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "text",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "editing",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tooltip",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "onStart",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onChange",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onCancel",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEnd",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "maxLength",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "autoSize",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "minRows",
                              "type": {
                                "type": "number",
                              },
                            },
                            {
                              "name": "maxRows",
                              "type": {
                                "type": "number",
                              },
                            },
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "triggerType",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          ""icon"",
                          ""text"",
                        ],
                      },
                    },
                  },
                  {
                    "name": "enterIcon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tabIndex",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "copyable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "text",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "onCopy",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tooltips",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "format",
                    "type": {
                      "type": "union",
                      "value": [
                        ""text/plain"",
                        ""text/html"",
                      ],
                    },
                  },
                  {
                    "name": "tabIndex",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "secondary",
              "value": ""secondary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""warning"",
              ""danger"",
              ""secondary"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "code",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mark",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "underline",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "delete",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "strong",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "italic",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Typography",
      "methods": [],
      "name": "Text",
      "slots": [],
      "subName": "Text",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "ellipsis",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "editable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "text",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "editing",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tooltip",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "onStart",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onChange",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onCancel",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEnd",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "maxLength",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "autoSize",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "minRows",
                              "type": {
                                "type": "number",
                              },
                            },
                            {
                              "name": "maxRows",
                              "type": {
                                "type": "number",
                              },
                            },
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "triggerType",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          ""icon"",
                          ""text"",
                        ],
                      },
                    },
                  },
                  {
                    "name": "enterIcon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tabIndex",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "copyable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "text",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "onCopy",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tooltips",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "format",
                    "type": {
                      "type": "union",
                      "value": [
                        ""text/plain"",
                        ""text/html"",
                      ],
                    },
                  },
                  {
                    "name": "tabIndex",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "secondary",
              "value": ""secondary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""warning"",
              ""danger"",
              ""secondary"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "code",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mark",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "underline",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "delete",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "strong",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "italic",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Typography",
      "methods": [],
      "name": "Link",
      "slots": [],
      "subName": "Link",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "level",
          "options": [
            {
              "label": "3",
              "value": "3",
            },
            {
              "label": "5",
              "value": "5",
            },
            {
              "label": "2",
              "value": "2",
            },
            {
              "label": "1",
              "value": "1",
            },
            {
              "label": "4",
              "value": "4",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              "3",
              "5",
              "2",
              "1",
              "4",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "secondary",
              "value": ""secondary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""warning"",
              ""danger"",
              ""secondary"",
            ],
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "editable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "text",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "editing",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tooltip",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "onStart",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onChange",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onCancel",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEnd",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "maxLength",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "autoSize",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "minRows",
                              "type": {
                                "type": "number",
                              },
                            },
                            {
                              "name": "maxRows",
                              "type": {
                                "type": "number",
                              },
                            },
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "triggerType",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          ""icon"",
                          ""text"",
                        ],
                      },
                    },
                  },
                  {
                    "name": "enterIcon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tabIndex",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "ellipsis",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "rows",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "expandable",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""collapsible"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "suffix",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "symbol",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "defaultExpanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onExpand",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEllipsis",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "tooltip",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "title",
                              "type": {
                                "isRequired": true,
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "type": "function",
                                  },
                                ],
                              },
                            },
                            {
                              "name": "overlay",
                              "type": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "type": "function",
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "title",
                              "type": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "type": "function",
                                  },
                                ],
                              },
                            },
                            {
                              "name": "overlay",
                              "type": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "type": "function",
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "italic",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "copyable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "text",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "onCopy",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tooltips",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "format",
                    "type": {
                      "type": "union",
                      "value": [
                        ""text/plain"",
                        ""text/html"",
                      ],
                    },
                  },
                  {
                    "name": "tabIndex",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "code",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mark",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "underline",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "delete",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Typography",
      "methods": [],
      "name": "Title",
      "slots": [],
      "subName": "Title",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "editable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "text",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "editing",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tooltip",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "onStart",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onChange",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onCancel",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEnd",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "maxLength",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "autoSize",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "minRows",
                              "type": {
                                "type": "number",
                              },
                            },
                            {
                              "name": "maxRows",
                              "type": {
                                "type": "number",
                              },
                            },
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "triggerType",
                    "type": {
                      "type": "array",
                      "value": {
                        "type": "union",
                        "value": [
                          ""icon"",
                          ""text"",
                        ],
                      },
                    },
                  },
                  {
                    "name": "enterIcon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tabIndex",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "copyable",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "text",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "onCopy",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "icon",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "tooltips",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "format",
                    "type": {
                      "type": "union",
                      "value": [
                        ""text/plain"",
                        ""text/html"",
                      ],
                    },
                  },
                  {
                    "name": "tabIndex",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "secondary",
              "value": ""secondary"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""warning"",
              ""danger"",
              ""secondary"",
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "ellipsis",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "rows",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "expandable",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "union",
                          "value": [
                            ""collapsible"",
                          ],
                        },
                      ],
                    },
                  },
                  {
                    "name": "suffix",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "symbol",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "defaultExpanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "expanded",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "onExpand",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "onEllipsis",
                    "type": {
                      "type": "function",
                    },
                  },
                  {
                    "name": "tooltip",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "title",
                              "type": {
                                "isRequired": true,
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "type": "function",
                                  },
                                ],
                              },
                            },
                            {
                              "name": "overlay",
                              "type": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "type": "function",
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        {
                          "type": "struct",
                          "value": [
                            {
                              "name": "title",
                              "type": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "type": "function",
                                  },
                                ],
                              },
                            },
                            {
                              "name": "overlay",
                              "type": {
                                "type": "union",
                                "value": [
                                  {
                                    "type": "any",
                                  },
                                  {
                                    "type": "string",
                                  },
                                  {
                                    "type": "number",
                                  },
                                  {
                                    "type": "boolean",
                                  },
                                  {
                                    "type": "function",
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "code",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mark",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "underline",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "delete",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "strong",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "italic",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "direction",
          "options": [
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "rtl",
              "value": ""rtl"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""ltr"",
              ""rtl"",
            ],
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Typography",
      "methods": [],
      "name": "Paragraph",
      "slots": [],
      "subName": "Paragraph",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "type",
          "options": [
            {
              "label": "select",
              "value": ""select"",
            },
            {
              "label": "drag",
              "value": ""drag"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""select"",
              ""drag"",
            ],
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultFileList",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "uid",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "size",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "name",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "fileName",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "lastModified",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "lastModifiedDate",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "url",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "status",
                  "type": {
                    "type": "union",
                    "value": [
                      ""error"",
                      ""done"",
                      ""uploading"",
                      ""removed"",
                    ],
                  },
                },
                {
                  "name": "percent",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "thumbUrl",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "crossOrigin",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "originFileObj",
                  "type": {
                    "type": "struct",
                    "value": [
                      {
                        "name": "lastModifiedDate",
                        "type": {
                          "isRequired": true,
                          "type": "any",
                        },
                      },
                    ],
                  },
                },
                {
                  "name": "response",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "error",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "linkProps",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "type",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "xhr",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "preview",
                  "type": {
                    "type": "string",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "fileList",
          "type": {
            "type": "array",
            "value": {
              "type": "struct",
              "value": [
                {
                  "name": "uid",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "size",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "name",
                  "type": {
                    "isRequired": true,
                    "type": "string",
                  },
                },
                {
                  "name": "fileName",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "lastModified",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "lastModifiedDate",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "url",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "status",
                  "type": {
                    "type": "union",
                    "value": [
                      ""error"",
                      ""done"",
                      ""uploading"",
                      ""removed"",
                    ],
                  },
                },
                {
                  "name": "percent",
                  "type": {
                    "type": "number",
                  },
                },
                {
                  "name": "thumbUrl",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "crossOrigin",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "originFileObj",
                  "type": {
                    "type": "struct",
                    "value": [
                      {
                        "name": "lastModifiedDate",
                        "type": {
                          "isRequired": true,
                          "type": "any",
                        },
                      },
                    ],
                  },
                },
                {
                  "name": "response",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "error",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "linkProps",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "type",
                  "type": {
                    "type": "string",
                  },
                },
                {
                  "name": "xhr",
                  "type": {
                    "type": "any",
                  },
                },
                {
                  "name": "preview",
                  "type": {
                    "type": "string",
                  },
                },
              ],
            },
          },
        },
        {
          "description": "",
          "name": "action",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "directory",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "data",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "method",
          "options": [
            {
              "label": "POST",
              "value": ""POST"",
            },
            {
              "label": "PUT",
              "value": ""PUT"",
            },
            {
              "label": "PATCH",
              "value": ""PATCH"",
            },
            {
              "label": "post",
              "value": ""post"",
            },
            {
              "label": "put",
              "value": ""put"",
            },
            {
              "label": "patch",
              "value": ""patch"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""POST"",
              ""PUT"",
              ""PATCH"",
              ""post"",
              ""put"",
              ""patch"",
            ],
          },
        },
        {
          "description": "",
          "name": "headers",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showUploadList",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "extra",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "showRemoveIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "showPreviewIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "showDownloadIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "removeIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "downloadIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                  {
                    "name": "previewIcon",
                    "type": {
                      "type": "union",
                      "value": [
                        {
                          "type": "any",
                        },
                        {
                          "type": "string",
                        },
                        {
                          "type": "number",
                        },
                        {
                          "type": "boolean",
                        },
                        {
                          "type": "function",
                        },
                      ],
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "accept",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "beforeUpload",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "listType",
          "options": [
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "picture",
              "value": ""picture"",
            },
            {
              "label": "picture-card",
              "value": ""picture-card"",
            },
            {
              "label": "picture-circle",
              "value": ""picture-circle"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""text"",
              ""picture"",
              ""picture-card"",
              ""picture-circle"",
            ],
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rootClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "supportServerRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "customRequest",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "withCredentials",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "openFileDialogOnClick",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "uploading",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "removeFile",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "downloadFile",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "uploadError",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "previewFile",
                "type": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "previewFile",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "@deprecated Please use \`beforeUpload\` directly",
          "name": "transformFile",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "iconRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "isImageUrl",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "",
          "name": "progress",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "itemRender",
          "type": {
            "type": "function",
          },
        },
        {
          "description": "Config max count of \`fileList\`. Will replace current one when \`maxCount\` is 1",
          "name": "maxCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "capture",
          "type": {
            "isRequired": true,
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "hasControlInside",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "Allows getting a ref to the component instance.",
          "name": "ref",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "function",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "key",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDrop",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onPreview",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onDownload",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
        {
          "description": "",
          "name": "onRemove",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Upload",
      "methods": [],
      "name": "Dragger",
      "slots": [],
      "subName": "Dragger",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "min",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "max",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "collapsible",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "start",
                    "type": {
                      "type": "boolean",
                    },
                  },
                  {
                    "name": "end",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "description": "",
          "name": "resizable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultSize",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Splitter",
      "methods": [],
      "name": "Panel",
      "slots": [],
      "subName": "Panel",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Item",
      "methods": [],
      "name": "Meta",
      "slots": [
        {
          "description": "",
          "name": "avatar",
          "params": [],
        },
        {
          "description": "",
          "name": "description",
          "params": [],
        },
        {
          "description": "",
          "name": "title",
          "params": [],
        },
      ],
      "subName": "Meta",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onClick",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "Summary",
      "methods": [],
      "name": "Row",
      "slots": [],
      "subName": "Row",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "index",
          "type": {
            "isRequired": true,
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "colSpan",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "rowSpan",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "align",
          "options": [
            {
              "label": "start",
              "value": ""start"",
            },
            {
              "label": "end",
              "value": ""end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
            {
              "label": "justify",
              "value": ""justify"",
            },
            {
              "label": "match-parent",
              "value": ""match-parent"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""start"",
              ""end"",
              ""left"",
              ""right"",
              ""center"",
              ""justify"",
              ""match-parent"",
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Summary",
      "methods": [],
      "name": "Cell",
      "slots": [],
      "subName": "Cell",
    },
  ],
  "description": "An enterprise-class UI design language and React components implementation",
  "framework": "react",
  "frameworkVersion": "16.9.0",
  "name": "antd",
  "version": "5.23.2",
}
`;

exports[`parse react-colors dynamic 1`] = `
{
  "components": [
    {
      "attrs": [
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "colorModel",
          "options": [
            {
              "label": "rgb",
              "value": ""rgb"",
            },
            {
              "label": "hsl",
              "value": ""hsl"",
            },
            {
              "label": "hsv",
              "value": ""hsv"",
            },
            {
              "label": "hex",
              "value": ""hex"",
            },
            {
              "label": "rgba",
              "value": ""rgba"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""rgb"",
              ""hsl"",
              ""hsv"",
              ""hex"",
              ""rgba"",
            ],
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "ColorPicker",
      "methods": [],
      "name": "ColorPicker",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "model",
          "options": [
            {
              "label": "rgb.r",
              "value": ""rgb.r"",
            },
            {
              "label": "rgb.g",
              "value": ""rgb.g"",
            },
            {
              "label": "rgb.b",
              "value": ""rgb.b"",
            },
            {
              "label": "hsv.h",
              "value": ""hsv.h"",
            },
            {
              "label": "hsv.s",
              "value": ""hsv.s"",
            },
            {
              "label": "hsv.v",
              "value": ""hsv.v"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""rgb.r"",
              ""rgb.g"",
              ""rgb.b"",
              ""hsv.h"",
              ""hsv.s"",
              ""hsv.v"",
            ],
          },
        },
        {
          "description": "",
          "name": "rgb",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "hsv",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "",
          "name": "onChange",
          "params": [
            {
              "name": "event",
              "type": {
                "type": "function",
              },
            },
          ],
        },
      ],
      "exportName": "ColorPanel",
      "methods": [],
      "name": "ColorPanel",
      "slots": [
        {
          "description": "",
          "name": "pointer",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "defaultValue": "{"key":null,"ref":null,"props":{},"_owner":null,"_store":{}}",
          "description": "",
          "name": "pointer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "direction",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "ColorBar",
      "methods": [],
      "name": "ColorBar",
      "slots": [],
      "subName": "",
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "model",
          "options": [
            {
              "label": "rgb.r",
              "value": ""rgb.r"",
            },
            {
              "label": "rgb.g",
              "value": ""rgb.g"",
            },
            {
              "label": "rgb.b",
              "value": ""rgb.b"",
            },
            {
              "label": "hsv.h",
              "value": ""hsv.h"",
            },
            {
              "label": "hsv.s",
              "value": ""hsv.s"",
            },
            {
              "label": "hsv.v",
              "value": ""hsv.v"",
            },
            {
              "label": "lab.l",
              "value": ""lab.l"",
            },
            {
              "label": "lab.a",
              "value": ""lab.a"",
            },
            {
              "label": "lab.b",
              "value": ""lab.b"",
            },
            {
              "label": "cmyk.c",
              "value": ""cmyk.c"",
            },
            {
              "label": "cmyk.m",
              "value": ""cmyk.m"",
            },
            {
              "label": "cmyk.y",
              "value": ""cmyk.y"",
            },
            {
              "label": "cmyk.k",
              "value": ""cmyk.k"",
            },
            {
              "label": "hex",
              "value": ""hex"",
            },
            {
              "label": "alpha",
              "value": ""alpha"",
            },
          ],
          "type": {
            "type": "union",
            "value": [
              ""rgb.r"",
              ""rgb.g"",
              ""rgb.b"",
              ""hsv.h"",
              ""hsv.s"",
              ""hsv.v"",
              ""lab.l"",
              ""lab.a"",
              ""lab.b"",
              ""cmyk.c"",
              ""cmyk.m"",
              ""cmyk.y"",
              ""cmyk.k"",
              ""hex"",
              ""alpha"",
            ],
          },
        },
        {
          "description": "",
          "name": "style",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "labelStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "rightLabelStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "inputStyle",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "ColorInput",
      "methods": [],
      "name": "ColorInput",
      "slots": [
        {
          "description": "",
          "name": "label",
          "params": [],
        },
        {
          "description": "",
          "name": "rightLabel",
          "params": [],
        },
      ],
      "subName": "",
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "",
          "name": "color",
          "type": {
            "type": "function",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "ColorBlock",
      "methods": [],
      "name": "ColorBlock",
      "slots": [],
      "subName": "",
    },
  ],
  "description": "A customizable color picker",
  "framework": "react",
  "frameworkVersion": "15.4.1",
  "name": "react-colors",
  "version": "0.1.2",
}
`;

exports[`parse vue2 ant-design-vue 1`] = `
{
  "components": [
    {
      "attrs": [
        {
          "description": "",
          "name": "offsetTop",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "offset",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "offsetBottom",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Affix",
      "methods": [],
      "name": "AAffix",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "offsetTop",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "bounds",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "affix",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showInkInFixed",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapperClass",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "wrapperStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getCurrentAnchor",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "targetOffset",
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Anchor",
      "methods": [],
      "name": "AAnchor",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showAction",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "notFoundContent",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""slide-up"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""zoom"",
          "description": "",
          "name": "choiceTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "defaultActiveFirstOption",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dropdownStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownMenuStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownMatchSelectWidth",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "filterOption",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "backfill",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "open",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoClearSearchValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dropdownRender",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dataSource",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""children"",
          "description": "",
          "name": "optionLabelProp",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "AutoComplete",
      "methods": [],
      "name": "AAutoComplete",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "closable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "closeText",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "message",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "description",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "afterClose",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showIcon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "iconType",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "banner",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "icon",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Alert",
      "methods": [],
      "name": "AAlert",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""circle"",
          "description": "",
          "name": "shape",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""default"",
          "description": "",
          "name": "size",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "src",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "srcSet",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "icon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "alt",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loadError",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Avatar",
      "methods": [],
      "name": "AAvatar",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "400",
          "description": "",
          "name": "visibilityHeight",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "target",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "BackTop",
      "methods": [],
      "name": "ABackTop",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "count",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showZero",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "99",
          "description": "",
          "name": "overflowCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "dot",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "scrollNumberPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "status",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "text",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "offset",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "numberStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Badge",
      "methods": [],
      "name": "ABadge",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "routes",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "params",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "separator",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "itemRender",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Breadcrumb",
      "methods": [],
      "name": "ABreadcrumb",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""button"",
          "description": "",
          "name": "htmlType",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "icon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "shape",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""default"",
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "ghost",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "block",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Button",
      "methods": [],
      "name": "AButton",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "mode",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "fullscreen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabledDate",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "validRange",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "headerRender",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "valueFormat",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Calendar",
      "methods": [],
      "name": "ACalendar",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "extra",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "headStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "hoverable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "actions",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabList",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabBarExtraContent",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "activeTabKey",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultActiveTabKey",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Card",
      "methods": [],
      "name": "ACard",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "activeKey",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultActiveKey",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "accordion",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "destroyInactivePanel",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "expandIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "openAnimation",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""left"",
          "description": "",
          "name": "expandIconPosition",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Collapse",
      "methods": [],
      "name": "ACollapse",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "effect",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "dots",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "vertical",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoplay",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "easing",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "beforeChange",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "afterChange",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "accessibility",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "nextArrow",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prevArrow",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "pauseOnHover",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "adaptiveHeight",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "arrows",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoplaySpeed",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "centerMode",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "centerPadding",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "cssEase",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dotsClass",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "draggable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "fade",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "focusOnSelect",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "infinite",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "initialSlide",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "lazyLoad",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rtl",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "slide",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "slidesToShow",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "slidesToScroll",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "speed",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "swipe",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "swipeToSlide",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "touchMove",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "touchThreshold",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "variableWidth",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "useCss",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "slickGoTo",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "responsive",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dotPosition",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Carousel",
      "methods": [],
      "name": "ACarousel",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "[]",
          "description": "",
          "name": "options",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "displayRender",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""slide-up"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "popupStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""bottomLeft"",
          "description": "",
          "name": "popupPlacement",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""Please select"",
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "notFoundContent",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loadData",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "expandTrigger",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "changeOnSelect",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "inputPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "popupVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "fieldNames",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "suffixIcon",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Cascader",
      "methods": [],
      "name": "ACascader",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultChecked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "isGroup",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "indeterminate",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""checkbox"",
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Checkbox",
      "methods": [],
      "name": "ACheckbox",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "span",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "order",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "offset",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "push",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "pull",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "xs",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "sm",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "md",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "lg",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "xl",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "xxl",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "flex",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Col",
      "methods": [],
      "name": "ACol",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""slide-up"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "inputPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "format",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "suffixIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "popupStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "localeCode",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "getCalendarContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "open",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabledDate",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showToday",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dateRender",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "pickerClass",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "pickerInputClass",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "timePicker",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "tagPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "align",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "inputReadOnly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "valueFormat",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultPickerValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "renderExtraFooter",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showTime",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "disabledTime",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "mode",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "DatePicker",
      "methods": [],
      "name": "ADatePicker",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""horizontal"",
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dashed",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "orientation",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Divider",
      "methods": [],
      "name": "ADivider",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "["hover"]",
          "description": "",
          "name": "trigger",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "overlay",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "visible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""bottomLeft"",
          "description": "",
          "name": "placement",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "0.15",
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "openClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "minOverlayWidthMatchTrigger",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Dropdown",
      "methods": [],
      "name": "ADropdown",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": ""horizontal"",
          "description": "",
          "name": "layout",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "labelCol",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapperCol",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "colon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "labelAlign",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "form",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hideRequiredMark",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoFormCreate",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "selfUpdate",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Form",
      "methods": [],
      "name": "AForm",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": ""horizontal"",
          "description": "",
          "name": "layout",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "labelCol",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapperCol",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "colon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "labelAlign",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hideRequiredMark",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "model",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "rules",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "validateMessages",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "validateOnRuleChange",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "FormModel",
      "methods": [],
      "name": "AFormModel",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "component",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "viewBox",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "spin",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "rotate",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "theme",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "twoToneColor",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "role",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Icon",
      "methods": [],
      "name": "AIcon",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "inputPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": ""text"",
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "readOnly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "addonBefore",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "addonAfter",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefix",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "suffix",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "lazy",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "maxLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "className",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Input",
      "methods": [],
      "name": "AInput",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "min",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "max",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": "1",
          "description": "",
          "name": "step",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "formatter",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "parser",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "decimalSeparator",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "precision",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "InputNumber",
      "methods": [],
      "name": "AInputNumber",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hasSider",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tagName",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Layout",
      "methods": [],
      "name": "ALayout",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "[]",
          "description": "",
          "name": "dataSource",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "extra",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "grid",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "itemLayout",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "loadMore",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "pagination",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rowKey",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "renderItem",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "split",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "header",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "footer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "List",
      "methods": [],
      "name": "AList",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "{}",
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "antMark",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "LocaleProvider",
      "methods": [],
      "name": "ALocaleProvider",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "focusable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultActiveFirst",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "visible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "activeKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "selectedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultSelectedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultOpenKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "openKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "openAnimation",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": ""vertical"",
          "description": "",
          "name": "mode",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""hover"",
          "description": "",
          "name": "triggerSubMenuAction",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "subMenuOpenDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "subMenuCloseDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "1",
          "description": "",
          "name": "level",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "24",
          "description": "",
          "name": "inlineIndent",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": ""light"",
          "description": "",
          "name": "theme",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "openTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "forceSubMenuRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "selectable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "isRootMenu",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "itemIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "expandIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "overflowedIndicator",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "inlineCollapsed",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Menu",
      "methods": [],
      "name": "AMenu",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""@"",
          "description": "",
          "name": "prefix",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "notFoundContent",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "" "",
          "description": "",
          "name": "split",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "placement",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "character",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "characterRender",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "filterOption",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "validateSearch",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Mentions",
      "methods": [],
      "name": "AMentions",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "visible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "confirmLoading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "closable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "closeIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "afterClose",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "centered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "520",
          "description": "",
          "name": "width",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "footer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "okText",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""primary"",
          "description": "",
          "name": "okType",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "cancelText",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "icon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "maskClosable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "forceRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "okButtonProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "cancelButtonProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "destroyOnClose",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "wrapClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""fade"",
          "description": "",
          "name": "maskTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""zoom"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "getContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "maskStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "mask",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "wrapProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "focusTriggerAfterClose",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "dialogStyle",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Modal",
      "methods": [],
      "name": "AModal",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "total",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "defaultCurrent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "current",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "defaultPageSize",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "pageSize",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "hideOnSinglePage",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showSizeChanger",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "pageSizeOptions",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "buildOptionText",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showSizeChange",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showQuickJumper",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "showTotal",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "simple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "selectPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "itemRender",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "role",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showLessItems",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Pagination",
      "methods": [],
      "name": "APagination",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": ""click"",
          "description": "",
          "name": "trigger",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "visible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""top"",
          "description": "",
          "name": "placement",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""zoom-big"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "arrowPointAtCenter",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "align",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "content",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""primary"",
          "description": "",
          "name": "okType",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "okText",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "cancelText",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "icon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "okButtonProps",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "cancelButtonProps",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Popconfirm",
      "methods": [],
      "name": "APopconfirm",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": ""hover"",
          "description": "",
          "name": "trigger",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "visible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""top"",
          "description": "",
          "name": "placement",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""zoom-big"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "arrowPointAtCenter",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "align",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "content",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Popover",
      "methods": [],
      "name": "APopover",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""line"",
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "percent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "successPercent",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "format",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "status",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "showInfo",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "strokeWidth",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": ""round"",
          "description": "",
          "name": "strokeLinecap",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "strokeColor",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": ""#f3f3f3"",
          "description": "",
          "name": "trailColor",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "width",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "gapDegree",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "gapPosition",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""default"",
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Progress",
      "methods": [],
      "name": "AProgress",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultChecked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "isGroup",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""radio"",
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Radio",
      "methods": [],
      "name": "ARadio",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "count",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "allowHalf",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "tooltips",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "character",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Rate",
      "methods": [],
      "name": "ARate",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "gutter",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "justify",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Row",
      "methods": [],
      "name": "ARow",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showAction",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "notFoundContent",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""slide-up"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""zoom"",
          "description": "",
          "name": "choiceTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultActiveFirstOption",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dropdownStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownMenuStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownMatchSelectWidth",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "filterOption",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "backfill",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "open",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoClearSearchValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dropdownRender",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "mode",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "optionLabelProp",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "firstActiveValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "maxTagCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "maxTagPlaceholder",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "maxTagTextLength",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "optionFilterProp",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "labelInValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tokenSeparators",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getInputElement",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "options",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "suffixIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "removeIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "clearIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "menuItemSelectedIcon",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Select",
      "methods": [],
      "name": "ASelect",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tooltipPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "range",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "reverse",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "min",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "max",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "step",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "marks",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dots",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "included",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "vertical",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "tipFormatter",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tooltipVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""top"",
          "description": "",
          "name": "tooltipPlacement",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "getTooltipPopupContainer",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Slider",
      "methods": [],
      "name": "ASlider",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "spinning",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""default"",
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "wrapperClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "tip",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "delay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "indicator",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Spin",
      "methods": [],
      "name": "ASpin",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""."",
          "description": "",
          "name": "decimalSeparator",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "","",
          "description": "",
          "name": "groupSeparator",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""HH:mm:ss"",
          "description": "",
          "name": "format",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "valueStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "valueRender",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "formatter",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "precision",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "prefix",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "suffix",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Statistic",
      "methods": [],
      "name": "AStatistic",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "iconPrefix",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "current",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "initial",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": ""horizontal"",
          "description": "",
          "name": "labelPlacement",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "status",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "direction",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "progressDot",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Steps",
      "methods": [],
      "name": "ASteps",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checkedChildren",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "unCheckedChildren",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "checked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultChecked",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Switch",
      "methods": [],
      "name": "ASwitch",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dropdownPrefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "rowSelection",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "pagination",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""default"",
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "[]",
          "description": "",
          "name": "dataSource",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "components",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "columns",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""key"",
          "description": "",
          "name": "rowKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "rowClassName",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "expandedRowRender",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultExpandAllRows",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultExpandedRowKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "expandedRowKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "expandIconAsCell",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "expandIconColumnIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "expandRowByClick",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "20",
          "description": "",
          "name": "indentSize",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "customRow",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "customHeaderRow",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "useFixedHeader",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "showHeader",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "footer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "scroll",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""children"",
          "description": "",
          "name": "childrenColumnName",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "["ascend","descend"]",
          "description": "",
          "name": "sortDirections",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tableLayout",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "expandIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "transformCellText",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Table",
      "methods": [],
      "name": "ATable",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "[]",
          "description": "",
          "name": "dataSource",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "targetKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "selectedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "render",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "listStyle",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "operationStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "titles",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "operations",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "filterOption",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "searchPlaceholder",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "notFoundContent",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "rowKey",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "lazy",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "showSelectAll",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Transfer",
      "methods": [],
      "name": "ATransfer",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "showLine",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoExpandParent",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checkStrictly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "checkable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultExpandAll",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultExpandParent",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultExpandedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "expandedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "checkedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultCheckedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "selectedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultSelectedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "selectable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "filterAntTreeNode",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loadData",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loadedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "draggable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showIcon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "icon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "switcherIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "filterTreeNode",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{"on":{},"props":{"appear":null}}",
          "description": "",
          "name": "openAnimation",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "treeNodes",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "treeData",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "replaceFields",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "blockNode",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Tree",
      "methods": [],
      "name": "ATree",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showAction",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "notFoundContent",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""slide-up"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""zoom"",
          "description": "",
          "name": "choiceTransitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showSearch",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "tabIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultActiveFirstOption",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dropdownClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "dropdownStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownMenuStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "dropdownMatchSelectWidth",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "filterOption",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "backfill",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "showArrow",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "open",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "autoClearSearchValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "dropdownRender",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "filterTreeNode",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "labelInValue",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loadData",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "maxTagCount",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "maxTagPlaceholder",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "searchPlaceholder",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "searchValue",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "showCheckedStrategy",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "suffixIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "treeCheckable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "treeCheckStrictly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "treeData",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "treeDataSimpleMode",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "treeDefaultExpandAll",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "treeExpandedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "treeIcon",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "treeDefaultExpandedKeys",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "treeNodeFilterProp",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "treeNodeLabelProp",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "replaceFields",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "TreeSelect",
      "methods": [],
      "name": "ATreeSelect",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "activeKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "defaultActiveKey",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "hideAdd",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "tabBarStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tabBarExtraContent",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "destroyInactiveTabPane",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""top"",
          "description": "",
          "name": "tabPosition",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "animated",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "tabBarGutter",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "renderTabBar",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Tabs",
      "methods": [],
      "name": "ATabs",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "color",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "closable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "visible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "afterClose",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Tag",
      "methods": [],
      "name": "ATag",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "value",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "defaultValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "open",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "format",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "placeholder",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "hideDisabledOptions",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabledHours",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabledMinutes",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "disabledSeconds",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "use12Hours",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "focusOnOpen",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "hourStep",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "minuteStep",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "secondStep",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "allowEmpty",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "allowClear",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "inputReadOnly",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "clearText",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultOpenValue",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "popupClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "popupStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "suffixIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{"offset":[0,-2]}",
          "description": "",
          "name": "align",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""bottomLeft"",
          "description": "",
          "name": "placement",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""slide-up"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "autoFocus",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "addon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "clearIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "valueFormat",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "TimePicker",
      "methods": [],
      "name": "ATimePicker",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "pending",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "pendingDot",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "reverse",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "mode",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Timeline",
      "methods": [],
      "name": "ATimeline",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": ""hover"",
          "description": "",
          "name": "trigger",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "visible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "defaultVisible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""top"",
          "description": "",
          "name": "placement",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""zoom-big-fast"",
          "description": "",
          "name": "transitionName",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "overlayStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "overlayClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "mouseEnterDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0.1",
          "description": "",
          "name": "mouseLeaveDelay",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "arrowPointAtCenter",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "autoAdjustOverflow",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "destroyTooltipOnHide",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "align",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "builtinPlacements",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Tooltip",
      "methods": [],
      "name": "ATooltip",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": ""select"",
          "description": "",
          "name": "type",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "name",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "defaultFileList",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "fileList",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "action",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "directory",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "",
          "name": "data",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "method",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "headers",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "showUploadList",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "multiple",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "accept",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "beforeUpload",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""text"",
          "description": "",
          "name": "listType",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "remove",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "supportServerRender",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "disabled",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "customRequest",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "withCredentials",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "openFileDialogOnClick",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "height",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "id",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "previewFile",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "transformFile",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Upload",
      "methods": [],
      "name": "AUpload",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "true",
          "description": "",
          "name": "closable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "destroyOnClose",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "getContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "maskClosable",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "mask",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "maskStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "bodyStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "headerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "drawerStyle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "visible",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "256",
          "description": "",
          "name": "width",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "256",
          "description": "",
          "name": "height",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "zIndex",
          "type": {
            "type": "number",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""right"",
          "description": "",
          "name": "placement",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "level",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "wrapClassName",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "handle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "afterVisibleChange",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "keyboard",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Drawer",
      "methods": [],
      "name": "ADrawer",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "active",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "loading",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "children",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "avatar",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "",
          "name": "paragraph",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Skeleton",
      "methods": [],
      "name": "ASkeleton",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "actions",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "author",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "avatar",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "content",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "datetime",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Comment",
      "methods": [],
      "name": "AComment",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "getPopupContainer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "renderEmpty",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "csp",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "autoInsertSpaceInButton",
          "type": {
            "type": "boolean",
          },
        },
        {
          "description": "",
          "name": "locale",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "pageHeader",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "transformCellText",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "ConfigProvider",
      "methods": [],
      "name": "AConfigProvider",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "image",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "description",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "imageStyle",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Empty",
      "methods": [],
      "name": "AEmpty",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "icon",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""info"",
          "description": "",
          "name": "status",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "subTitle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "extra",
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Result",
      "methods": [],
      "name": "AResult",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "bordered",
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""default"",
          "description": "",
          "name": "size",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{"xxl":3,"xl":3,"lg":3,"md":3,"sm":2,"xs":1}",
          "description": "",
          "name": "column",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "description": "",
          "name": "layout",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "colon",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Descriptions",
      "methods": [],
      "name": "ADescriptions",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "backIcon",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "title",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "subTitle",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "breadcrumb",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "tags",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "footer",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "extra",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "avatar",
          "type": {
            "type": "any",
          },
        },
        {
          "description": "",
          "name": "ghost",
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "PageHeader",
      "methods": [],
      "name": "APageHeader",
      "slots": [],
    },
    {
      "attrs": [
        {
          "description": "",
          "name": "prefixCls",
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""small"",
          "description": "",
          "name": "size",
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": ""horizontal"",
          "description": "",
          "name": "direction",
          "type": {
            "type": "string",
          },
        },
        {
          "description": "",
          "name": "align",
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "",
      "events": [],
      "exportName": "Space",
      "methods": [],
      "name": "ASpace",
      "slots": [],
    },
  ],
  "description": "An enterprise-class UI design language and Vue-based implementation",
  "framework": "vue2",
  "frameworkVersion": "2.6.0",
  "name": "ant-design-vue",
  "version": "1.7.8",
}
`;

exports[`parse vue2 element-ui 1`] = `
{
  "components": [
    {
      "attrs": [
        {
          "defaultValue": ""info"",
          "description": "Component type",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""light"",
          "description": "Choose theme",
          "name": "effect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "If closable or not",
          "name": "closable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Descriptive text. Can also be passed with the default slot",
          "name": "description",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "If a type icon is displayed",
          "name": "showIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to center the text",
          "name": "center",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Customized close button text",
          "name": "closeText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Displays important alert messages.",
      "events": [
        {
          "description": "fires when alert is closed",
          "name": "close",
          "params": [],
        },
      ],
      "exportName": "Alert",
      "methods": [],
      "name": "ElAlert",
      "slots": [
        {
          "description": "description",
          "name": "default",
          "params": [],
        },
        {
          "description": "content of the Alert title",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Width of the side section",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Container for side sections (usually a side nav).",
      "events": [],
      "exportName": "Aside",
      "methods": [],
      "name": "ElAside",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Focus the Input component",
          "name": "focus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to emit select event on enter when there is no autocomplete match",
          "name": "selectWhenUnmatched",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Debounce delay when typing",
          "name": "debounce",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for autocomplete's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Name for the inner native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether show suggestions when input focus",
          "name": "triggerOnFocus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placement of the popup menu",
          "name": "placement",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Prefix icon class",
          "name": "prefixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Suffix icon class",
          "name": "suffixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "A method to fetch input suggestions. When suggestions are ready, invoke callback(data:[]) to return them to Autocomplete",
          "name": "fetchSuggestions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Autocomplete is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The placeholder of Autocomplete",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Key name of the input suggestion object for display",
          "name": "valueKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Binding value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to append the dropdown to body",
          "name": "popperAppendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to hide the loading icon in remote search",
          "name": "hideLoading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "Autocomplete",
      "methods": [],
      "name": "ElAutocomplete",
      "slots": [
        {
          "description": "Custom content for input suggestions.",
          "name": "default",
          "params": [],
        },
        {
          "description": "Content as Input prefix",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "Content as Input suffix",
          "name": "suffix",
          "params": [],
        },
        {
          "description": "Content to prepend before Input",
          "name": "prepend",
          "params": [],
        },
        {
          "description": "Content to append after Input",
          "name": "append",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": ""cover"",
          "description": "Set how the image fit its container for an image avatar",
          "name": "fit",
          "options": [
            {
              "label": "fill",
              "value": ""fill"",
            },
            {
              "label": "contain",
              "value": ""contain"",
            },
            {
              "label": "cover",
              "value": ""cover"",
            },
            {
              "label": "none",
              "value": ""none"",
            },
            {
              "label": "scale-down",
              "value": ""scale-down"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""fill"",
              ""contain"",
              ""cover"",
              ""none"",
              ""scale-down"",
            ],
          },
        },
        {
          "defaultValue": ""circle"",
          "description": "Avatar shape",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "This attribute defines an alternative text description of the image",
          "name": "alt",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""large"",
          "description": "Avatar size",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""medium"",
              ""small"",
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Representation type to Icon, more info on Icon Component",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The address of the image for an image avatar",
          "name": "src",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "A list of one or more strings separated by commas indicating a set of possible image sources for the user agent to use",
          "name": "srcSet",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Avatars can be used to represent people or objects. It supports images, Icons, or characters.",
      "events": [
        {
          "description": "handler when img load error, return false to prevent default fallback behavior",
          "name": "error",
          "params": [],
        },
      ],
      "exportName": "Avatar",
      "methods": [],
      "name": "ElAvatar",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Backtop bottom position",
          "name": "bottom",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "200",
          "description": "Backtop visibility height",
          "name": "visibilityHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "40",
          "description": "Backtop right position",
          "name": "right",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "40",
          "description": "Backtop target",
          "name": "target",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "A button to back to top",
      "events": [
        {
          "description": "Triggers when click",
          "name": "click",
          "params": [],
        },
      ],
      "exportName": "Backtop",
      "methods": [],
      "name": "ElBacktop",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "false",
          "description": "If a little dot is displayed",
          "name": "isDot",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Hidden badge",
          "name": "hidden",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Display value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Maximum value, shows '{max}+' when exceeded. Only works if \`value\` is a \`Number\`",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "button type",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
            ],
          },
        },
      ],
      "description": "A number or status mark on buttons and icons.",
      "events": [],
      "exportName": "Badge",
      "methods": [],
      "name": "ElBadge",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Class name of the icon separator",
          "name": "separatorClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""/"",
          "description": "Separator character",
          "name": "separator",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Displays the location of the current page, making it easier to browser back.",
      "events": [],
      "exportName": "Breadcrumb",
      "methods": [],
      "name": "ElBreadcrumb",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "false",
          "description": "If \`true\`, the navigation will not leave a history record",
          "name": "replace",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Target route of the link, same as \`to\` of \`vue-router\`",
          "name": "to",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "BreadcrumbItem",
      "methods": [],
      "name": "ElBreadcrumbItem",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Button type",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
              ""text"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "Determine whether it's a plain button",
          "name": "plain",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Determine whether it's loading",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Button size",
          "name": "size",
          "options": [
            {
              "label": "medium",
              "value": ""medium"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "mini",
              "value": ""mini"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""medium"",
              ""small"",
              ""mini"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon class name",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "Disable the button",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Same as native button's \`autofocus\`",
          "name": "autofocus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Determine whether it's a round button",
          "name": "round",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Determine whether it's a circle button",
          "name": "circle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": ""button"",
          "description": "Same as native button's \`type\`",
          "name": "nativeType",
          "options": [
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "submit",
              "value": ""submit"",
            },
            {
              "label": "reset",
              "value": ""reset"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""button"",
              ""submit"",
              ""reset"",
            ],
          },
        },
      ],
      "description": "Commonly used button.",
      "events": [],
      "exportName": "Button",
      "methods": [],
      "name": "ElButton",
      "slots": [],
    },
    {
      "attrs": [],
      "description": "Displayed as a button group, can be used to group a series of similar operations.",
      "events": [],
      "exportName": "ButtonGroup",
      "methods": [],
      "name": "ElButtonGroup",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "time range, including start time and end time. Start time must be start day of week, end time must be end day of week, the time span cannot exceed two months.",
          "name": "range",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Binding value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "1",
          "description": "First day of week",
          "name": "firstDayOfWeek",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Display date.",
      "events": [],
      "exportName": "Calendar",
      "methods": [],
      "name": "ElCalendar",
      "slots": [
        {
          "description": undefined,
          "name": "dateCell",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": ""always"",
          "description": "When to show card shadows",
          "name": "shadow",
          "options": [
            {
              "label": "always",
              "value": ""always"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "never",
              "value": ""never"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""always"",
              ""hover"",
              ""never"",
            ],
          },
        },
        {
          "defaultValue": "{"padding":"20px"}",
          "description": "CSS style of body",
          "name": "bodyStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Title of the card",
          "name": "header",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Integrate information in a card container.",
      "events": [],
      "exportName": "Card",
      "methods": [],
      "name": "ElCard",
      "slots": [
        {
          "description": "Content of the card",
          "name": "default",
          "params": [],
        },
        {
          "description": "Title of the card",
          "name": "header",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": ""hover"",
          "description": "When arrows are shown",
          "name": "arrow",
          "options": [
            {
              "label": "always",
              "value": ""always"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "never",
              "value": ""never"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""always"",
              ""hover"",
              ""never"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Type of the Carousel",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": ""card"",
        },
        {
          "defaultValue": undefined,
          "description": "Height of the carousel",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "Whether automatically loop the slides",
          "name": "autoplay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Index of the initially active slide (starting from 0)",
          "name": "initialIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Position of the indicators",
          "name": "indicatorPosition",
          "options": [
            {
              "label": "outside",
              "value": ""outside"",
            },
            {
              "label": "none",
              "value": ""none"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""outside"",
              ""none"",
            ],
          },
        },
        {
          "defaultValue": "3000",
          "description": "Interval of the auto loop, in milliseconds",
          "name": "interval",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": ""horizontal"",
          "description": "Display direction",
          "name": "direction",
          "options": [
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
        {
          "defaultValue": ""hover"",
          "description": "How indicators are triggered",
          "name": "trigger",
          "options": [
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "click",
              "value": ""click"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""hover"",
              ""click"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "display the items in loop",
          "name": "loop",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Loop a series of images or texts in a limited space",
      "events": [
        {
          "description": "triggers when the active slide switches",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "Carousel",
      "methods": [],
      "name": "ElCarousel",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Name of the item, can be used in \`setActiveItem\`",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text content for the corresponding indicator",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "CarouselItem",
      "methods": [],
      "name": "ElCarouselItem",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Debounce delay when typing filter keyword, in millisecond",
          "name": "debounce",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Data of the options",
          "name": "options",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the options can be searched",
          "name": "filterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Separator of option labels",
          "name": "separator",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Configuration options",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of Input",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for Cascader's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display all levels of the selected value in the input",
          "name": "showAllLevels",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to collapse selected tags in multiple selection mode",
          "name": "collapseTags",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Cascader is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Input placeholder",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Selected value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether selected value can be cleared",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "If the options have a clear hierarchical structure, Cascader can be used to view and select them.",
      "events": [],
      "exportName": "Cascader",
      "methods": [],
      "name": "ElCascader",
      "slots": [
        {
          "description": "Custom label content",
          "name": "default",
          "params": [],
        },
        {
          "description": "Empty content when no option matches",
          "name": "empty",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Data of the options",
          "name": "options",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to add border",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Configuration options",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Selected value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "CascaderPanel",
      "methods": [],
      "name": "ElCascaderPanel",
      "slots": [
        {
          "description": "Custom label content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Same as indeterminate in native checkbox",
          "name": "indeterminate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "If the checkbox is checked",
          "name": "checked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to add a border around Checkbox",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of the checkbox if it's checked",
          "name": "trueLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of the Checkbox, only works when border is true",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Native 'name' attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of the checkbox if it's not checked",
          "name": "falseLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "If the checkbox is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The form input value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of the checkbox when used inside a checkbox-group",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
      ],
      "description": "A group of options for multiple choices.",
      "events": [],
      "exportName": "Checkbox",
      "methods": [],
      "name": "ElCheckbox",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "If the checkbox is checked",
          "name": "checked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of the checkbox if it's checked",
          "name": "trueLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Native 'name' attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of the checkbox if it's not checked",
          "name": "falseLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "If the checkbox is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of the checkbox when used inside a checkbox-group",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "CheckboxButton",
      "methods": [],
      "name": "ElCheckboxButton",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Border and background color when button is active",
          "name": "fill",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Font color when button is active",
          "name": "textColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of checkbox buttons or bordered checkboxes",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Minimum number of checkbox checked",
          "name": "min",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the nesting checkboxes are disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Maximum number of checkbox checked",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "CheckboxGroup",
      "methods": [],
      "name": "ElCheckboxGroup",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "≥992px Responsive columns or column props object",
          "name": "md",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom element tag",
          "name": "tag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Number of spacing on the left side of the grid",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Number of columns that grid moves to the right",
          "name": "push",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "≥768px Responsive columns or column props object",
          "name": "sm",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Number of columns that grid moves to the left",
          "name": "pull",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "≥1920px Responsive columns or column props object",
          "name": "xl",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "&lt;768px Responsive columns or column props object",
          "name": "xs",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "≥1200px Responsive columns or column props object",
          "name": "lg",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Number of column the grid spans",
          "name": "span",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "Col",
      "methods": [],
      "name": "ElCol",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to activate accordion mode",
          "name": "accordion",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Currently active panel",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "number",
                },
              },
            ],
          },
        },
      ],
      "description": "Use Collapse to store contents.",
      "events": [],
      "exportName": "Collapse",
      "methods": [],
      "name": "ElCollapse",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Unique identification of the panel",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Title of the panel",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Disable the collapse item",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "CollapseItem",
      "methods": [],
      "name": "ElCollapseItem",
      "slots": [
        {
          "description": "Content of the collapse item",
          "name": "default",
          "params": [],
        },
        {
          "description": "Title of the collapse item",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to display the alpha slider",
          "name": "showAlpha",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for ColorPicker's dropdown",
          "name": "colorFormat",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of ColorPicker",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display the alpha slider",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to disable the ColorPicker",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "ColorPicker is a color selector supporting multiple color formats.",
      "events": [],
      "exportName": "ColorPicker",
      "methods": [],
      "name": "ElColorPicker",
      "slots": [],
    },
    {
      "attrs": [],
      "description": undefined,
      "events": [],
      "exportName": "ElComponent",
      "methods": [],
      "name": "ElComponent",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Layout direction for child elements",
          "name": "direction",
          "options": [
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
      ],
      "description": "Wrapper container. When nested with a \`<el-header>\` or \`<el-footer>\`, all its child elements will be vertically arranged. Otherwise horizontally.",
      "events": [],
      "exportName": "Container",
      "methods": [],
      "name": "ElContainer",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Default date of the calendar",
          "name": "defaultValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Type of the picker",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Alignment",
          "name": "align",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether DatePicker is read only",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Format of the picker",
          "name": "format",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of Input",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for DatePicker's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "name for the inner native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder for the start date in range mode",
          "name": "startPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether DatePicker is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder for the end date in range mode",
          "name": "endPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The value of the date picker",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "string",
              },
              {
                "type": "array",
                "value": {
                  "type": "any",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Range separator",
          "name": "rangeSeparator",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the input is editable",
          "name": "editable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Additional options, check the table below",
          "name": "pickerOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Format of binding value. If not specified, the binding value will be a Date object",
          "name": "valueFormat",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Use Date Picker for date input.",
      "events": [],
      "exportName": "DatePicker",
      "methods": [],
      "name": "ElDatePicker",
      "slots": [
        {
          "description": "Custom range separator content",
          "name": "rangeSeparator",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "custom label style",
          "name": "labelStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom content class name",
          "name": "contentClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "with or without border",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of list",
          "name": "size",
          "options": [
            {
              "label": "medium",
              "value": ""medium"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
            {
              "label": "mini",
              "value": ""mini"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""medium"",
              ""small"",
              ""mini"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom label class name",
          "name": "labelClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "title text, display on the top left",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom content style",
          "name": "contentStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "extra text, display on the top right",
          "name": "extra",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "direction of list",
          "name": "direction",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "numbers of Descriptions Item in one line",
          "name": "column",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "change default props colon value of Descriptions Item",
          "name": "colon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Display multiple fields in list form.",
      "events": [],
      "exportName": "Descriptions",
      "methods": [],
      "name": "ElDescriptions",
      "slots": [
        {
          "description": "title slot: custom extra area, display on the top right",
          "name": "extra",
          "params": [],
        },
        {
          "description": "title slot: custom title, display on the top left",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "custom label style",
          "name": "labelStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom content class name",
          "name": "contentClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom label class name",
          "name": "labelClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom content style",
          "name": "contentStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "label text",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the number of columns included",
          "name": "span",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "DescriptionsItem",
      "methods": [],
      "name": "ElDescriptionsItem",
      "slots": [
        {
          "description": "default slot: custom content",
          "name": "default",
          "params": [],
        },
        {
          "description": "label slot: custom label",
          "name": "label",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether the Dialog can be closed by pressing ESC",
          "name": "closeOnPressEscape",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show a close button",
          "name": "showClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the Dialog can be closed by clicking the mask",
          "name": "closeOnClickModal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether scroll of body is disabled while Dialog is displayed",
          "name": "lockScroll",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether a mask is displayed",
          "name": "modal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the Dialog takes up full screen",
          "name": "fullscreen",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to destroy elements in Dialog when closed",
          "name": "destroyOnClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Title of Dialog",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value for margin-top of Dialog CSS",
          "name": "top",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to append modal to body element. If false, the modal will be appended to Dialog's parent element",
          "name": "modalAppendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to align the header and footer in center",
          "name": "center",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Width of Dialog",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class names for Dialog",
          "name": "customClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Informs users while preserving the current page state.",
      "events": [],
      "exportName": "Dialog",
      "methods": [],
      "name": "ElDialog",
      "slots": [
        {
          "description": "Content of the Dialog",
          "name": "default",
          "params": [],
        },
        {
          "description": "Content of the Dialog footer",
          "name": "footer",
          "params": [],
        },
        {
          "description": "Content of the Dialog title",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "enable vertical divider",
          "name": "vertical",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "customize the content on the divider line",
          "name": "posiiton",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "The dividing line that separates the content.",
      "events": [],
      "exportName": "Divider",
      "methods": [],
      "name": "ElDivider",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether the Drawer can be closed by pressing ESC",
          "name": "closeOnPressEscape",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the close button should be rendered to control the drawer's visible state",
          "name": "showClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Flag attribute whi",
          "name": "wrapperClosable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Equivalent to \`Dialog\`'s modal attribute, determines whether the dark shadowing background should show",
          "name": "modal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the drawer component should show, also can be decorated by \`.sync\`",
          "name": "visible",
          "options": [],
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The size of the drawer component, supporting number with unit of pixel, string by percentage e.g. 30%",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Equivalent to \`Dialog\`'s append to body attribute, when applying nested drawer, make sure this one is set to true",
          "name": "appendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Attributes that controls the drawer's direction of display",
          "name": "position",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Determine whether the wrapped children should be destroyed, if true, children's destroyed life cycle method will be called all local state will be destroyed",
          "name": "destroyOnClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The Drawer's title, also can be replaced by named slot \`title\`",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Equivalent to \`Dialog\`'s modal-append-to-body attribute, determines whether the shadowing background should be inserted direct to DocumentBody element",
          "name": "modalAppendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class names for Dialog",
          "name": "customClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Sometimes, \`Dialog\` does not always satisfy our requirements, let's say you have a massive form, or you need space to display something like \`terms & conditions\`, \`Drawer\` has almost identical API with \`Dialog\`, but it introduces different user experience.",
      "events": [],
      "exportName": "Drawer",
      "methods": [],
      "name": "ElDrawer",
      "slots": [
        {
          "description": "Main Content Slots",
          "name": "default",
          "params": [],
        },
        {
          "description": "Title Slots",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Menu button type. only works when split-button is true",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Dropdown tabindex",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "menu size, also works on the split button",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placement of the menu",
          "name": "placement",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay time before hide a dropdown",
          "name": "hideTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Dropdown is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether a button group is displayed",
          "name": "splitButton",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "How to trigger",
          "name": "trigger",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay time before show a dropdown",
          "name": "showTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to hide menu after clicking menu-item",
          "name": "hideOnClick",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Toggleable menu for displaying lists of links and actions.",
      "events": [],
      "exportName": "Dropdown",
      "methods": [],
      "name": "ElDropdown",
      "slots": [
        {
          "description": "Content of Dropdown. Notice: Must be a valid html dom element (ex. \`<span>\`, \`<button>\` etc.) or \`el-component\`, to attach the trigger listener",
          "name": "default",
          "params": [],
        },
        {
          "description": "Content of the Dropdown Menu, usually a \`<el-dropdown-menu>\` element",
          "name": "dropdown",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether a divider is displayed",
          "name": "divided",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Icon to show on left side of text",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the item is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "A command to be dispatched to Dropdown's command callback",
          "name": "command",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "DropdownItem",
      "methods": [],
      "name": "ElDropdownItem",
      "slots": [],
    },
    {
      "attrs": [],
      "description": undefined,
      "events": [],
      "exportName": "DropdownMenu",
      "methods": [],
      "name": "ElDropdownMenu",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "image URL",
          "name": "image",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "description",
          "name": "description",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "image size (width)",
          "name": "imageSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Placeholder hints for empty states.",
      "events": [],
      "exportName": "Empty",
      "methods": [],
      "name": "ElEmpty",
      "slots": [
        {
          "description": "image slot: Custom image",
          "name": "image",
          "params": [],
        },
        {
          "description": "default slot:  Custom bottom content",
          "name": "default",
          "params": [],
        },
        {
          "description": "description slot: Custom description",
          "name": "description",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Height of the footer",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Container for footers.",
      "events": [],
      "exportName": "Footer",
      "methods": [],
      "name": "ElFooter",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Validation rules of form",
          "name": "rules",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Width of label, and all form items will inherit from Form",
          "name": "labelWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Data of form component",
          "name": "model",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display the error message inline with the form item",
          "name": "inlineMessage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Controls the size of components in this form",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show the error message",
          "name": "showMessage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display an icon indicating the validation result",
          "name": "statusIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Position of label",
          "name": "labelPosition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Suffix of the label",
          "name": "labelSuffix",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the form is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Validate the whole form",
          "name": "validate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "struct",
            "value": [],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to trigger validation when the \`rules\` prop is changed",
          "name": "validateOnRuleChange",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the form is inline",
          "name": "inline",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Form consists of \`input\`, \`radio\`, \`select\`, \`checkbox\` and so on. With form, you can collect, verify and submit data.",
      "events": [],
      "exportName": "Form",
      "methods": [],
      "name": "ElForm",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Width of label, e.g. '50px'",
          "name": "labelWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Validation rules of form",
          "name": "rules",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the field is required or not, will be determined by validation rules if omitted",
          "name": "required",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display the error message inline with the form item",
          "name": "inlineMessage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Controls the size of components in this form",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show the error message",
          "name": "showMessage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Field error message, set its value and the field will validate error and show this message immediately",
          "name": "error",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "A key of \`model\` of the enclosing \`el-form\` component",
          "name": "prop",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Label",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "FormItem",
      "methods": [],
      "name": "ElFormItem",
      "slots": [
        {
          "description": "Content of Form Item",
          "name": "default",
          "params": [],
        },
        {
          "description": "Content of label",
          "name": "label",
          "params": [],
        },
        {
          "description": "Custom content to display validation message.",
          "name": "error",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Height of the header",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Container for headers.",
      "events": [],
      "exportName": "Header",
      "methods": [],
      "name": "ElHeader",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Icon name",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Element provides a set of common icons.",
      "events": [],
      "exportName": "Icon",
      "methods": [],
      "name": "ElIcon",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Indicate how the image should be resized to fit its container, same as native 'object-fit'",
          "name": "fit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "zIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Native 'alt' attribute",
          "name": "alt",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Scroll container that to add scroll listener when using lazy load",
          "name": "scrollContainer",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to use lazy load",
          "name": "lazy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "previewSrcList",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Native 'referrerPolicy' attribute",
          "name": "referrerPolicy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Image source",
          "name": "src",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Besides the native features of img, support lazy load, custom placeholder and load failure, etc.",
      "events": [],
      "exportName": "Image",
      "methods": [],
      "name": "ElImage",
      "slots": [
        {
          "description": "Placeholder content when image hasn't loaded yet",
          "name": "placeholder",
          "params": [],
        },
        {
          "description": "Error content when error occurs to image load",
          "name": "error",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Type of input",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as readonly in native input",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show wordCount when setting maxLength",
          "name": "showWordLimit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Maximum Input text length",
          "name": "maxlength",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to trigger form validatio",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of Input, works when type is not 'textarea'",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as name in native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Prefix icon class",
          "name": "prefixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Minimum Input text length",
          "name": "minlength",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Suffix icon class",
          "name": "suffixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as min in native input",
          "name": "min",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Input is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder of Input",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Binding value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "autoComplete",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the input is clearable",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as autocomplete in native input",
          "name": "autocomplete",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as max in native input",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Number of rows of textarea, only works when type is 'textarea'",
          "name": "rows",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as autofocus in native input",
          "name": "autofocus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as form in native input",
          "name": "form",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Control the resizability",
          "name": "resize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show password",
          "name": "showPassword",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as step in native input",
          "name": "step",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether textarea has an adaptive height, only works when type is 'textarea'",
          "name": "autosize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "Input data using mouse or keyboard.",
      "events": [],
      "exportName": "Input",
      "methods": [],
      "name": "ElInput",
      "slots": [
        {
          "description": "Content as Input prefix, only works when \`type\` is 'text'",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "Content as Input suffix, only works when \`type\` is 'text'",
          "name": "suffix",
          "params": [],
        },
        {
          "description": "Content to prepend before Input, only works when \`type\` is 'text'",
          "name": "prepend",
          "params": [],
        },
        {
          "description": "Content to append after Input, only works when \`type\` is 'text'",
          "name": "append",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to enable the control buttons",
          "name": "controls",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Precision of input value",
          "name": "precision",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Debounce delay when typing, in milliseconds",
          "name": "debounce",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether input value can only be multiple of step",
          "name": "stepStrictly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of the component",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as name in native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The minimum allowed value",
          "name": "min",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the component is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Position of the control buttons",
          "name": "controlsPosition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Binding value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The maximum allowed value",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Incremental step",
          "name": "step",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Input numerical values with a customizable range.",
      "events": [],
      "exportName": "InputNumber",
      "methods": [],
      "name": "ElInputNumber",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Link underline",
          "name": "underline",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Link type",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Link href",
          "name": "href",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Link icon, accepts an icon name of Element icon component",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Disable the link",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Link target",
          "name": "target",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Text hyperlink",
      "events": [],
      "exportName": "Link",
      "methods": [],
      "name": "ElLink",
      "slots": [],
    },
    {
      "attrs": [],
      "description": "Container for main sections.",
      "events": [],
      "exportName": "Main",
      "methods": [],
      "name": "ElMain",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Array that contains keys of currently active sub-menus",
          "name": "defaultOpeneds",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Menu display mode",
          "name": "mode",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether vue-router mode is activated. If true, index will be used as 'path' to activate the route action",
          "name": "router",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether only one sub-menu can be active",
          "name": "uniqueOpened",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text color of Menu (hex format)",
          "name": "textColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Index of currently active menu",
          "name": "defaultActive",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text color of currently active menu item (hex format)",
          "name": "activeTextColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Background color of Menu (hex format)",
          "name": "backgroundColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "How sub-menus are triggered, only works when mode is 'horizontal'",
          "name": "menuTrigger",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the menu is collapsed (available only in vertical mode)",
          "name": "collapse",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the menu collapse transition is active",
          "name": "collapseTransition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Menu that provides navigation for your website.",
      "events": [],
      "exportName": "Menu",
      "methods": [],
      "name": "ElMenu",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Unique identification",
          "name": "index",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Vue Router object",
          "name": "route",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "MenuItem",
      "methods": [],
      "name": "ElMenuItem",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Group title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "MenuItemGroup",
      "methods": [],
      "name": "ElMenuItemGroup",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether option is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of option",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Label of option, same as value if omitted",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "Option",
      "methods": [],
      "name": "ElOption",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to disable all options in this group",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Name of the group",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "OptionGroup",
      "methods": [],
      "name": "ElOptionGroup",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "content",
          "name": "content",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "If path of the page is simple, it is recommended to use PageHeader instead of the Breadcrumb.",
      "events": [],
      "exportName": "PageHeader",
      "methods": [],
      "name": "ElPageHeader",
      "slots": [
        {
          "description": "Title content",
          "name": "title",
          "params": [],
        },
        {
          "description": "Content",
          "name": "content",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to use small pagination",
          "name": "small",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Item count of each page",
          "name": "pageSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text for the prev button",
          "name": "prevText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text for the prev button",
          "name": "nextText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for the page size Select's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Options of item count per page",
          "name": "pageSizes",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "number",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Total item count",
          "name": "total",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Total page count. Set either total or page-count and pages will be displayed; if you need page-sizes, total is required",
          "name": "pageCount",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Number of pagers",
          "name": "pagerCount",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to hide when thers's only one page",
          "name": "hideOnSinglePage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Layout of Pagination. Elements separated with a comma.
Accepted values: \`sizes\`, \`prev\`, \`pager\`, \`next\`, \`jumper\`, \`-&gt;\`, \`total\`, \`slot\`",
          "name": "layout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Current page number",
          "name": "currentPage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "If you have too much data to display in one page, use pagination.",
      "events": [],
      "exportName": "Pagination",
      "methods": [],
      "name": "ElPagination",
      "slots": [
        {
          "description": "Custom content. To use this, you need to declare \`slot\` in \`layout\`",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether a tooltip arrow is displayed or not. For more info, please refer to Vue-popper",
          "name": "visibleArrow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover offset",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover tabindex",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for popover",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover placement",
          "name": "placement",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popconfirm icon",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popconfirm title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover content, can be replaced with a default slot",
          "name": "content",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Popover is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Parameters for popper.js",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether popover is visible",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popconfirm ok text",
          "name": "confirmButtonText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popconfirm cancel text",
          "name": "cancelButtonText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popconfirm cancal type",
          "name": "cancelButtonType",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popconfirm hide icon",
          "name": "hideIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "How the popover is triggered",
          "name": "trigger",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popconfirm ok type",
          "name": "confirmButtonType",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover transition animation",
          "name": "transition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay before disappearing when trigger is hover, in milliseconds",
          "name": "closeDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay before appearing when trigger is hover, in milliseconds",
          "name": "openDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popconfirm icon color",
          "name": "iconColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover width",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "A simple confirmation dialog of an element click action.",
      "events": [],
      "exportName": "Popconfirm",
      "methods": [],
      "name": "ElPopconfirm",
      "slots": [
        {
          "description": "HTML element that triggers popover",
          "name": "reference",
          "params": [],
        },
        {
          "description": "Content of popover",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether a tooltip arrow is displayed or not. For more info, please refer to Vue-popper",
          "name": "visibleArrow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover offset",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover tabindex",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for popover",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover placement",
          "name": "placement",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover content, can be replaced with a default slot",
          "name": "content",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Popover is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Parameters for popper.js",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether popover is visible",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "How the popover is triggered",
          "name": "trigger",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover transition animation",
          "name": "transition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay before disappearing when trigger is hover, in milliseconds",
          "name": "closeDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay before appearing when trigger is hover, in milliseconds",
          "name": "openDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popover width",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "Similar to Tooltip, Popover is also built with \`Vue-popper\`",
      "events": [],
      "exportName": "Popover",
      "methods": [],
      "name": "ElPopover",
      "slots": [
        {
          "description": "HTML element that triggers popover",
          "name": "reference",
          "params": [],
        },
        {
          "description": "Content of popover",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to show percentage",
          "name": "showText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The type of progress bar",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Percentage, required",
          "name": "percentage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Circle progress bar stroke line cap",
          "name": "strokeLinecap",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The current status of progress bar",
          "name": "status",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The width of progress bar",
          "name": "strokeWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Background color of progress bar. Overrides \`status\` prop",
          "name": "color",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "params": [],
                "type": "function",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to place the percentage inside progress bar, only works when type is 'line'",
          "name": "textInside",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The canvas width of circle progress bar",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Progress is used to show the progress of current operation, and inform the user the current status.",
      "events": [],
      "exportName": "Progress",
      "methods": [],
      "name": "ElProgress",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to add a border around Radio",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Native 'name' attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether radio is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The form input value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The value of radio",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
      ],
      "description": "Single selection among multiple options.",
      "events": [],
      "exportName": "Radio",
      "methods": [],
      "name": "ElRadio",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Native 'name' attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether radio is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The form input value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The value of radio",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "RadioButton",
      "methods": [],
      "name": "ElRadioButton",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Border and background color when button is active",
          "name": "fill",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Font color when button is active",
          "name": "textColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The size of radio buttons",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the nesting radios are disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "RadioGroup",
      "methods": [],
      "name": "ElRadioGroup",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to display texts",
          "name": "showText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Color of unselected icons",
          "name": "voidColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Class name of unselected icons",
          "name": "voidIconClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Threshold value between medium and high level. The value itself will be included in high level",
          "name": "highThreshold",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Color of texts",
          "name": "textColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text template when the component is read-only",
          "name": "scoreTemplate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether picking half start is allowed",
          "name": "allowHalf",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display current score. show-score and show-text cannot be true at the same time",
          "name": "showScore",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Colors for icons. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding color",
          "name": "colors",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Class names of icons. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding class name",
          "name": "iconClasses",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Rate is read-only",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Max rating score",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Threshold value between low and medium level. The value itself will be included in low level",
          "name": "lowThreshold",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Class name of unselected read-only icons",
          "name": "disabledVoidIconClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text array",
          "name": "texts",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Color of unselected read-only icons",
          "name": "disabledVoidColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Used for rating",
      "events": [],
      "exportName": "Rate",
      "methods": [],
      "name": "ElRate",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "sub title",
          "name": "subTitle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon type",
          "name": "icon",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""warning"",
              ""info"",
              ""error"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Used to give feedback on the result of user's operation or access exception.",
      "events": [],
      "exportName": "Result",
      "methods": [],
      "name": "ElResult",
      "slots": [
        {
          "description": "subTitle slot: custom sub title",
          "name": "subTitle",
          "params": [],
        },
        {
          "description": "extra slot: custom extra area, display on the top right",
          "name": "extra",
          "params": [],
        },
        {
          "description": "icon slot: custom icon",
          "name": "icon",
          "params": [],
        },
        {
          "description": "title slot: custom title",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Layout mode. You can use flex. Works in modern browsers",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Vertical alignment of flex layout",
          "name": "align",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Horizontal alignment of flex layout",
          "name": "justify",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom element tag",
          "name": "tag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Grid spacing",
          "name": "gutter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "Row",
      "methods": [],
      "name": "ElRow",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Custom remote search method",
          "name": "remoteMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether options are loaded from server",
          "name": "remote",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Select is filterable",
          "name": "filterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Displayed text while loading data from server",
          "name": "loadingText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Maximum number of options user can select when multiple is true. No limit when set to 0",
          "name": "multipleLimit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Select is loading data from server",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of Input",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for Select's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The name attribute of select input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether creating new items is allowed. To use this, filterable must be true",
          "name": "allowCreate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Select is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Unique identity key name for value, required when value is an object",
          "name": "valueKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The form input value",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "autoComplete",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether single select can be cleared",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom filter method",
          "name": "filterMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as autocomplete in native input",
          "name": "autocomplete",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether multiple-select is activated",
          "name": "multiple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Displayed text when there is no options",
          "name": "noDataText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to append the popper menu to body",
          "name": "popperAppendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Select first matching option on enter key. Use with filterable or remote",
          "name": "defaultFirstOption",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Displayed text when no data matches the filtering query",
          "name": "noMatchText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "When there are plenty of options, use a drop-down menu to display and select desired ones.",
      "events": [],
      "exportName": "Select",
      "methods": [],
      "name": "ElSelect",
      "slots": [
        {
          "description": "Option component list",
          "name": "default",
          "params": [],
        },
        {
          "description": "Content as Select prefix",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "Content when there is no options",
          "name": "empty",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "how many fake items to render to the DOM; default: 1",
          "name": "count",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether showing the skeleton; default true",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether showing the animation; default: false",
          "name": "animated",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Rendering delay in millseconds; default: 0",
          "name": "throttle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "numbers of the row, only useful when no template slot were given; default: 4",
          "name": "rows",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "When loading data, and you need a rich experience for visual and interactions for your end users, you can choose \`skeleton\`.",
      "events": [],
      "exportName": "Skeleton",
      "methods": [],
      "name": "ElSkeleton",
      "slots": [
        {
          "description": "template slot: Custom rendering skeleton template",
          "name": "template",
          "params": [],
        },
        {
          "description": "default slot:  Real rendering DOM",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "The current rendering skeleton type; default: text",
          "name": "variant",
          "options": [
            {
              "label": "p",
              "value": ""p"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "h1",
              "value": ""h1"",
            },
            {
              "label": "h3",
              "value": ""h3"",
            },
            {
              "label": "caption",
              "value": ""caption"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "image",
              "value": ""image"",
            },
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "rect",
              "value": ""rect"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""p"",
              ""text"",
              ""h1"",
              ""h3"",
              ""caption"",
              ""button"",
              ""image"",
              ""circle"",
              ""rect"",
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "SkeletonItem",
      "methods": [],
      "name": "ElSkeletonItem",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to display control buttons when show-input is true",
          "name": "showInputControls",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Debounce delay when typing, in milliseconds, works when show-input is true",
          "name": "debounce",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display an input box, works when range is false",
          "name": "showInput",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Format of displayed tooltip value",
          "name": "formatTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Slider height, required in vertical mode",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to select a range",
          "name": "range",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Vertical mode",
          "name": "vertical",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display breakpoints",
          "name": "showStops",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Minimum value",
          "name": "min",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of the input box",
          "name": "inputSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Slider is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Current value of the slider",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "number",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for the tooltip",
          "name": "tooltipClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Maximum value",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to display tooltip value",
          "name": "showTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom marks",
          "name": "marks",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "struct",
            "value": [],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Step size",
          "name": "step",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Drag the slider within a fixed range.",
      "events": [],
      "exportName": "Slider",
      "methods": [],
      "name": "ElSlider",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "The type of spinner",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The radius of spinner",
          "name": "radius",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The color of spinner",
          "name": "strokeColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The width of spinner",
          "name": "strokeWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "Spinner",
      "methods": [],
      "name": "ElSpinner",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Current status. It will be automatically set by Steps if not configured.",
          "name": "status",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Step icon",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Step description",
          "name": "description",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Step title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "Step",
      "methods": [],
      "name": "ElStep",
      "slots": [
        {
          "description": "Custom icon",
          "name": "icon",
          "params": [],
        },
        {
          "description": "Step description",
          "name": "description",
          "params": [],
        },
        {
          "description": "Step title",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Status of current step",
          "name": "processStatus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to apply simple theme",
          "name": "simple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The spacing of each step, will be responsive if omitted. Support percentage.",
          "name": "space",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Current activation step",
          "name": "active",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Display direction",
          "name": "direction",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether step description is centered",
          "name": "alignCenter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Status of end step",
          "name": "finishStatus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "Guide the user to complete tasks in accordance with the process. Its steps can be set according to the actual application scenario and the number of the steps can't be less than 2.",
      "events": [],
      "exportName": "Steps",
      "methods": [],
      "name": "ElSteps",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Unique identification",
          "name": "index",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for the popup menu",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay time before hiding a sub-menu",
          "name": "hideTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the sub-menu is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to append the popper menu to body",
          "name": "popperAppendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay time before showing a sub-menu",
          "name": "showTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "Submenu",
      "methods": [],
      "name": "ElSubmenu",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Text displayed when in on state",
          "name": "activeText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Class name of the icon displayed when in on state, overrides on-text",
          "name": "activeIconClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Switch value when in off state",
          "name": "inactiveValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "boolean",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Class name of the icon displayed when in off state, overrides off-text",
          "name": "inactiveIconClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Background color when in on state",
          "name": "activeColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Input name of Switch",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Switch value when in on state",
          "name": "activeValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "boolean",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text displayed when in off state",
          "name": "inactiveText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Switch is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Switch is on",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Background color when in off state",
          "name": "inactiveColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Width of Switch",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Switch is used for switching between two opposing states.",
      "events": [],
      "exportName": "Switch",
      "methods": [],
      "name": "ElSwitch",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Identifier corresponding to the activeName of Tabs, representing the alias of the tab-pane",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tab is closable",
          "name": "closable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tab is lazily rendered",
          "name": "lazy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tab is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Title of the tab",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "TabPane",
      "methods": [],
      "name": "ElTabPane",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether to display a summary row",
          "name": "showSummary",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Table data",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Function that returns custom style for a row, or an object assigning custom style for every row",
          "name": "rowStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Set the default sort column and order",
          "name": "defaultSort",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether width of column automatically fits its container",
          "name": "fit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Function that returns custom style for a row in table header, or an object assigning custom style for every row in table header",
          "name": "headerRowStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether table is striped",
          "name": "stripe",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether expand all rows by default. Only works when the table has a column \`type="expand"\`",
          "name": "defaultExpandAll",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Table's height. By default it has an auto height. If its value is a number, the height is measured in pixels; if its value is a string, the height is affected by external styles",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether table has vertical border",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Displayed text for the first column of summary row",
          "name": "sumText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Controls the behavior of master checkbox in multi-select tables when only some rows are selected",
          "name": "selectOnIndeterminate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Function that returns custom class names for a row, or a string assigning class names for every row",
          "name": "rowClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Function that returns custom class names for a row in table header, or a string assigning class names for every row in table header",
          "name": "headerRowClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Key of current row, a set only prop",
          "name": "currentRowKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Horizontal indentation of nodes in adjacent levels in pixels",
          "name": "indent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to lazy load tree structure data, used with load attribute",
          "name": "lazy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Displayed text when data is empty. You can customize this area with \`slot="empty"\`",
          "name": "emptyText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Table's max-height. The height of the table starts from auto until it reaches the maxHeight limit. The maxHeight is measured in pixels, same as height",
          "name": "maxHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tooltip effect property",
          "name": "tooltipEffect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether table header is visible",
          "name": "showHeader",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether current row is highlighted",
          "name": "highlightCurrentRow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Function that returns custom style for a cell, or an object assigning custom style for every cell",
          "name": "cellStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Function that returns custom class names for a cell in table header, or a string assigning class names for every cell in table header",
          "name": "headerCellClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Function that returns custom style for a cell in table header, or an object assigning custom style for every cell in table header",
          "name": "headerCellStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Function that returns custom class names for a cell, or a string assigning class names for every cell",
          "name": "cellClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Set expanded rows by this prop. Prop's value is the keys of expand rows, you should set row-key before using this prop",
          "name": "expandRowKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
      ],
      "description": "Display multiple data with similar format. You can sort, filter, compare your data in a table.",
      "events": [],
      "exportName": "Table",
      "methods": [],
      "name": "ElTable",
      "slots": [
        {
          "description": "Contents to be inserted after the last row. You may need this slot if you want to implement infinite scroll for the table. This slot will be displayed above the summary row if there is one.",
          "name": "append",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Type of the column. If set to \`selection\`, the column will display checkbox. If set to \`index\`, the column will display index of the row (staring from 1). If set to \`expand\`, the column will display expand icon.",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Alignment",
          "name": "align",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Alignment of the table header. If omitted, the value of the \`align\` attribute will be applied",
          "name": "headerAlign",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The order of the sorting strategies used when sorting the data. Works when \`sortable\` is \`true\`.",
          "name": "sortOrders",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placement for the filter dropdown",
          "name": "filterPlacement",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to reserve selection after data refreshing, works when \`type\` is \`'selection'\`",
          "name": "reserveSelection",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether column is fixed at left/right. Will be fixed at left if \`true\`",
          "name": "fixed",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered",
          "name": "columnKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Class name of the label of this column",
          "name": "labelClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Class name of cells in the column",
          "name": "className",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Field name. You can also use its alias: property",
          "name": "prop",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to hide extra content and show them in a tooltip when hovering on the cell",
          "name": "showOverflowTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether data filtering supports multiple options",
          "name": "filterMultiple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether column width can be resized. Works when border of \`el-table\` is \`true\`",
          "name": "resizable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Filter value for selected data, might be useful when table header is rendered with \`render-header\`",
          "name": "filteredValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Column minimum width. Columns with \`width\` has a fixed width, while columns with \`min-width\` has a width that is distributed in proportion",
          "name": "minWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Column label",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether column can be sorted",
          "name": "sortable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              ""custom"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "An array of data filtering options",
          "name": "filters",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Column width",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "TableColumn",
      "methods": [],
      "name": "ElTableColumn",
      "slots": [
        {
          "description": "Custom content for table columns.",
          "name": "default",
          "params": [],
        },
        {
          "description": "Custom content for table header.",
          "name": "header",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Type of Tab",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tab is closable",
          "name": "closable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Position of tabs",
          "name": "tabPosition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether width of tab automatically fits its container",
          "name": "stretch",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Name of the selected tab",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tab is addable and closable",
          "name": "editable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tab is addable",
          "name": "addable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Divide data collections which are related yet belong to different types.",
      "events": [],
      "exportName": "Tabs",
      "methods": [],
      "name": "ElTabs",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether the removal animation is disabled",
          "name": "disableTransitions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tag type",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tag has a highlighted border",
          "name": "hit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tag size",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tag theme",
          "name": "effect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Background color of the tag",
          "name": "color",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tab can be removed",
          "name": "closable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Used for marking and selection.",
      "events": [],
      "exportName": "Tag",
      "methods": [],
      "name": "ElTag",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Alignment",
          "name": "align",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether DatePicker is read only",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of Input",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for TimePicker's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder for the start time in range mode",
          "name": "startPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether DatePicker is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder for the end time in range mode",
          "name": "endPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of the picker",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Range separator",
          "name": "rangeSeparator",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the input is editable",
          "name": "editable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Additional options, check the table below",
          "name": "pickerOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to pick a time range",
          "name": "isRange",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Use Time Picker for time input.",
      "events": [],
      "exportName": "TimePicker",
      "methods": [],
      "name": "ElTimePicker",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Alignment",
          "name": "align",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether DatePicker is read only",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Size of Input",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for TimePicker's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether DatePicker is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Value of the picker",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the input is editable",
          "name": "editable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Additional options, check the table below",
          "name": "pickerOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "TimeSelect",
      "methods": [],
      "name": "ElTimeSelect",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "reverse",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Visually display timeline.",
      "events": [],
      "exportName": "Timeline",
      "methods": [],
      "name": "ElTimeline",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "placement",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "hideTimestamp",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "timestamp",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "TimelineItem",
      "methods": [],
      "name": "ElTimelineItem",
      "slots": [
        {
          "description": "Custom content for timeline item",
          "name": "default",
          "params": [],
        },
        {
          "description": "Custom defined node",
          "name": "dot",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Whether an arrow is displayed. For more information, check Vue-popper page",
          "name": "visibleArrow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Timeout in milliseconds to hide tooltip",
          "name": "hideAfter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Offset of the Tooltip",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tooltip tabindex",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tooltip theme",
          "name": "effect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom class name for Tooltip's popper",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Position of Tooltip",
          "name": "placement",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to control Tooltip manually. mouseenter and mouseleave won't have effects if set to true",
          "name": "manual",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Display content, can be overridden by slot#content",
          "name": "content",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the mouse can enter the tooltip",
          "name": "enterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Tooltip is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Popper.js parameters",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Visibility of Tooltip",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Animation name",
          "name": "transition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Delay of appearance, in millisecond",
          "name": "openDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Display prompt information for mouse hover.",
      "events": [],
      "exportName": "Tooltip",
      "methods": [],
      "name": "ElTooltip",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Data source",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Key array of initially checked data items of the left list",
          "name": "leftDefaultChecked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom render function for data items",
          "name": "renderContent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether Transfer is filterable",
          "name": "filterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Texts for checking status in list header",
          "name": "format",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placeholder for the filter input",
          "name": "filterPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom button texts",
          "name": "buttonTexts",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Prop aliases for data source",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Key array of initially checked data items of the right list",
          "name": "rightDefaultChecked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Order strategy for elements in the target list",
          "name": "targetOrder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom list titles",
          "name": "titles",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "Transfer",
      "methods": [],
      "name": "ElTransfer",
      "slots": [
        {
          "description": "Custom content for data items.",
          "name": "default",
          "params": [],
        },
        {
          "description": "Content of left list footer",
          "name": "leftFooter",
          "params": [],
        },
        {
          "description": "Content of right list footer",
          "name": "rightFooter",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Tree data",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to check or uncheck node when clicking on the node, if false, the node can only be checked or unchecked by clicking on the checkbox.",
          "name": "checkOnClickNode",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to expand all nodes by default",
          "name": "defaultExpandAll",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether current node is highlighted",
          "name": "highlightCurrent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to expand or collapse node when clicking on the node. If false, then expand or collapse node only when clicking on the arrow icon.",
          "name": "expandOnClickNode",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether only one node among the same level can be expanded at one time",
          "name": "accordion",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Configuration options, see the following table",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether node is selectable",
          "name": "showCheckbox",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Array of keys of initially expanded nodes",
          "name": "defaultExpandedKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Horizontal indentation of nodes in adjacent levels in pixels",
          "name": "indent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text displayed when data is void",
          "name": "emptyText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether enable tree nodes drag and drop",
          "name": "draggable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Array of keys of initially checked nodes",
          "name": "defaultCheckedKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether checked state of a node not affects its father and child nodes when show-checkbox is true",
          "name": "checkStrictly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "TreeStore",
          "name": "store",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom tree node icon",
          "name": "iconClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to expand father node when a child node is expanded",
          "name": "autoExpandParent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Unique identity key name for nodes, its value should be unique across the whole tree",
          "name": "nodeKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Display a set of data with hierarchies.",
      "events": [],
      "exportName": "Tree",
      "methods": [],
      "name": "ElTree",
      "slots": [
        {
          "description": "Custom content for tree nodes.",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Additions options of request",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to show the uploaded file list",
          "name": "showFileList",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Maximum number of uploads allowed",
          "name": "limit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Request URL (required)",
          "name": "action",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to activate drag and drop mode",
          "name": "drag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Default uploaded files",
          "name": "fileList",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "Accepted file types, will not work when thumbnail-mode is true",
          "name": "accept",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Key name for uploaded file",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Type of fileList",
          "name": "listType",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to auto upload file",
          "name": "autoUpload",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether to disable upload",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Request headers",
          "name": "headers",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether thumbnail is displayed",
          "name": "thumbnailMode",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether uploading multiple files is permitted",
          "name": "multiple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether cookies are sent",
          "name": "withCredentials",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Upload files by clicking or drag-and-drop",
      "events": [],
      "exportName": "Upload",
      "methods": [],
      "name": "ElUpload",
      "slots": [
        {
          "description": "Content which triggers file dialog",
          "name": "trigger",
          "params": [],
        },
        {
          "description": "Content of tips",
          "name": "tip",
          "params": [],
        },
      ],
    },
  ],
  "description": "A Component Library for Vue.js.",
  "framework": "vue2",
  "frameworkVersion": "2.5.17",
  "name": "element-ui",
  "version": "2.15.14",
}
`;

exports[`parse vue3 element-plus 1`] = `
{
  "components": [
    {
      "attrs": [
        {
          "defaultValue": "0",
          "description": "offset distance",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of affix",
          "name": "position",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "target container (CSS selector)",
          "name": "target",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "100",
          "description": "\`z-index\` of affix",
          "name": "zIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Fix the element to a specific visible area.",
      "events": [
        {
          "description": "triggers when fixed state changed",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when scrolling",
          "name": "scroll",
          "params": [],
        },
      ],
      "exportName": "ElAffix",
      "methods": [],
      "name": "ElAffix",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "alert title.",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "alert type.",
          "name": "type",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""warning"",
              ""info"",
              ""error"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "descriptive text.",
          "name": "description",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether alert can be dismissed.",
          "name": "closable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether content is placed in the center.",
          "name": "center",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "customized close button text.",
          "name": "closeText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether a type icon is displayed.",
          "name": "showIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "theme style.",
          "name": "effect",
          "options": [
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "dark",
              "value": ""dark"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""light"",
              ""dark"",
            ],
          },
        },
      ],
      "description": "Displays important alert messages.",
      "events": [
        {
          "description": "trigger when alert is closed.",
          "name": "close",
          "params": [],
        },
      ],
      "exportName": "ElAlert",
      "methods": [],
      "name": "ElAlert",
      "slots": [
        {
          "description": "content of the alert description.",
          "name": "default",
          "params": [],
        },
        {
          "description": "content of the alert title.",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [],
      "description": "Through the anchor point, you can quickly find the position of the information content on the current page.",
      "events": [
        {
          "description": "callback when the step changes",
          "name": "change",
          "params": [],
        },
        {
          "description": "Triggered when the user clicks on the link",
          "name": "click",
          "params": [],
        },
      ],
      "exportName": "ElAnchor",
      "methods": [],
      "name": "ElAnchor",
      "slots": [
        {
          "description": "AnchorLink component list",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [],
      "description": undefined,
      "events": [],
      "exportName": "ElAnchorLink",
      "methods": [],
      "name": "ElAnchorLink",
      "slots": [
        {
          "description": "the content of the anchor link.",
          "name": "default",
          "params": [],
        },
        {
          "description": "slots for child links.",
          "name": "subLink",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the placeholder of Autocomplete",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Autocomplete is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "key name of the input suggestion object for display",
          "name": "valueKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "300",
          "description": "debounce delay when typing, in milliseconds",
          "name": "debounce",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placement of the popup menu",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top- start",
              "value": ""top- start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top- start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "a method to fetch input suggestions. When suggestions are ready, invoke \`callback(data:[])\` to return them to Autocomplete",
          "name": "fetchSuggestions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "params": [
                  {
                    "name": "queryString",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "callback",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
                "returnType": {
                  "type": "any",
                },
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether show suggestions when input focus",
          "name": "triggerOnFocus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to emit a \`select\` event on enter when there is no autocomplete match",
          "name": "selectWhenUnmatched",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`name\` in native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`aria-label\` attribute",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to hide the loading icon in remote search",
          "name": "hideLoading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for autocomplete's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether select dropdown is teleported to the body",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to highlight first item in remote search suggestions by default",
          "name": "highlightFirstItem",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the width of the dropdown is the same as the input",
          "name": "fitInputWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to append the dropdown to body. If the positioning of the dropdown is wrong, you can try to set this prop to false",
          "name": "popperAppendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Get some recommended tips based on the current input.",
      "events": [
        {
          "description": "triggers when Input blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Input focuses",
          "name": "focus",
          "params": [],
        },
        {
          "description": "triggers when the Input value change",
          "name": "input",
          "params": [],
        },
        {
          "description": "triggers when the Input is cleared by clicking the clear button",
          "name": "clear",
          "params": [],
        },
        {
          "description": "triggers when a suggestion is clicked",
          "name": "select",
          "params": [],
        },
        {
          "description": "triggers when the icon inside Input value change",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElAutocomplete",
      "methods": [],
      "name": "ElAutocomplete",
      "slots": [
        {
          "description": "custom content for input suggestions",
          "name": "default",
          "params": [],
        },
        {
          "description": "content as Input prefix",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "content as Input suffix",
          "name": "suffix",
          "params": [],
        },
        {
          "description": "content to prepend before Input",
          "name": "prepend",
          "params": [],
        },
        {
          "description": "content to append after Input",
          "name": "append",
          "params": [],
        },
        {
          "description": "override loading content",
          "name": "loading",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "representation type to icon, more info on icon component.",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "avatar size.",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "union",
                "value": [
                  ""large"",
                  ""default"",
                  ""small"",
                ],
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "avatar shape.",
          "name": "shape",
          "options": [
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""circle"",
              ""square"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "the source of the image for an image avatar.",
          "name": "src",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native attribute \`srcset\` of image avatar.",
          "name": "srcSet",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native attribute \`alt\` of image avatar.",
          "name": "alt",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "set how the image fit its container for an image avatar.",
          "name": "fit",
          "options": [
            {
              "label": "fill",
              "value": ""fill"",
            },
            {
              "label": "contain",
              "value": ""contain"",
            },
            {
              "label": "cover",
              "value": ""cover"",
            },
            {
              "label": "none",
              "value": ""none"",
            },
            {
              "label": "scale-down",
              "value": ""scale-down"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""fill"",
              ""contain"",
              ""cover"",
              ""none"",
              ""scale-down"",
            ],
          },
        },
      ],
      "description": "Avatars can be used to represent people or objects. It supports images, Icons, or characters.",
      "events": [
        {
          "description": "trigger when image load error.",
          "name": "error",
          "params": [],
        },
      ],
      "exportName": "ElAvatar",
      "methods": [],
      "name": "ElAvatar",
      "slots": [
        {
          "description": "customize avatar content.",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "the target to trigger scroll.",
          "name": "target",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "200",
          "description": "the button will not show until the scroll height reaches this value.",
          "name": "visibilityHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "40",
          "description": "right distance.",
          "name": "right",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "40",
          "description": "bottom distance.",
          "name": "bottom",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "A button to back to top.",
      "events": [
        {
          "description": "triggers when click.",
          "name": "click",
          "params": [],
        },
      ],
      "exportName": "ElBacktop",
      "methods": [],
      "name": "ElBacktop",
      "slots": [
        {
          "description": "customize default content.",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "display value.",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "99",
          "description": "maximum value, shows \`{max}+\` when exceeded. Only works if value is a number.",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "if a little dot is displayed.",
          "name": "isDot",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "hidden badge.",
          "name": "hidden",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "badge type.",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "Whether to show badge when value is zero.",
          "name": "showZero",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "background color of the dot",
          "name": "color",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "offset of badge",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom style of badge",
          "name": "badgeStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class of badge",
          "name": "badgeClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "A number or status mark on buttons and icons.",
      "events": [],
      "exportName": "ElBadge",
      "methods": [],
      "name": "ElBadge",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize barge content",
          "name": "content",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "separator character",
          "name": "separator",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon component of icon separator",
          "name": "separatorIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "Displays the location of the current page, making it easier to browser back.",
      "events": [],
      "exportName": "ElBreadcrumb",
      "methods": [],
      "name": "ElBreadcrumb",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "target route of the link, same as \`to\` of \`vue-router\`",
          "name": "to",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "if \`true\`, the navigation will not leave a history record",
          "name": "replace",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElBreadcrumbItem",
      "methods": [],
      "name": "ElBreadcrumbItem",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "button size",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "button type, when setting \`color\`, the latter prevails",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
              ""text"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "determine whether it's a plain button",
          "name": "plain",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "determine whether it's a text button",
          "name": "text",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "determine whether the text button background color is always on",
          "name": "bg",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "determine whether it's a link button",
          "name": "link",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "determine whether it's a round button",
          "name": "round",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "determine whether it's a circle button",
          "name": "circle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "determine whether it's loading",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "customize loading icon component",
          "name": "loadingIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "disable the button",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon component",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "same as native button's \`autofocus\`",
          "name": "autofocus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as native button's \`type\`",
          "name": "nativeType",
          "options": [
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "submit",
              "value": ""submit"",
            },
            {
              "label": "reset",
              "value": ""reset"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""button"",
              ""submit"",
              ""reset"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "automatically insert a space between two chinese characters",
          "name": "autoInsertSpace",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom button color, automatically calculate \`hover\` and \`active\` color",
          "name": "color",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "dark mode, which automatically converts \`color\` to dark mode colors",
          "name": "dark",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom element tag",
          "name": "tag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "Commonly used button.",
      "events": [],
      "exportName": "ElButton",
      "methods": [],
      "name": "ElButton",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize loading component",
          "name": "loading",
          "params": [],
        },
        {
          "description": "customize icon component",
          "name": "icon",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "control the size of buttons in this button-group",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "control the type of buttons in this button-group",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElButtonGroup",
      "methods": [],
      "name": "ElButtonGroup",
      "slots": [
        {
          "description": "customize button group content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "time range, including start time and end time. Start time must be start day of week, end time must be end day of week, the time span cannot exceed two months.",
          "name": "range",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "Display date.",
      "events": [],
      "exportName": "ElCalendar",
      "methods": [],
      "name": "ElCalendar",
      "slots": [
        {
          "description": "\`type\` indicates which month the date belongs, optional values are prev-month, current-month, next-month; \`isSelected\` indicates whether the date is selected; \`day\` is the formatted date in the format \`YYYY-MM-DD\`; \`date\` is date the cell represents",
          "name": "dateCell",
          "params": [],
        },
        {
          "description": "content of the Calendar header",
          "name": "header",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "title of the card. Also accepts a DOM passed by \`slot#header\`",
          "name": "header",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "footer of the card. Also accepts a DOM passed by \`slot#footer\`",
          "name": "footer",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "CSS style of card body",
          "name": "bodyStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name of card body",
          "name": "bodyClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "when to show card shadows",
          "name": "shadow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "Integrate information in a card container.",
      "events": [],
      "exportName": "ElCard",
      "methods": [],
      "name": "ElCard",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "content of the Card header",
          "name": "header",
          "params": [],
        },
        {
          "description": "content of the Card footer",
          "name": "footer",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "height of the carousel",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "0",
          "description": "index of the initially active slide (starting from 0)",
          "name": "initialIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "how indicators are triggered",
          "name": "trigger",
          "options": [
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "click",
              "value": ""click"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""hover"",
              ""click"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether automatically loop the slides",
          "name": "autoplay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "3000",
          "description": "interval of the auto loop, in milliseconds",
          "name": "interval",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": """",
          "description": "position of the indicators",
          "name": "indicatorPosition",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "none",
              "value": ""none"",
            },
            {
              "label": "outside",
              "value": ""outside"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""none"",
              ""outside"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "when arrows are shown",
          "name": "arrow",
          "options": [
            {
              "label": "always",
              "value": ""always"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "never",
              "value": ""never"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""always"",
              ""hover"",
              ""never"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "type of the Carousel",
          "name": "type",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "card",
              "value": ""card"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""card"",
            ],
          },
        },
        {
          "defaultValue": "0.83",
          "description": "when type is card, scaled size of secondary cards",
          "name": "cardScale",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "display the items in loop",
          "name": "loop",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "display direction",
          "name": "direction",
          "options": [
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "pause autoplay when hover",
          "name": "pauseOnHover",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "infuse dynamism and smoothness into the carousel",
          "name": "motionBlur",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Loop a series of images or texts in a limited space",
      "events": [
        {
          "description": "triggers when the active slide switches, it has two parameters, the one is the index of the new active slide, and other is index of the old active slide",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElCarousel",
      "methods": [],
      "name": "ElCarousel",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "name of the item, can be used in \`setActiveItem\`",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "text content for the corresponding indicator",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElCarouselItem",
      "methods": [],
      "name": "ElCarouselItem",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "number",
                },
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "data of the options, the key of \`value\` and \`label\` can be customize by \`CascaderProps\`.",
          "name": "options",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "configuration options, see the following \`CascaderProps\` table.",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of input",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder of input",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether Cascader is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether selected value can be cleared",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to display all levels of the selected value in the input",
          "name": "showAllLevels",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether to collapse tags in multiple selection mode",
          "name": "collapseTags",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether show all selected tags when mouse hover text of collapse-tags. To use this, \`collapse-tags\` must be true",
          "name": "collapseTagsTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "" / "",
          "description": "option label separator",
          "name": "separator",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether the options can be searched",
          "name": "filterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "customize search logic, the first parameter is \`node\`, the second is \`keyword\`, and need return a boolean value indicating whether it hits.",
          "name": "filterMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "node",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "keyword",
                "type": {
                  "type": "string",
                },
              },
            ],
            "returnType": {
              "type": "boolean",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "300",
          "description": "debounce delay when typing filter keyword, in milliseconds",
          "name": "debounce",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function before filtering with the value to be filtered as its parameter. If \`false\` is returned or a \`Promise\` is returned and then is rejected, filtering will be aborted",
          "name": "beforeFilter",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "value",
                "type": {
                  "type": "string",
                },
              },
            ],
            "returnType": {
              "type": "boolean",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": """",
          "description": "custom class name for Cascader's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether cascader popup is teleported",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "tag type",
          "name": "tagType",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""info"",
              ""warning"",
              ""danger"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "tag effect",
          "name": "tagEffect",
          "options": [
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "dark",
              "value": ""dark"",
            },
            {
              "label": "plain",
              "value": ""plain"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""light"",
              ""dark"",
              ""plain"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "1",
          "description": "The max tags number to be shown. To use this, \`collpase-tags\` must be true",
          "name": "maxCollapseTags",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "empty values of component, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "emptyValues",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "clear return value, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "valueOnClear",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "params": [],
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "when dropdown is inactive and \`persistent\` is \`false\`, dropdown will be destroyed",
          "name": "persistent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "list of possible positions for Tooltip [popper.js](https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements)",
          "name": "fallbackPlacements",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of dropdown",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top-start",
              "value": ""top-start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "left-start",
              "value": ""left-start"",
            },
            {
              "label": "left-end",
              "value": ""left-end"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "right-start",
              "value": ""right-start"",
            },
            {
              "label": "right-end",
              "value": ""right-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top-start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
              ""left"",
              ""left-start"",
              ""left-end"",
              ""right"",
              ""right-start"",
              ""right-end"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to append the popper menu to body. If the positioning of the popper is wrong, you can try to set this prop to false",
          "name": "popperAppendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "If the options have a clear hierarchical structure, Cascader can be used to view and select them.",
      "events": [
        {
          "description": "triggers when the binding value changes",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when expand option changes",
          "name": "expandChange",
          "params": [],
        },
        {
          "description": "triggers when Cascader blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Cascader focuses",
          "name": "focus",
          "params": [],
        },
        {
          "description": "triggers when the clear icon is clicked in a clearable Select",
          "name": "clear",
          "params": [],
        },
        {
          "description": "triggers when the dropdown appears/disappears",
          "name": "visibleChange",
          "params": [],
        },
        {
          "description": "triggers when remove tag in multiple selection mode",
          "name": "removeTag",
          "params": [],
        },
      ],
      "exportName": "ElCascader",
      "methods": [],
      "name": "ElCascader",
      "slots": [
        {
          "description": "the custom content of cascader node, which are current Node object and node data respectively.",
          "name": "default",
          "params": [],
        },
        {
          "description": "content when there is no matched options.",
          "name": "empty",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "number",
                },
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "data of the options, the key of \`value\` and \`label\` can be customize by \`CascaderProps\`.",
          "name": "options",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "configuration options, see the following \`CascaderProps\` table.",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": undefined,
      "events": [
        {
          "description": "triggers when the binding value changes",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when expand option changes",
          "name": "expandChange",
          "params": [],
        },
        {
          "description": "close panel event, provided to Cascader to put away the panel judgment.",
          "name": "close",
          "params": [],
        },
      ],
      "exportName": "ElCascaderPanel",
      "methods": [],
      "name": "ElCascaderPanel",
      "slots": [
        {
          "description": "the custom content of cascader node, which are current Node object and node data respectively.",
          "name": "default",
          "params": [],
        },
        {
          "description": "the content of the panel when there is no data.",
          "name": "empty",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the Checkbox when used inside a \`checkbox-group\`",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "label of the Checkbox when used inside a \`checkbox-group\`. If there's no value, \`label\` will act as \`value\`",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the Checkbox if it's checked",
          "name": "trueValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the Checkbox if it's not checked",
          "name": "falseValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the Checkbox is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to add a border around Checkbox",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of the Checkbox",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "native 'name' attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "if the Checkbox is checked",
          "name": "checked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Set indeterminate state, only responsible for style control",
          "name": "indeterminate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "input tabindex",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "input id",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as [aria-controls](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls), takes effect when \`indeterminate\` is \`true\`",
          "name": "ariaControls",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the Checkbox if it's checked",
          "name": "trueLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the Checkbox if it's not checked",
          "name": "falseLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as [aria-controls](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls), takes effect when \`indeterminate\` is \`true\`",
          "name": "controls",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "A group of options for multiple choices.",
      "events": [
        {
          "description": "triggers when the binding value changes",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElCheckbox",
      "methods": [],
      "name": "ElCheckbox",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "[]",
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "array",
                "value": {
                  "type": "number",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of checkbox",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the nesting checkboxes are disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "minimum number of checkbox checked",
          "name": "min",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "maximum number of checkbox checked",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`aria-label\` attribute",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "font color when button is active",
          "name": "textColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "border and background color when button is active",
          "name": "fill",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "element tag of the checkbox group",
          "name": "tag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`aria-label\` attribute",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [
        {
          "description": "triggers when the binding value changes",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElCheckboxGroup",
      "methods": [],
      "name": "ElCheckboxGroup",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "value of the checkbox when used inside a \`checkbox-group\`",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "label of the checkbox when used inside a \`checkbox-group\`. If there's no value, \`label\` will act as \`value\`",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the checkbox if it's checked",
          "name": "trueValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the checkbox if it's not checked",
          "name": "falseValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the checkbox is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native 'name' attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "if the checkbox is checked",
          "name": "checked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the checkbox if it's checked",
          "name": "trueLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "value of the checkbox if it's not checked",
          "name": "falseLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElCheckboxButton",
      "methods": [],
      "name": "ElCheckboxButton",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "[]",
          "description": "currently active panel, the type is \`string\` in accordion mode, otherwise it is \`array\`",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to activate accordion mode",
          "name": "accordion",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Use Collapse to store contents.",
      "events": [
        {
          "description": "triggers when active panels change, the parameter type is \`string\` in accordion mode, otherwise it is \`array\`",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElCollapse",
      "methods": [],
      "name": "ElCollapse",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "unique identification of the panel",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "title of the panel",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon of the collapse item",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "disable the collapse item",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElCollapseItem",
      "methods": [],
      "name": "ElCollapseItem",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to disable the ColorPicker",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of ColorPicker",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to display the alpha slider",
          "name": "showAlpha",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "color format of v-model",
          "name": "colorFormat",
          "options": [
            {
              "label": "hsl",
              "value": ""hsl"",
            },
            {
              "label": "hsv",
              "value": ""hsv"",
            },
            {
              "label": "hex",
              "value": ""hex"",
            },
            {
              "label": "rgb",
              "value": ""rgb"",
            },
            {
              "label": "hex",
              "value": ""hex"",
            },
            {
              "label": "rgb",
              "value": ""rgb"",
            },
          ],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              ""hsl"",
              ""hsv"",
              ""hex"",
              ""rgb"",
              ""hex"",
              ""rgb"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for ColorPicker's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "predefined color options",
          "name": "predefine",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "0",
          "description": "ColorPicker tabindex",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "ColorPicker aria-label",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "ColorPicker id",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether color-picker popper is teleported to the body",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "ColorPicker aria-label",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "ColorPicker is a color selector supporting multiple color formats.",
      "events": [
        {
          "description": "triggers when input value changes",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when the current active color changes",
          "name": "activeChange",
          "params": [],
        },
        {
          "description": "triggers when Component focuses",
          "name": "focus",
          "params": [],
        },
        {
          "description": "triggers when Component blurs",
          "name": "blur",
          "params": [],
        },
      ],
      "exportName": "ElColorPicker",
      "methods": [],
      "name": "ElColorPicker",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Locale Object",
          "name": "locale",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "name",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "el",
                "type": {
                  "type": "any",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "global component size",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "global Initial zIndex",
          "name": "zIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "global component className prefix (cooperated with [$namespace](https://github.com/element-plus/element-plus/blob/dev/packages/theme-chalk/src/mixins/config.scss#L1))",
          "name": "namespace",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "button related configuration, [see the following table](#button-attribute)",
          "name": "button",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "autoInsertSpace",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "message related configuration, [see the following table](#message-attribute)",
          "name": "message",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "max",
                "type": {
                  "type": "number",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "features at experimental stage to be added, all features are default to be set to false",
          "name": "experimentalFeatures",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "global empty values of components",
          "name": "emptyValues",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "global clear return value",
          "name": "valueOnClear",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "params": [],
                "type": "function",
              },
            ],
          },
        },
      ],
      "description": "Config Provider is used for providing global configurations, which enables your entire application to access these configurations everywhere.",
      "events": [],
      "exportName": "ElConfigProvider",
      "methods": [],
      "name": "ElConfigProvider",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "layout direction for child elements",
          "name": "direction",
          "options": [
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
      ],
      "description": "Container components for scaffolding basic structure of the page:",
      "events": [],
      "exportName": "ElContainer",
      "methods": [],
      "name": "ElContainer",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "height of the header",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElHeader",
      "methods": [],
      "name": "ElHeader",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "width of the side section",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElAside",
      "methods": [],
      "name": "ElAside",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [],
      "description": undefined,
      "events": [],
      "exportName": "ElMain",
      "methods": [],
      "name": "ElMain",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "height of the footer",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElFooter",
      "methods": [],
      "name": "ElFooter",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "binding value, if it is an array, the length should be 2",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  {
                    "type": "any",
                  },
                  {
                    "type": "any",
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether DatePicker is read only",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether DatePicker is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of Input",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the input is editable",
          "name": "editable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "placeholder in non-range mode",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder for the start date in range mode",
          "name": "startPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder for the end date in range mode",
          "name": "endPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "type of the picker",
          "name": "type",
          "options": [
            {
              "label": "year",
              "value": ""year"",
            },
            {
              "label": "years",
              "value": ""years"",
            },
            {
              "label": "month",
              "value": ""month"",
            },
            {
              "label": "months",
              "value": ""months"",
            },
            {
              "label": "date",
              "value": ""date"",
            },
            {
              "label": "dates",
              "value": ""dates"",
            },
            {
              "label": "datetime",
              "value": ""datetime"",
            },
            {
              "label": "week",
              "value": ""week"",
            },
            {
              "label": "datetimerange",
              "value": ""datetimerange"",
            },
            {
              "label": "daterange",
              "value": ""daterange"",
            },
            {
              "label": "monthrange",
              "value": ""monthrange"",
            },
            {
              "label": "yearrange",
              "value": ""yearrange"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""year"",
              ""years"",
              ""month"",
              ""months"",
              ""date"",
              ""dates"",
              ""datetime"",
              ""week"",
              ""datetimerange"",
              ""daterange"",
              ""monthrange"",
              ""yearrange"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "format of the displayed value in the input box",
          "name": "format",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for DatePicker's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{}",
          "description": "Customized popper option see more at [popper.js](https://popper.js.org/docs/v2/)",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""-"",
          "description": "range separator",
          "name": "rangeSeparator",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "optional, default date of the calendar",
          "name": "defaultValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "optional, the time value to use when selecting date range",
          "name": "defaultTime",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "optional, format of binding value. If not specified, the binding value will be a Date object",
          "name": "valueFormat",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`id\` in native input",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "same as \`name\` in native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "unlink two date-panels in range-picker",
          "name": "unlinkPanels",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "custom prefix icon component. By default, if the value of \`type\` is \`TimeLikeType\`, the value is \`Clock\`, else is \`Calendar\`",
          "name": "prefixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom clear icon component",
          "name": "clearIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "a function determining if a date is disabled with that date as its parameter. Should return a Boolean",
          "name": "disabledDate",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "data",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "boolean",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "[]",
          "description": "an object array to set shortcut options",
          "name": "shortcuts",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "set custom className",
          "name": "cellClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "data",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "string",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether date-picker dropdown is teleported to the body",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "empty values of component, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "emptyValues",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "clear return value, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "valueOnClear",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "params": [],
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "list of possible positions for Tooltip [popper.js](https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements)",
          "name": "fallbackPlacements",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of dropdown",
          "name": "placement",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "Use Date Picker for date input.",
      "events": [
        {
          "description": "triggers when user confirms the value",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when Input blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Input focuses",
          "name": "focus",
          "params": [],
        },
        {
          "description": "triggers when the clear icon is clicked in a clearable DatePicker",
          "name": "clear",
          "params": [],
        },
        {
          "description": "triggers when the calendar selected date is changed.",
          "name": "calendarChange",
          "params": [],
        },
        {
          "description": "triggers when the navigation button click.",
          "name": "panelChange",
          "params": [],
        },
        {
          "description": "triggers when the DatePicker's dropdown appears/disappears",
          "name": "visibleChange",
          "params": [],
        },
      ],
      "exportName": "ElDatePicker",
      "methods": [],
      "name": "ElDatePicker",
      "slots": [
        {
          "description": "custom cell content",
          "name": "default",
          "params": [],
        },
        {
          "description": "custom range separator content",
          "name": "rangeSeparator",
          "params": [],
        },
        {
          "description": "prev month icon",
          "name": "prevMonth",
          "params": [],
        },
        {
          "description": "next month icon",
          "name": "nextMonth",
          "params": [],
        },
        {
          "description": "prev year icon",
          "name": "prevYear",
          "params": [],
        },
        {
          "description": "next year icon",
          "name": "nextYear",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "false",
          "description": "with or without border",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "3",
          "description": "numbers of \`Descriptions Item\` in one line",
          "name": "column",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "direction of list",
          "name": "direction",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of list",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "title text, display on the top left",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "extra text, display on the top right",
          "name": "extra",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "label width of every column",
          "name": "labelWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "Display multiple fields in list form.",
      "events": [],
      "exportName": "ElDescriptions",
      "methods": [],
      "name": "ElDescriptions",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "custom title, display on the top left",
          "name": "title",
          "params": [],
        },
        {
          "description": "custom extra area, display on the top right",
          "name": "extra",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "label text",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "1",
          "description": "colspan of column",
          "name": "span",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "1",
          "description": "the number of rows a cell should span",
          "name": "rowspan",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": """",
          "description": "column width, the width of the same column in different rows is set by the max value (If no \`border\`, width contains label and content)",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "column minimum width, columns with \`width\` has a fixed width, while columns with \`min-width\` has a width that is distributed in proportion (If no\`border\`, width contains label and content)",
          "name": "minWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "column label width, if not set, it will be the same as the width of the column. Higher priority than the \`label-width\` of \`Descriptions\`",
          "name": "labelWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "column content alignment (If no \`border\`, effective for both label and content)",
          "name": "align",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""center"",
              ""right"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "column label alignment, if omitted, the value of the above \`align\` attribute will be applied (If no \`border\`, please use \`align\` attribute)",
          "name": "labelAlign",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""center"",
              ""right"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "column content custom class name",
          "name": "className",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "column label custom class name",
          "name": "labelClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElDescriptionsItem",
      "methods": [],
      "name": "ElDescriptionsItem",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "custom label",
          "name": "label",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "visibility of Dialog",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "title of Dialog. Can also be passed with a named slot (see the following table)",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "width of Dialog, default is 50%",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the Dialog takes up full screen",
          "name": "fullscreen",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "value for \`margin-top\` of Dialog CSS, default is 15vh",
          "name": "top",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether a mask is displayed",
          "name": "modal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class names for mask",
          "name": "modalClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class names for header wrapper",
          "name": "headerClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class names for body wrapper",
          "name": "bodyClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class names for footer wrapper",
          "name": "footerClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to append Dialog itself to body. A nested Dialog should have this attribute set to \`true\`",
          "name": "appendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "which element the Dialog appends to. Will override \`append-to-body\`",
          "name": "appendTo",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether scroll of body is disabled while Dialog is displayed",
          "name": "lockScroll",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "0",
          "description": "the Time(milliseconds) before open",
          "name": "openDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "the Time(milliseconds) before close",
          "name": "closeDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the Dialog can be closed by clicking the mask",
          "name": "closeOnClickModal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the Dialog can be closed by pressing ESC",
          "name": "closeOnPressEscape",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to show a close button",
          "name": "showClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "callback before Dialog closes, and it will prevent Dialog from closing, use done to close the dialog",
          "name": "beforeClose",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "done",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "enable dragging feature for Dialog",
          "name": "draggable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "draggable Dialog can overflow the viewport",
          "name": "overflow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to align the header and footer in center",
          "name": "center",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to align the dialog both horizontally and vertically",
          "name": "alignCenter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "destroy elements in Dialog when closed",
          "name": "destroyOnClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom close icon, default is Close",
          "name": "closeIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as z-index in native CSS, z-order of dialog",
          "name": "zIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "2",
          "description": "header's \`aria-level\` attribute",
          "name": "headerAriaLevel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "custom class names for Dialog",
          "name": "customClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Informs users while preserving the current page state.",
      "events": [
        {
          "description": "triggers when the Dialog opens",
          "name": "open",
          "params": [],
        },
        {
          "description": "triggers when the Dialog opening animation ends",
          "name": "opened",
          "params": [],
        },
        {
          "description": "triggers when the Dialog closes",
          "name": "close",
          "params": [],
        },
        {
          "description": "triggers when the Dialog closing animation ends",
          "name": "closed",
          "params": [],
        },
        {
          "description": "triggers after Dialog opens and content focused",
          "name": "openAutoFocus",
          "params": [],
        },
        {
          "description": "triggers after Dialog closed and content focused",
          "name": "closeAutoFocus",
          "params": [],
        },
      ],
      "exportName": "ElDialog",
      "methods": [],
      "name": "ElDialog",
      "slots": [
        {
          "description": "default content of Dialog",
          "name": "default",
          "params": [],
        },
        {
          "description": "content of the Dialog header; Replacing this removes the title, but does not remove the close button.",
          "name": "header",
          "params": [],
        },
        {
          "description": "content of the Dialog footer",
          "name": "footer",
          "params": [],
        },
        {
          "description": "works the same as the header slot. Use that instead.",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Set divider's direction",
          "name": "direction",
          "options": [
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Set the style of divider",
          "name": "borderStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the position of the customized content on the divider line",
          "name": "contentPosition",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""right"",
              ""center"",
            ],
          },
        },
      ],
      "description": "The dividing line that separates the content.",
      "events": [],
      "exportName": "ElDivider",
      "methods": [],
      "name": "ElDivider",
      "slots": [
        {
          "description": "customized content on the divider line",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "false",
          "description": "Should Drawer be displayed",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Controls should Drawer be inserted to DocumentBody Element, nested Drawer must assign this param to **true**",
          "name": "appendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "which element the Drawer appends to. Will override \`append-to-body\`",
          "name": "appendTo",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether scroll of body is disabled while Drawer is displayed",
          "name": "lockScroll",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "If set, closing procedure will be halted",
          "name": "beforeClose",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "done",
                "type": {
                  "params": [
                    {
                      "name": "cancel",
                      "type": {
                        "type": "boolean",
                      },
                    },
                  ],
                  "returnType": {
                    "type": "any",
                  },
                  "type": "function",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the Drawer can be closed by clicking the mask",
          "name": "closeOnClickModal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "Indicates whether Drawer can be closed by pressing ESC",
          "name": "closeOnPressEscape",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "0",
          "description": "Time(milliseconds) before open",
          "name": "openDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "Time(milliseconds) before close",
          "name": "closeDelay",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "Indicates whether children should be destroyed after Drawer closed",
          "name": "destroyOnClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "Should show shadowing layer",
          "name": "modal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Drawer's opening direction",
          "name": "direction",
          "options": [
            {
              "label": "rtl",
              "value": ""rtl"",
            },
            {
              "label": "ltr",
              "value": ""ltr"",
            },
            {
              "label": "ttb",
              "value": ""ttb"",
            },
            {
              "label": "btt",
              "value": ""btt"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""rtl"",
              ""ltr"",
              ""ttb"",
              ""btt"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "Should show close button at the top right of Drawer",
          "name": "showClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Drawer's size, if Drawer is horizontal mode, it effects the width property, otherwise it effects the height property, when size is \`number\` type, it describes the size by unit of pixels; when size is \`string\` type, it should be used with \`x%\` notation, other wise it will be interpreted to pixel unit",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Drawer's title, can also be set by named slot, detailed descriptions can be found in the slot form",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "Flag that controls the header section's existance, default to true, when withHeader set to false, both \`title attribute\` and \`title slot\` won't work",
          "name": "withHeader",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Extra class names for shadowing layer",
          "name": "modalClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class names for header wrapper",
          "name": "headerClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class names for body wrapper",
          "name": "bodyClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class names for footer wrapper",
          "name": "footerClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "set z-index",
          "name": "zIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "2",
          "description": "header's \`aria-level\` attribute",
          "name": "headerAriaLevel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Extra class names for Drawer",
          "name": "customClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Sometimes, \`Dialog\` does not always satisfy our requirements, let's say you have a massive form, or you need space to display something like \`terms & conditions\`, \`Drawer\` has almost identical API with \`Dialog\`, but it introduces different user experience.",
      "events": [
        {
          "description": "Triggered before Drawer opening animation begins",
          "name": "open",
          "params": [],
        },
        {
          "description": "Triggered after Drawer opening animation ended",
          "name": "opened",
          "params": [],
        },
        {
          "description": "Triggered before Drawer closing animation begins",
          "name": "close",
          "params": [],
        },
        {
          "description": "Triggered after Drawer closing animation ended",
          "name": "closed",
          "params": [],
        },
        {
          "description": "triggers after Drawer opens and content focused",
          "name": "openAutoFocus",
          "params": [],
        },
        {
          "description": "triggers after Drawer closed and content focused",
          "name": "closeAutoFocus",
          "params": [],
        },
      ],
      "exportName": "ElDrawer",
      "methods": [],
      "name": "ElDrawer",
      "slots": [
        {
          "description": "Drawer's Content",
          "name": "default",
          "params": [],
        },
        {
          "description": "Drawer header section; Replacing this removes the title, but does not remove the close button.",
          "name": "header",
          "params": [],
        },
        {
          "description": "Drawer footer Section",
          "name": "footer",
          "params": [],
        },
        {
          "description": "Works the same as the header slot. Use that instead.",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "menu button type, refer to \`Button\` Component, only works when \`split-button\` is true",
          "name": "type",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""default"",
              ""primary"",
              ""success"",
              ""warning"",
              ""info"",
              ""danger"",
              ""text"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "menu size, also works on the split button",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "the max height of menu",
          "name": "maxHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether a button group is displayed",
          "name": "splitButton",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to disable",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placement of pop menu",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top-start",
              "value": ""top-start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top-start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "how to trigger",
          "name": "trigger",
          "options": [
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "contextmenu",
              "value": ""contextmenu"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""hover"",
              ""click"",
              ""contextmenu"",
            ],
          },
        },
        {
          "defaultValue": "["Enter","Space","ArrowDown","NumpadEnter"]",
          "description": "specify whick keys on the keyboard can trigger when pressed",
          "name": "triggerKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to hide menu after clicking menu-item",
          "name": "hideOnClick",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "150",
          "description": "delay time before show a dropdown (only works when trigger is \`hover\`)",
          "name": "showTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "150",
          "description": "delay time before hide a dropdown (only works when trigger is \`hover\`)",
          "name": "hideTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the ARIA role attribute for the dropdown menu. Depending on the use case, you may want to change this to 'navigation'",
          "name": "role",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "0",
          "description": "[tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of Dropdown",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "custom class name for Dropdown's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{"modifiers":[{"name":"computeStyles","options":{"gpuAcceleration":false}}]}",
          "description": "[popper.js](https://popper.js.org/docs/v2/) parameters",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the dropdown popup is teleported to the body",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Toggleable menu for displaying lists of links and actions.",
      "events": [
        {
          "description": "if \`split-button\` is \`true\`, triggers when left button is clicked",
          "name": "click",
          "params": [],
        },
        {
          "description": "triggers when a dropdown item is clicked, the parameters is the command dispatched from the dropdown item",
          "name": "command",
          "params": [],
        },
        {
          "description": "triggers when the dropdown appears/disappears, the param is true when it appears, and false otherwise",
          "name": "visibleChange",
          "params": [],
        },
      ],
      "exportName": "ElDropdown",
      "methods": [],
      "name": "ElDropdown",
      "slots": [
        {
          "description": "content of Dropdown. Notice: Must be a valid html dom element (ex. \`<span>, <button> etc.\`) or \`el-component\`, to attach the trigger listener",
          "name": "default",
          "params": [],
        },
        {
          "description": "content of the Dropdown Menu, usually a \`<el-dropdown-menu>\` element",
          "name": "dropdown",
          "params": [],
        },
      ],
    },
    {
      "attrs": [],
      "description": undefined,
      "events": [],
      "exportName": "ElDropdownMenu",
      "methods": [],
      "name": "ElDropdownMenu",
      "slots": [
        {
          "description": "content of Dropdown Menu",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "a command to be dispatched to Dropdown's \`command\` callback",
          "name": "command",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the item is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether a divider is displayed",
          "name": "divided",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom icon",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElDropdownItem",
      "methods": [],
      "name": "ElDropdownItem",
      "slots": [
        {
          "description": "customize of Dropdown Item",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "image URL of empty",
          "name": "image",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "image size (width) of empty",
          "name": "imageSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": """",
          "description": "description of empty",
          "name": "description",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Placeholder hints for empty states.",
      "events": [],
      "exportName": "ElEmpty",
      "methods": [],
      "name": "ElEmpty",
      "slots": [
        {
          "description": "content as bottom content",
          "name": "default",
          "params": [],
        },
        {
          "description": "content as image",
          "name": "image",
          "params": [],
        },
        {
          "description": "content as description",
          "name": "description",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Data of form component.",
          "name": "model",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Validation rules of form.",
          "name": "rules",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "Whether the form is inline.",
          "name": "inline",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Position of label. If set to \`'left'\` or \`'right'\`, \`label-width\` prop is also required.",
          "name": "labelPosition",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "top",
              "value": ""top"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""right"",
              ""top"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "Width of label, e.g. \`'50px'\`. All its direct child form items will inherit this value. \`auto\` is supported.",
          "name": "labelWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "Suffix of the label.",
          "name": "labelSuffix",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "Whether to hide required fields should have a red asterisk (star) beside their labels.",
          "name": "hideRequiredAsterisk",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Position of asterisk.",
          "name": "requireAsteriskPosition",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""right"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "Whether to show the error message.",
          "name": "showMessage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Whether to display the error message inline with the form item.",
          "name": "inlineMessage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Whether to display an icon indicating the validation result.",
          "name": "statusIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "Whether to trigger validation when the \`rules\` prop is changed.",
          "name": "validateOnRuleChange",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Control the size of components in this form.",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "Whether to disable all components in this form. If set to \`true\`, it will override the \`disabled\` prop of the inner component.",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "When validation fails, scroll to the first error form entry.",
          "name": "scrollToError",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "When validation fails, it scrolls to the first error item based on the scrollIntoView option. [scrollIntoView](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView).",
          "name": "scrollIntoViewOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
      ],
      "description": "Form consists of \`input\`, \`radio\`, \`select\`, \`checkbox\` and so on. With form, you can collect, verify and submit data.",
      "events": [
        {
          "description": "triggers after a form item is validated",
          "name": "validate",
          "params": [],
        },
      ],
      "exportName": "ElForm",
      "methods": [],
      "name": "ElForm",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "A key of \`model\`. It could be a path of the property (e.g \`a.b.0\` or \`['a', 'b', '0']\`). In the use of \`validate\` and \`resetFields\` method, the attribute is required.",
          "name": "prop",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Label text.",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "Position of item label. If set to \`'left'\` or \`'right'\`, \`label-width\` prop is also required. Default extend \`label-postion\` of \`form\`.",
          "name": "labelPosition",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "top",
              "value": ""top"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""right"",
              ""top"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "Width of label, e.g. \`'50px'\`. \`'auto'\` is supported.",
          "name": "labelWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Whether the field is required or not, will be determined by validation rules if omitted.",
          "name": "required",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Validation rules of form, see the [following table](#formitemrule), more advanced usage at [async-validator](https://github.com/yiminghe/async-validator).",
          "name": "rules",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Field error message, set its value and the field will validate error and show this message immediately.",
          "name": "error",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "Whether to show the error message.",
          "name": "showMessage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "Inline style validate message.",
          "name": "inlineMessage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Control the size of components in this form-item.",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Same as for in native label.",
          "name": "for",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Validation state of formItem.",
          "name": "validateStatus",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "validating",
              "value": ""validating"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""error"",
              ""validating"",
              ""success"",
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElFormItem",
      "methods": [],
      "name": "ElFormItem",
      "slots": [
        {
          "description": "Content of Form Item.",
          "name": "default",
          "params": [],
        },
        {
          "description": "Custom content to display on label.",
          "name": "label",
          "params": [],
        },
        {
          "description": "Custom content to display validation message.",
          "name": "error",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "SVG tag's fill attribute",
          "name": "color",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "SVG icon size, size x size",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
      ],
      "description": "Element Plus provides a set of common icons.",
      "events": [],
      "exportName": "ElIcon",
      "methods": [],
      "name": "ElIcon",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "image source, same as native.",
          "name": "src",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "indicate how the image should be resized to fit its container, same as [object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit).",
          "name": "fit",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "fill",
              "value": ""fill"",
            },
            {
              "label": "contain",
              "value": ""contain"",
            },
            {
              "label": "cover",
              "value": ""cover"",
            },
            {
              "label": "none",
              "value": ""none"",
            },
            {
              "label": "scale-down",
              "value": ""scale-down"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""fill"",
              ""contain"",
              ""cover"",
              ""none"",
              ""scale-down"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "when enabling preview, use this flag to control whether clicking on backdrop can exit preview mode.",
          "name": "hideOnClickModal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Indicates how the browser should load the image, same as [native](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-loading).",
          "name": "loading",
          "options": [
            {
              "label": "eager",
              "value": ""eager"",
            },
            {
              "label": "lazy",
              "value": ""lazy"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""eager"",
              ""lazy"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to use lazy load.",
          "name": "lazy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the container to add scroll listener when using lazy load. By default, the container to add scroll listener when using lazy load.",
          "name": "scrollContainer",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "native attribute \`alt\`.",
          "name": "alt",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native attribute [referrerPolicy](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/referrerPolicy).",
          "name": "referrerpolicy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native attribute [crossorigin](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin).",
          "name": "crossorigin",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "anonymous",
              "value": ""anonymous"",
            },
            {
              "label": "use-credentials",
              "value": ""use-credentials"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""anonymous"",
              ""use-credentials"",
            ],
          },
        },
        {
          "defaultValue": "[]",
          "description": "allow big image preview.",
          "name": "previewSrcList",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "set image preview z-index.",
          "name": "zIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "initial preview image index, less than the length of \`url-list\`.",
          "name": "initialIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the image-viewer can be closed by pressing ESC.",
          "name": "closeOnPressEscape",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to append image-viewer to body. A nested parent element attribute transform should have this attribute set to \`true\`.",
          "name": "previewTeleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the viewer preview is infinite.",
          "name": "infinite",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "1.2",
          "description": "the zoom rate of the image viewer zoom event.",
          "name": "zoomRate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0.2",
          "description": "the min scale of the image viewer zoom event.",
          "name": "minScale",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "7",
          "description": "the max scale of the image viewer zoom event.",
          "name": "maxScale",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Besides the native features of img, support lazy load, custom placeholder and load failure, etc.",
      "events": [
        {
          "description": "same as native load.",
          "name": "load",
          "params": [],
        },
        {
          "description": "same as native error.",
          "name": "error",
          "params": [],
        },
        {
          "description": "trigger when switching images.",
          "name": "switch",
          "params": [],
        },
        {
          "description": "trigger when clicking on close button or when \`hide-on-click-modal\` enabled clicking on backdrop.",
          "name": "close",
          "params": [],
        },
        {
          "description": "trigger when the viewer displays",
          "name": "show",
          "params": [],
        },
      ],
      "exportName": "ElImage",
      "methods": [],
      "name": "ElImage",
      "slots": [
        {
          "description": "custom placeholder content when image hasn't loaded yet.",
          "name": "placeholder",
          "params": [],
        },
        {
          "description": "custom image load failed content.",
          "name": "error",
          "params": [],
        },
        {
          "description": "custom content when image preview.",
          "name": "viewer",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "[]",
          "description": "preview link list.",
          "name": "urlList",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "preview backdrop z-index.",
          "name": "zIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": "0",
          "description": "the initial preview image index, less than or equal to the length of \`url-list\`.",
          "name": "initialIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether preview is infinite.",
          "name": "infinite",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether user can emit close event when clicking backdrop.",
          "name": "hideOnClickModal",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to append image itself to body. A nested parent element attribute transform should have this attribute set to \`true\`.",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "1.2",
          "description": "the zoom rate of the image viewer zoom event.",
          "name": "zoomRate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0.2",
          "description": "the min scale of the image viewer zoom event.",
          "name": "minScale",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "7",
          "description": "the max scale of the image viewer zoom event.",
          "name": "maxScale",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the image-viewer can be closed by pressing ESC.",
          "name": "closeOnPressEscape",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [
        {
          "description": "trigger when clicking on close button or when \`hide-on-click-modal\` enabled clicking on backdrop.",
          "name": "close",
          "params": [],
        },
        {
          "description": "trigger when switching images.",
          "name": "switch",
          "params": [],
        },
        {
          "description": "trigger when rotating images.",
          "name": "rotate",
          "params": [],
        },
      ],
      "exportName": "ElImageViewer",
      "methods": [],
      "name": "ElImageViewer",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "null",
          "description": "the minimum allowed value",
          "name": "min",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "null",
          "description": "the maximum allowed value",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "1",
          "description": "incremental step",
          "name": "step",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether input value can only be multiple of step",
          "name": "stepStrictly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "precision of input value",
          "name": "precision",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of the component",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "same as \`readonly\` in native input",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the component is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to enable the control buttons",
          "name": "controls",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of the control buttons",
          "name": "controlsPosition",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""right"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`name\` in native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`placeholder\` in native input",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`id\` in native input",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "value should be set when input box is cleared",
          "name": "valueOnClear",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  ""min"",
                  ""max"",
                ],
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Input numerical values with a customizable range.",
      "events": [
        {
          "description": "triggers when the value changes",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when Input blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Input focuses",
          "name": "focus",
          "params": [],
        },
      ],
      "exportName": "ElInputNumber",
      "methods": [],
      "name": "ElInputNumber",
      "slots": [
        {
          "description": "custom input box button decrease icon",
          "name": "decreaseIcon",
          "params": [],
        },
        {
          "description": "custom input box button increase icon",
          "name": "increaseIcon",
          "params": [],
        },
        {
          "description": "content as Input prefix",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "content as Input suffix",
          "name": "suffix",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "max number tags that can be enter",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "tag type",
          "name": "tagType",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""success"",
              ""info"",
              ""warning"",
              ""danger"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "tag effect",
          "name": "tagEffect",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "dark",
              "value": ""dark"",
            },
            {
              "label": "plain",
              "value": ""plain"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""light"",
              ""dark"",
              ""plain"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "the key to trigger input tag",
          "name": "trigger",
          "options": [
            {
              "label": "Enter",
              "value": ""Enter"",
            },
            {
              "label": "Space",
              "value": ""Space"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""Enter"",
              ""Space"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether tags can be dragged",
          "name": "draggable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "input box size",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to disable input-tag",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "same as \`readonly\` in native input",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "same as \`autofocus\` in native input",
          "name": "autofocus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`id\` in native input",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`tabindex\` in native input",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`maxlength\` in native input",
          "name": "maxlength",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`minlength\` in native input",
          "name": "minlength",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder of input",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`autocomplete\` in native input",
          "name": "autocomplete",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`aria-label\` attribute",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "The InputTag component allows users to add content as tags.",
      "events": [
        {
          "description": "triggers when the modelValue change",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when the input value change",
          "name": "input",
          "params": [],
        },
        {
          "description": "triggers when a tag is added",
          "name": "addTag",
          "params": [],
        },
        {
          "description": "triggers when a tag is removed",
          "name": "removeTag",
          "params": [],
        },
        {
          "description": "triggers when InputTag focuses",
          "name": "focus",
          "params": [],
        },
        {
          "description": "triggers when InputTag blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when the clear icon is clicked",
          "name": "clear",
          "params": [],
        },
      ],
      "exportName": "ElInputTag",
      "methods": [],
      "name": "ElInputTag",
      "slots": [
        {
          "description": "content as tag",
          "name": "tag",
          "params": [],
        },
        {
          "description": "content as InputTag prefix",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "content as InputTag suffix",
          "name": "suffix",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "type of input",
          "name": "type",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`maxlength\` in native input",
          "name": "maxlength",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`minlength\` in native input",
          "name": "minlength",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether show word count, only works when \`type\` is 'text' or 'textarea'",
          "name": "showWordLimit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder of Input",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to show clear button, only works when \`type\` is not 'textarea'",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "specifies the format of the value presented input.(only works when \`type\` is 'text')",
          "name": "formatter",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "value",
                "type": {
                  "type": "union",
                  "value": [
                    {
                      "type": "string",
                    },
                    {
                      "type": "number",
                    },
                  ],
                },
              },
            ],
            "returnType": {
              "type": "string",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "specifies the value extracted from formatter input.(only works when \`type\` is 'text')",
          "name": "parser",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "value",
                "type": {
                  "type": "string",
                },
              },
            ],
            "returnType": {
              "type": "string",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to show toggleable password input",
          "name": "showPassword",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Input is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of Input, works when \`type\` is not 'textarea'",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "prefix icon component",
          "name": "prefixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "suffix icon component",
          "name": "suffixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "2",
          "description": "number of rows of textarea, only works when \`type\` is 'textarea'",
          "name": "rows",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether textarea has an adaptive height, only works when \`type\` is 'textarea'. Can accept an object, e.g. \`{ minRows: 2, maxRows: 6 }\`",
          "name": "autosize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "minRows",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "maxRows",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`autocomplete\` in native input",
          "name": "autocomplete",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`name\` in native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "same as \`readonly\` in native input",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`max\` in native input",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`min\` in native input",
          "name": "min",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`step\` in native input",
          "name": "step",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "control the resizability",
          "name": "resize",
          "options": [
            {
              "label": "none",
              "value": ""none"",
            },
            {
              "label": "both",
              "value": ""both"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""none"",
              ""both"",
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "same as \`autofocus\` in native input",
          "name": "autofocus",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`form\` in native input",
          "name": "form",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "input tabindex",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "the style of the input element or textarea element",
          "name": "inputStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Input data using mouse or keyboard.",
      "events": [
        {
          "description": "triggers when Input blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Input focuses",
          "name": "focus",
          "params": [],
        },
        {
          "description": "triggers when the input box loses focus or the user presses Enter, only if the modelValue has changed",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when the Input value change",
          "name": "input",
          "params": [],
        },
        {
          "description": "triggers when the Input is cleared by clicking the clear button",
          "name": "clear",
          "params": [],
        },
      ],
      "exportName": "ElInput",
      "methods": [],
      "name": "ElInput",
      "slots": [
        {
          "description": "content as Input prefix, only works when \`type\` is not 'textarea'",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "content as Input suffix, only works when \`type\` is not 'textarea'",
          "name": "suffix",
          "params": [],
        },
        {
          "description": "content to prepend before Input, only works when \`type\` is not 'textarea'",
          "name": "prepend",
          "params": [],
        },
        {
          "description": "content to append after Input, only works when \`type\` is not 'textarea'",
          "name": "append",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "0",
          "description": "grid spacing",
          "name": "gutter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "horizontal alignment of flex layout",
          "name": "justify",
          "options": [
            {
              "label": "start",
              "value": ""start"",
            },
            {
              "label": "end",
              "value": ""end"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
            {
              "label": "space-around",
              "value": ""space-around"",
            },
            {
              "label": "space-between",
              "value": ""space-between"",
            },
            {
              "label": "space-evenly",
              "value": ""space-evenly"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""start"",
              ""end"",
              ""center"",
              ""space-around"",
              ""space-between"",
              ""space-evenly"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "vertical alignment of flex layout",
          "name": "align",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "middle",
              "value": ""middle"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""middle"",
              ""bottom"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom element tag",
          "name": "tag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElRow",
      "methods": [],
      "name": "ElRow",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "24",
          "description": "number of column the grid spans",
          "name": "span",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "number of spacing on the left side of the grid",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "number of columns that grid moves to the right",
          "name": "push",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "number of columns that grid moves to the left",
          "name": "pull",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "\`<768px\` Responsive columns or column props object",
          "name": "xs",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "span",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "\`≥768px\` Responsive columns or column props object",
          "name": "sm",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "span",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "\`≥992px\` Responsive columns or column props object",
          "name": "md",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "span",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "\`≥1200px\` Responsive columns or column props object",
          "name": "lg",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "span",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "\`≥1920px\` Responsive columns or column props object",
          "name": "xl",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "span",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "offset",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "pull",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "push",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom element tag",
          "name": "tag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElCol",
      "methods": [],
      "name": "ElCol",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "type",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
              ""default"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the component has underline",
          "name": "underline",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the component is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as native hyperlink's \`href\`",
          "name": "href",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as native hyperlink's \`target\`",
          "name": "target",
          "options": [
            {
              "label": "_blank",
              "value": ""_blank"",
            },
            {
              "label": "_parent",
              "value": ""_parent"",
            },
            {
              "label": "_self",
              "value": ""_self"",
            },
            {
              "label": "_top",
              "value": ""_top"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""_blank"",
              ""_parent"",
              ""_self"",
              ""_top"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon component",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": "Text hyperlink",
      "events": [],
      "exportName": "ElLink",
      "methods": [],
      "name": "ElLink",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize icon component",
          "name": "icon",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "[]",
          "description": "mention options list",
          "name": "options",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": ""@"",
          "description": "prefix character to trigger mentions. The string length must be exactly 1",
          "name": "prefix",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": "" "",
          "description": "character to split mentions. The string length must be exactly 1",
          "name": "split",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "customize filter option logic",
          "name": "filterOption",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "params": [
                  {
                    "name": "pattern",
                    "type": {
                      "type": "string",
                    },
                  },
                  {
                    "name": "option",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
                "returnType": {
                  "type": "boolean",
                },
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": ""bottom"",
          "description": "set popup placement",
          "name": "placement",
          "options": [
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "top",
              "value": ""top"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""bottom"",
              ""top"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the dropdown panel has an arrow",
          "name": "showArrow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "0",
          "description": "offset of the dropdown panel",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "when backspace is pressed to delete, whether the mention content is deleted as a whole",
          "name": "whole",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "when backspace is pressed to delete, check if the mention is a whole",
          "name": "checkIsWhole",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "pattern",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "prefix",
                "type": {
                  "type": "string",
                },
              },
            ],
            "returnType": {
              "type": "boolean",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the dropdown panel of mentions is in a loading state",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "input value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for dropdown panel",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "[popper.js](https://popper.js.org/docs/v2/) parameters",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": undefined,
          "name": "[input props]",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "Used to mention someone or something in an input.",
      "events": [
        {
          "description": "trigger when prefix hit",
          "name": "search",
          "params": [],
        },
        {
          "description": "trigger when user select the option",
          "name": "select",
          "params": [],
        },
        {
          "description": undefined,
          "name": "[input events]",
          "params": [],
        },
      ],
      "exportName": "ElMention",
      "methods": [],
      "name": "ElMention",
      "slots": [
        {
          "description": "content as option label",
          "name": "label",
          "params": [],
        },
        {
          "description": "content as option loading",
          "name": "loading",
          "params": [],
        },
        {
          "description": "content at the top of the dropdown",
          "name": "header",
          "params": [],
        },
        {
          "description": "content at the bottom of the dropdown",
          "name": "footer",
          "params": [],
        },
        {
          "description": undefined,
          "name": "[input slots]",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "menu display mode",
          "name": "mode",
          "options": [
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the menu is collapsed (available only in vertical mode)",
          "name": "collapse",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the menu is ellipsis (available only in horizontal mode)",
          "name": "ellipsis",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom ellipsis icon (available only in horizontal mode and ellipsis is true)",
          "name": "ellipsisIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "6",
          "description": "offset of the popper (effective for all submenus)",
          "name": "popperOffset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": """",
          "description": "index of active menu on page load",
          "name": "defaultActive",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "[]",
          "description": "array that contains indexes of currently active sub-menus",
          "name": "defaultOpeneds",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": "false",
          "description": "whether only one sub-menu can be active",
          "name": "uniqueOpened",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "how sub-menus are triggered, only works when \`mode\` is 'horizontal'",
          "name": "menuTrigger",
          "options": [
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "click",
              "value": ""click"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""hover"",
              ""click"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether \`vue-router\` mode is activated. If true, index will be used as 'path' to activate the route action. Use with \`default-active\` to set the active item on load.",
          "name": "router",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to enable the collapse transition",
          "name": "collapseTransition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tooltip theme, built-in theme: \`dark\` / \`light\` when menu is collapsed",
          "name": "popperEffect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "union",
                "value": [
                  ""dark"",
                  ""light"",
                ],
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "optional, whether menu is collapsed when clicking outside",
          "name": "closeOnClickOutside",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for all popup menus",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "300",
          "description": "control timeout for all menus before showing",
          "name": "showTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "300",
          "description": "control timeout for all menus before hiding",
          "name": "hideTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "background color of Menu (hex format) (use \`--el-menu-bg-color\` in a style class instead)",
          "name": "backgroundColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "text color of Menu (hex format) ( use \`--el-menu-text-color\` in a style class instead)",
          "name": "textColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "text color of currently active menu item (hex format) ( use \`--el-menu-active-color\` in a style class instead)",
          "name": "activeTextColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Menu that provides navigation for your website.",
      "events": [
        {
          "description": "callback function when menu is activated",
          "name": "select",
          "params": [],
        },
        {
          "description": "callback function when sub-menu expands",
          "name": "open",
          "params": [],
        },
        {
          "description": "callback function when sub-menu collapses",
          "name": "close",
          "params": [],
        },
      ],
      "exportName": "ElMenu",
      "methods": [],
      "name": "ElMenu",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "unique identification",
          "name": "index",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for the popup menu",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "timeout before showing a sub-menu(inherit \`show-timeout\` of the menu by default.)",
          "name": "showTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "timeout before hiding a sub-menu(inherit \`hide-timeout\` of the menu by default.)",
          "name": "hideTimeout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the sub-menu is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether popup menu is teleported to the body, the default is true for the level one SubMenu, false for other SubMenus",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "offset of the popper (overrides the \`popper\` of menu)",
          "name": "popperOffset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Icon when menu are expanded and submenu are closed, \`expand-close-icon\` and \`expand-open-icon\` need to be passed together to take effect",
          "name": "expandCloseIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Icon when menu are expanded and submenu are opened, \`expand-open-icon\` and \`expand-close-icon\` need to be passed together to take effect",
          "name": "expandOpenIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Icon when menu are collapsed and submenu are closed, \`collapse-close-icon\` and \`collapse-open-icon\` need to be passed together to take effect",
          "name": "collapseCloseIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Icon when menu are collapsed and submenu are opened, \`collapse-open-icon\` and \`collapse-close-icon\` need to be passed together to take effect",
          "name": "collapseOpenIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElSubMenu",
      "methods": [],
      "name": "ElSubMenu",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize title content",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "null",
          "description": "unique identification",
          "name": "index",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Vue Router Route Location Parameters",
          "name": "route",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [
        {
          "description": "callback function when menu-item is clicked, the param is menu-item instance",
          "name": "click",
          "params": [],
        },
      ],
      "exportName": "ElMenuItem",
      "methods": [],
      "name": "ElMenuItem",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize title content",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "group title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElMenuItemGroup",
      "methods": [],
      "name": "ElMenuItemGroup",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize group title",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "icon component of page header",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "main title of page header, default is Back that built-in a11y",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "content of page header",
          "name": "content",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "If path of the page is simple, it is recommended to use PageHeader instead of the Breadcrumb.",
      "events": [
        {
          "description": "triggers when right side is clicked",
          "name": "back",
          "params": [],
        },
      ],
      "exportName": "ElPageHeader",
      "methods": [],
      "name": "ElPageHeader",
      "slots": [
        {
          "description": "content as icon",
          "name": "icon",
          "params": [],
        },
        {
          "description": "content as title",
          "name": "title",
          "params": [],
        },
        {
          "description": "content",
          "name": "content",
          "params": [],
        },
        {
          "description": "extra",
          "name": "extra",
          "params": [],
        },
        {
          "description": "content as breadcrumb",
          "name": "breadcrumb",
          "params": [],
        },
        {
          "description": "main content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": ""default"",
          "description": "pagination size",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the buttons have a background color",
          "name": "background",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "item count of each page",
          "name": "pageSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "default initial value of page size, not setting is the same as setting 10",
          "name": "defaultPageSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "total item count",
          "name": "total",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "total page count. Set either \`total\` or \`page-count\` and pages will be displayed; if you need \`page-sizes\`, \`total\` is required",
          "name": "pageCount",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "7",
          "description": "number of pagers. Pagination collapses when the total page count exceeds this value",
          "name": "pagerCount",
          "options": [
            {
              "label": "5",
              "value": "5",
            },
            {
              "label": "7",
              "value": "7",
            },
            {
              "label": "9",
              "value": "9",
            },
            {
              "label": "11",
              "value": "11",
            },
            {
              "label": "13",
              "value": "13",
            },
            {
              "label": "15",
              "value": "15",
            },
            {
              "label": "17",
              "value": "17",
            },
            {
              "label": "19",
              "value": "19",
            },
            {
              "label": "21",
              "value": "21",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              "5",
              "7",
              "9",
              "11",
              "13",
              "15",
              "17",
              "19",
              "21",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "current page number",
          "name": "currentPage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "default initial value of current-page, not setting is the same as setting 1",
          "name": "defaultCurrentPage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "layout of Pagination, elements separated with a comma",
          "name": "layout",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "[10,20,30,40,50,100]",
          "description": "options of item count per page",
          "name": "pageSizes",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "number",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "which element the size dropdown appends to",
          "name": "appendSizeTo",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "custom class name for the page size Select's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "text for the prev button",
          "name": "prevText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon for the prev button, has a lower priority than \`prev-text\`",
          "name": "prevIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "text for the next button",
          "name": "nextText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon for the next button, has a lower priority than \`next-text\`",
          "name": "nextIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Pagination is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether Pagination select dropdown is teleported to the body",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to hide when there's only one page",
          "name": "hideOnSinglePage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to use small pagination",
          "name": "small",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "If you have too much data to display in one page, use pagination.",
      "events": [
        {
          "description": "triggers when \`page-size\` changes",
          "name": "sizeChange",
          "params": [],
        },
        {
          "description": "triggers when \`current-page\` changes",
          "name": "currentChange",
          "params": [],
        },
        {
          "description": "triggers when \`current-page\` or \`page-size\` changes",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when the prev button is clicked and current page changes",
          "name": "prevClick",
          "params": [],
        },
        {
          "description": "triggers when the next button is clicked and current page changes",
          "name": "nextClick",
          "params": [],
        },
      ],
      "exportName": "ElPagination",
      "methods": [],
      "name": "ElPagination",
      "slots": [
        {
          "description": "custom content. To use this, you need to declare \`slot\` in \`layout\`",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Confirm button text",
          "name": "confirmButtonText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Cancel button text",
          "name": "cancelButtonText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Confirm button type",
          "name": "confirmButtonType",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
              ""text"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Cancel button type",
          "name": "cancelButtonType",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
              ""text"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Icon Component",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Icon color",
          "name": "iconColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "is hide Icon",
          "name": "hideIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "200",
          "description": "delay of disappear, in millisecond",
          "name": "hideAfter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether popconfirm is teleported to the body",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "when popconfirm inactive and \`persistent\` is \`false\` , popconfirm will be destroyed",
          "name": "persistent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "150",
          "description": "popconfirm width, min width 150px",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "A simple confirmation dialog of an element click action.",
      "events": [
        {
          "description": "triggers when click confirm button",
          "name": "confirm",
          "params": [],
        },
        {
          "description": "triggers when click cancel button",
          "name": "cancel",
          "params": [],
        },
      ],
      "exportName": "ElPopconfirm",
      "methods": [],
      "name": "ElPopconfirm",
      "slots": [
        {
          "description": "HTML element that triggers Popconfirm",
          "name": "reference",
          "params": [],
        },
        {
          "description": "content of the Popconfirm footer",
          "name": "actions",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "how the popover is triggered",
          "name": "trigger",
          "options": [
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "focus",
              "value": ""focus"",
            },
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "contextmenu",
              "value": ""contextmenu"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""click"",
              ""focus"",
              ""hover"",
              ""contextmenu"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "popover title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tooltip theme, built-in theme: \`dark\` / \`light\`",
          "name": "effect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "union",
                "value": [
                  ""dark"",
                  ""light"",
                ],
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "popover content, can be replaced with a default \`slot\`",
          "name": "content",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "150",
          "description": "popover width",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "popover placement",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top-start",
              "value": ""top-start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "left-start",
              "value": ""left-start"",
            },
            {
              "label": "left-end",
              "value": ""left-end"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "right-start",
              "value": ""right-start"",
            },
            {
              "label": "right-end",
              "value": ""right-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top-start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
              ""left"",
              ""left-start"",
              ""left-end"",
              ""right"",
              ""right-start"",
              ""right-end"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Popover is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "null",
          "description": "whether popover is visible",
          "name": "visible",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "popover offset, \`Popover\` is built with \`Tooltip\`, offset of \`Popover\` is \`undefined\`, but offset of \`Tooltip\` is 12",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "popover transition animation, the default is el-fade-in-linear",
          "name": "transition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether a tooltip arrow is displayed or not. For more info, please refer to [ElPopper](https://github.com/element-plus/element-plus/tree/dev/packages/components/popper)",
          "name": "showArrow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{"modifiers":[{"name":"computeStyles","options":{"gpuAcceleration":false}}]}",
          "description": "parameters for [popper.js](https://popper.js.org/docs/v2/)",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for popover",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom style for popover",
          "name": "popperStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "0",
          "description": "delay of appearance, in millisecond",
          "name": "showAfter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "200",
          "description": "delay of disappear, in millisecond",
          "name": "hideAfter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "timeout in milliseconds to hide tooltip",
          "name": "autoClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "[tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of Popover",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether popover dropdown is teleported to the body",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "when popover inactive and \`persistent\` is \`false\` , popover will be destroyed",
          "name": "persistent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "triggers when popover shows",
          "name": "show",
          "params": [],
        },
        {
          "description": "triggers when the entering transition before",
          "name": "beforeEnter",
          "params": [],
        },
        {
          "description": "triggers when the entering transition ends",
          "name": "afterEnter",
          "params": [],
        },
        {
          "description": "triggers when popover hides",
          "name": "hide",
          "params": [],
        },
        {
          "description": "triggers when the leaving transition before",
          "name": "beforeLeave",
          "params": [],
        },
        {
          "description": "triggers when the leaving transition ends",
          "name": "afterLeave",
          "params": [],
        },
      ],
      "exportName": "ElPopover",
      "methods": [],
      "name": "ElPopover",
      "slots": [
        {
          "description": "text content of popover",
          "name": "default",
          "params": [],
        },
        {
          "description": "HTML element that triggers popover",
          "name": "reference",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "0",
          "description": "percentage",
          "name": "percentage",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the type of progress bar",
          "name": "type",
          "options": [
            {
              "label": "line",
              "value": ""line"",
            },
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "dashboard",
              "value": ""dashboard"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""line"",
              ""circle"",
              ""dashboard"",
            ],
          },
        },
        {
          "defaultValue": "6",
          "description": "the width of progress bar",
          "name": "strokeWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to place the percentage inside progress bar, only works when \`type\` is 'line'",
          "name": "textInside",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the current status of progress bar",
          "name": "status",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "exception",
              "value": ""exception"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""exception"",
              ""warning"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "set indeterminate progress",
          "name": "indeterminate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "3",
          "description": "control the animation duration of indeterminate progress or striped flow progress",
          "name": "duration",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": """",
          "description": "background color of progress bar. Overrides \`status\` prop",
          "name": "color",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "params": [
                  {
                    "name": "percentage",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
                "returnType": {
                  "type": "string",
                },
                "type": "function",
              },
              {
                "type": "array",
                "value": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "color",
                      "type": {
                        "type": "string",
                      },
                    },
                    {
                      "name": "percentage",
                      "type": {
                        "type": "number",
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
        {
          "defaultValue": "126",
          "description": "the canvas width of circle progress bar",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to show percentage",
          "name": "showText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "circle/dashboard type shape at the end path",
          "name": "strokeLinecap",
          "options": [
            {
              "label": "butt",
              "value": ""butt"",
            },
            {
              "label": "round",
              "value": ""round"",
            },
            {
              "label": "square",
              "value": ""square"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""butt"",
              ""round"",
              ""square"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom text format",
          "name": "format",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "percentage",
                "type": {
                  "type": "number",
                },
              },
            ],
            "returnType": {
              "type": "string",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "stripe over the progress bar's color",
          "name": "striped",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "get the stripes to flow",
          "name": "stripedFlow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Progress is used to show the progress of current operation, and inform the user the current status.",
      "events": [],
      "exportName": "ElProgress",
      "methods": [],
      "name": "ElProgress",
      "slots": [
        {
          "description": "Customized content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "the value of Radio",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "the label of Radio. If there's no \`value\`, \`label\` will act as \`value\`",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Radio is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to add a border around Radio",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of the Radio",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`name\` attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Single selection among multiple options.",
      "events": [
        {
          "description": "triggers when the bound value changes",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElRadio",
      "methods": [],
      "name": "ElRadio",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "the size of radio buttons or bordered radios",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the nesting radios are disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "font color when button is active",
          "name": "textColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "border and background color when button is active",
          "name": "fill",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in RadioGroup",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`name\` attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`id\` attribute",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in RadioGroup",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [
        {
          "description": "triggers when the bound value changes",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElRadioGroup",
      "methods": [],
      "name": "ElRadioGroup",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "the value of Radio",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "the label of Radio. If there's no \`value\`, \`label\` will act as \`value\`",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Radio is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native 'name' attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElRadioButton",
      "methods": [],
      "name": "ElRadioButton",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "0",
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "5",
          "description": "max rating score",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of Rate",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Rate is read-only",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether picking half start is allowed",
          "name": "allowHalf",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "2",
          "description": "threshold value between low and medium level. The value itself will be included in low level",
          "name": "lowThreshold",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "4",
          "description": "threshold value between medium and high level. The value itself will be included in high level",
          "name": "highThreshold",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "["#f7ba2a","#f7ba2a","#f7ba2a"]",
          "description": "colors for icons. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding color",
          "name": "colors",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "color of unselected icons",
          "name": "voidColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "color of unselected read-only icons",
          "name": "disabledVoidColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon components. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding icon component",
          "name": "icons",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "component of unselected icons",
          "name": "voidIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "component of unselected read-only icons",
          "name": "disabledVoidIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to display texts",
          "name": "showText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to display current score. show-score and show-text cannot be true at the same time",
          "name": "showScore",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "color of texts",
          "name": "textColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "["Extremely bad","Disappointed","Fair","Satisfied","Surprise"]",
          "description": "text array",
          "name": "texts",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "score template",
          "name": "scoreTemplate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether value can be reset to \`0\`",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`id\` attribute",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in Rate",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in Rate",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Used for rating",
      "events": [
        {
          "description": "Triggers when rate value is changed",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElRate",
      "methods": [],
      "name": "ElRate",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "title of result",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "sub title of result",
          "name": "subTitle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon type of result",
          "name": "icon",
          "options": [
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""success"",
              ""warning"",
              ""info"",
              ""error"",
            ],
          },
        },
      ],
      "description": "Used to give feedback on the result of user's operation or access exception.",
      "events": [],
      "exportName": "ElResult",
      "methods": [],
      "name": "ElResult",
      "slots": [
        {
          "description": "content as result icon",
          "name": "icon",
          "params": [],
        },
        {
          "description": "content as result title",
          "name": "title",
          "params": [],
        },
        {
          "description": "content as result sub title",
          "name": "subTitle",
          "params": [],
        },
        {
          "description": "content as result extra area",
          "name": "extra",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "height of scrollbar",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "max height of scrollbar",
          "name": "maxHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to use the native scrollbar style",
          "name": "native",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "style of wrap container",
          "name": "wrapStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "class of wrap container",
          "name": "wrapClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "style of view",
          "name": "viewStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "class of view",
          "name": "viewClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "do not respond to container size changes, if the container size does not change, it is better to set it to optimize performance",
          "name": "noresize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "element tag of the view",
          "name": "tag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "always show scrollbar",
          "name": "always",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "20",
          "description": "minimum size of scrollbar",
          "name": "minSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "id of view",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "role of view",
          "name": "role",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "aria-label of view",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "aria-orientation of view",
          "name": "ariaOrientation",
          "options": [
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "tabindex of wrap container",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
      ],
      "description": "Used to replace the browser's native scrollbar.",
      "events": [
        {
          "description": "triggers when scrolling, return distance of scrolling",
          "name": "scroll",
          "params": [],
        },
      ],
      "exportName": "ElScrollbar",
      "methods": [],
      "name": "ElScrollbar",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": "[]",
          "description": "data of the options",
          "name": "options",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": """",
          "description": "size of component",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "fit width of parent content",
          "name": "block",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether segmented is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`name\` attribute",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`id\` attribute",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`aria-label\` attribute",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "display direction",
          "name": "direction",
          "options": [
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
            {
              "label": "vertical",
              "value": ""vertical"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""horizontal"",
              ""vertical"",
            ],
          },
        },
      ],
      "description": "Display multiple options and allow users to select a single option.",
      "events": [
        {
          "description": "triggers when the selected value changes, the param is current selected value",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElSegmented",
      "methods": [],
      "name": "ElSegmented",
      "slots": [
        {
          "description": "option renderer",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "data of the options, the key of \`value\` and \`label\` can be customize by \`props\`",
          "name": "options",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "configuration options, see the following table",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "is multiple",
          "name": "multiple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "unique identity key name for value, required when value is an object",
          "name": "valueKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "size of component",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether select can be cleared",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom clear icon",
          "name": "clearIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to collapse tags to a text when multiple selecting",
          "name": "collapseTags",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "0",
          "description": "maximum number of options user can select when multiple is true. No limit when set to 0",
          "name": "multipleLimit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the name attribute of select input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "tooltip theme, built-in theme: \`dark\` / \`light\`",
          "name": "effect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "union",
                "value": [
                  ""dark"",
                  ""light"",
                ],
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "autocomplete of select input",
          "name": "autocomplete",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "is filterable",
          "name": "filterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether creating new items is allowed. To use this, \`filterable\` must be true",
          "name": "allowCreate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom filter method",
          "name": "filterMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Select is loading data from server",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "displayed text while loading data from server, default is 'Loading'",
          "name": "loadingText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether reserve the keyword after select filtered option.",
          "name": "reserveKeyword",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "displayed text when no data matches the filtering query, you can also use slot \`empty\`, default is 'No matching data'",
          "name": "noMatchText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "displayed text when there is no options, you can also use slot empty",
          "name": "noDataText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "custom class name for Select's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether select dropdown is teleported, if \`true\` it will be teleported to where \`append-to\` sets",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "which element the select dropdown appends to",
          "name": "appendTo",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "when select dropdown is inactive and \`persistent\` is \`false\`, select dropdown will be destroyed",
          "name": "persistent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "[popper.js](https://popper.js.org/docs/v2/) parameters",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "for non-filterable Select, this prop decides if the option menu pops up when the input is focused",
          "name": "automaticDropdown",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the width of the dropdown is the same as the input, if the value is \`number\`, then the width is fixed",
          "name": "fitInputWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "274",
          "description": "The height of the dropdown panel, 34px for each item",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "34",
          "description": "The height of the dropdown item",
          "name": "itemHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "Controls whether the scrollbar is always displayed",
          "name": "scrollbarAlwaysOn",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether search data from server",
          "name": "remote",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that gets called when the input value changes. Its parameter is the current input value. To use this, \`filterable\` must be true",
          "name": "remoteMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "keyword",
                "type": {
                  "type": "string",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "12",
          "description": "offset of the dropdown",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the dropdown has an arrow",
          "name": "showArrow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of dropdown",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top-start",
              "value": ""top-start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "left-start",
              "value": ""left-start"",
            },
            {
              "label": "left-end",
              "value": ""left-end"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "right-start",
              "value": ""right-start"",
            },
            {
              "label": "right-end",
              "value": ""right-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top-start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
              ""left"",
              ""left-start"",
              ""left-end"",
              ""right"",
              ""right-start"",
              ""right-end"",
            ],
          },
        },
        {
          "defaultValue": "["bottom-start","top-start","right","left"]",
          "description": "list of possible positions for dropdown [popper.js](https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements)",
          "name": "fallbackPlacements",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether show all selected tags when mouse hover text of collapse-tags. To use this, \`collapse-tags\` must be true",
          "name": "collapseTagsTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "1",
          "description": "The max tags number to be shown. To use this, \`collapse-tags\` must be true",
          "name": "maxCollapseTags",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "tag type",
          "name": "tagType",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""success"",
              ""info"",
              ""warning"",
              ""danger"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "tag effect",
          "name": "tagEffect",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "dark",
              "value": ""dark"",
            },
            {
              "label": "plain",
              "value": ""plain"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""light"",
              ""dark"",
              ""plain"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "empty values of component, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "emptyValues",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "clear return value, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "valueOnClear",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "params": [],
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to append the popper menu to body. If the positioning of the popper is wrong, you can try to set this prop to false",
          "name": "popperAppendToBody",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "tabindex for input",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": ":::tip",
      "events": [
        {
          "description": "triggers when the selected value changes, the param is current selected value",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when the dropdown appears/disappears, the param will be true when it appears, and false otherwise",
          "name": "visibleChange",
          "params": [],
        },
        {
          "description": "triggers when a tag is removed in multiple mode, the param is removed tag value",
          "name": "removeTag",
          "params": [],
        },
        {
          "description": "triggers when the clear icon is clicked in a clearable Select",
          "name": "clear",
          "params": [],
        },
        {
          "description": "triggers when Input blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Input focuses",
          "name": "focus",
          "params": [],
        },
      ],
      "exportName": "ElVirtualizedSelect",
      "methods": [],
      "name": "ElVirtualizedSelect",
      "slots": [
        {
          "description": "Option renderer",
          "name": "default",
          "params": [],
        },
        {
          "description": "content at the top of the dropdown",
          "name": "header",
          "params": [],
        },
        {
          "description": "content at the bottom of the dropdown",
          "name": "footer",
          "params": [],
        },
        {
          "description": "content when options is empty",
          "name": "empty",
          "params": [],
        },
        {
          "description": "prefix content of input",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "content as Select tag",
          "name": "tag",
          "params": [],
        },
        {
          "description": "content as Select loading",
          "name": "loading",
          "params": [],
        },
        {
          "description": "content as Select label",
          "name": "label",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether multiple-select is activated",
          "name": "multiple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Select is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "unique identity key name for value, required when value is an object",
          "name": "valueKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of Input",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether select can be cleared",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to collapse tags to a text when multiple selecting",
          "name": "collapseTags",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether show all selected tags when mouse hover text of collapse-tags. To use this, \`collapse-tags\` must be true",
          "name": "collapseTagsTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "0",
          "description": "maximum number of options user can select when \`multiple\` is \`true\`. No limit when set to 0",
          "name": "multipleLimit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the name attribute of select input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "tooltip theme, built-in theme: \`dark\` / \`light\`",
          "name": "effect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "union",
                "value": [
                  ""dark"",
                  ""light"",
                ],
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "the autocomplete attribute of select input",
          "name": "autocomplete",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder, default is 'Select'",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Select is filterable",
          "name": "filterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether creating new items is allowed. To use this, \`filterable\` must be true",
          "name": "allowCreate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom filter method",
          "name": "filterMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether options are loaded from server",
          "name": "remote",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom remote search method",
          "name": "remoteMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "in remote search method show suffix icon",
          "name": "remoteShowSuffix",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Select is loading data from server",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "displayed text while loading data from server, default is 'Loading'",
          "name": "loadingText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "displayed text when no data matches the filtering query, you can also use slot \`empty\`, default is 'No matching data'",
          "name": "noMatchText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "displayed text when there is no options, you can also use slot \`empty\`, default is 'No data'",
          "name": "noDataText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "custom class name for Select's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "when \`multiple\` and \`filterable\` is true, whether to reserve current keyword after selecting an option",
          "name": "reserveKeyword",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "select first matching option on enter key. Use with \`filterable\` or \`remote\`",
          "name": "defaultFirstOption",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether select dropdown is teleported, if \`true\` it will be teleported to where \`append-to\` sets",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "which element the select dropdown appends to",
          "name": "appendTo",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "when select dropdown is inactive and \`persistent\` is \`false\`, select dropdown will be destroyed",
          "name": "persistent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "for non-filterable Select, this prop decides if the option menu pops up when the input is focused",
          "name": "automaticDropdown",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom clear icon component",
          "name": "clearIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the width of the dropdown is the same as the input",
          "name": "fitInputWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom suffix icon component",
          "name": "suffixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "tag type",
          "name": "tagType",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""success"",
              ""info"",
              ""warning"",
              ""danger"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "tag effect",
          "name": "tagEffect",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "dark",
              "value": ""dark"",
            },
            {
              "label": "plain",
              "value": ""plain"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""light"",
              ""dark"",
              ""plain"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "12",
          "description": "offset of the dropdown",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the dropdown has an arrow",
          "name": "showArrow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of dropdown",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top-start",
              "value": ""top-start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "left-start",
              "value": ""left-start"",
            },
            {
              "label": "left-end",
              "value": ""left-end"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "right-start",
              "value": ""right-start"",
            },
            {
              "label": "right-end",
              "value": ""right-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top-start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
              ""left"",
              ""left-start"",
              ""left-end"",
              ""right"",
              ""right-start"",
              ""right-end"",
            ],
          },
        },
        {
          "defaultValue": "["bottom-start","top-start","right","left"]",
          "description": "list of possible positions for dropdown [popper.js](https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements)",
          "name": "fallbackPlacements",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "1",
          "description": "the max tags number to be shown. To use this, \`collapse-tags\` must be true",
          "name": "maxCollapseTags",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "{}",
          "description": "[popper.js](https://popper.js.org/docs/v2/) parameters",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "empty values of component, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "emptyValues",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "clear return value, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "valueOnClear",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "params": [],
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "animation when dropdown appears/disappears icon",
          "name": "suffixTransition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "tabindex for input",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
      ],
      "description": "When there are plenty of options, use a drop-down menu to display and select desired ones.",
      "events": [
        {
          "description": "triggers when the selected value changes",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when the dropdown appears/disappears",
          "name": "visibleChange",
          "params": [],
        },
        {
          "description": "triggers when a tag is removed in multiple mode",
          "name": "removeTag",
          "params": [],
        },
        {
          "description": "triggers when the clear icon is clicked in a clearable Select",
          "name": "clear",
          "params": [],
        },
        {
          "description": "triggers when Input blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Input focuses",
          "name": "focus",
          "params": [],
        },
      ],
      "exportName": "ElSelect",
      "methods": [],
      "name": "ElSelect",
      "slots": [
        {
          "description": "option component list",
          "name": "default",
          "params": [],
        },
        {
          "description": "content at the top of the dropdown",
          "name": "header",
          "params": [],
        },
        {
          "description": "content at the bottom of the dropdown",
          "name": "footer",
          "params": [],
        },
        {
          "description": "content as Select prefix",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "content when there is no options",
          "name": "empty",
          "params": [],
        },
        {
          "description": "content as Select tag",
          "name": "tag",
          "params": [],
        },
        {
          "description": "content as Select loading",
          "name": "loading",
          "params": [],
        },
        {
          "description": "content as Select label",
          "name": "label",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "name of the group",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to disable all options in this group",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElOptionGroup",
      "methods": [],
      "name": "ElOptionGroup",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "value of option",
          "name": "value",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "label of option, same as \`value\` if omitted",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether option is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElOption",
      "methods": [],
      "name": "ElOption",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "false",
          "description": "whether showing the animation",
          "name": "animated",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "1",
          "description": "how many fake items to render to the DOM",
          "name": "count",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether showing the real DOM",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "3",
          "description": "numbers of the row, only useful when no template slot were given",
          "name": "rows",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "rendering delay in milliseconds. Numbers represent delayed display, and can also be set to delay hide, for example \`{ leading: 500, trailing: 500 }\`. When needing to control the initial value of loading, you can set \`{ initVal: true }\`",
          "name": "throttle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "struct",
                "value": [
                  {
                    "name": "leading",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "trailing",
                    "type": {
                      "type": "number",
                    },
                  },
                  {
                    "name": "initVal",
                    "type": {
                      "type": "boolean",
                    },
                  },
                ],
              },
            ],
          },
        },
      ],
      "description": "When loading data, and you need a rich experience for visual and interactions for your end users, you can choose \`skeleton\`.",
      "events": [],
      "exportName": "ElSkeleton",
      "methods": [],
      "name": "ElSkeleton",
      "slots": [
        {
          "description": "real rendering DOM",
          "name": "default",
          "params": [],
        },
        {
          "description": "content as rendering skeleton template",
          "name": "template",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "the current rendering skeleton type",
          "name": "variant",
          "options": [
            {
              "label": "p",
              "value": ""p"",
            },
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "h1",
              "value": ""h1"",
            },
            {
              "label": "h3",
              "value": ""h3"",
            },
            {
              "label": "caption",
              "value": ""caption"",
            },
            {
              "label": "button",
              "value": ""button"",
            },
            {
              "label": "image",
              "value": ""image"",
            },
            {
              "label": "circle",
              "value": ""circle"",
            },
            {
              "label": "rect",
              "value": ""rect"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""p"",
              ""text"",
              ""h1"",
              ""h3"",
              ""caption"",
              ""button"",
              ""image"",
              ""circle"",
              ""rect"",
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElSkeletonItem",
      "methods": [],
      "name": "ElSkeletonItem",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "0",
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "array",
                "value": {
                  "type": "number",
                },
              },
            ],
          },
        },
        {
          "defaultValue": "0",
          "description": "minimum value",
          "name": "min",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "100",
          "description": "maximum value",
          "name": "max",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Slider is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "1",
          "description": "step size",
          "name": "step",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to display an input box, works when \`range\` is false",
          "name": "showInput",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to display control buttons when \`show-input\` is true",
          "name": "showInputControls",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of the slider wrapper, will not work in vertical mode",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of the input box, when set \`size\`, the default is the value of \`size\`",
          "name": "inputSize",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to display breakpoints",
          "name": "showStops",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to display tooltip value",
          "name": "showTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "format to display tooltip value",
          "name": "formatTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "value",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
                "returnType": {
                  "type": "number",
                },
                "type": "function",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to select a range",
          "name": "range",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "vertical mode",
          "name": "vertical",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "slider height, required in vertical mode",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`aria-label\` attribute",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "when \`range\` is true, screen reader label for the start of the range",
          "name": "rangeStartLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "when \`range\` is true, screen reader label for the end of the range",
          "name": "rangeEndLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "format to display the \`aria-valuenow\` attribute for screen readers",
          "name": "formatValueText",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "value",
                "type": {
                  "type": "number",
                },
              },
            ],
            "returnType": {
              "type": "string",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "300",
          "description": "debounce delay when typing, in milliseconds, works when \`show-input\` is true",
          "name": "debounce",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for the tooltip",
          "name": "tooltipClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of Tooltip",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top-start",
              "value": ""top-start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "left-start",
              "value": ""left-start"",
            },
            {
              "label": "left-end",
              "value": ""left-end"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "right-start",
              "value": ""right-start"",
            },
            {
              "label": "right-end",
              "value": ""right-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top-start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
              ""left"",
              ""left-start"",
              ""left-end"",
              ""right"",
              ""right-start"",
              ""right-end"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "marks, type of key must be \`number\` and must in closed interval \`[min, max]\`, each mark can custom style",
          "name": "marks",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native \`aria-label\` attribute",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Drag the slider within a fixed range.",
      "events": [
        {
          "description": "triggers when the value changes (if the mouse is being dragged, this event only fires when the mouse is released)",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when the data changes (It'll be emitted in real time during sliding)",
          "name": "input",
          "params": [],
        },
      ],
      "exportName": "ElSlider",
      "methods": [],
      "name": "ElSlider",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "Controls the alignment of items",
          "name": "alignment",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "className",
          "name": "class",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Placement direction",
          "name": "direction",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Prefix for space-items",
          "name": "prefixCls",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Extra style rules",
          "name": "style",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Spacer",
          "name": "spacer",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Spacing size",
          "name": "size",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "union",
                "value": [
                  ""default"",
                  ""small"",
                  ""large"",
                ],
              },
              {
                "type": "number",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "Auto wrapping",
          "name": "wrap",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "Whether to fill the container",
          "name": "fill",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "100",
          "description": "Ratio of fill",
          "name": "fillRatio",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Even though we have [Divider]",
      "events": [],
      "exportName": "ElSpace",
      "methods": [],
      "name": "ElSpace",
      "slots": [],
    },
    {
      "attrs": [],
      "description": "Display statistics.",
      "events": [],
      "exportName": "ElStatistic",
      "methods": [],
      "name": "ElStatistic",
      "slots": [
        {
          "description": "Numeric prefix",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "Suffixes for numeric values",
          "name": "suffix",
          "params": [],
        },
        {
          "description": "Numeric titles",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [],
      "description": ":::demo Countdown component, support to add other components control countdown.",
      "events": [],
      "exportName": "ElCountdown",
      "methods": [],
      "name": "ElCountdown",
      "slots": [
        {
          "description": "countdown value prefix",
          "name": "prefix",
          "params": [],
        },
        {
          "description": "countdown value suffix",
          "name": "suffix",
          "params": [],
        },
        {
          "description": "countdown title",
          "name": "title",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "the spacing of each step, will be responsive if omitted. Supports percentage.",
          "name": "space",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "display direction",
          "name": "direction",
          "options": [
            {
              "label": "vertical",
              "value": ""vertical"",
            },
            {
              "label": "horizontal",
              "value": ""horizontal"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""vertical"",
              ""horizontal"",
            ],
          },
        },
        {
          "defaultValue": "0",
          "description": "current activation step",
          "name": "active",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "status of current step",
          "name": "processStatus",
          "options": [
            {
              "label": "wait",
              "value": ""wait"",
            },
            {
              "label": "process",
              "value": ""process"",
            },
            {
              "label": "finish",
              "value": ""finish"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""wait"",
              ""process"",
              ""finish"",
              ""error"",
              ""success"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "status of end step",
          "name": "finishStatus",
          "options": [
            {
              "label": "wait",
              "value": ""wait"",
            },
            {
              "label": "process",
              "value": ""process"",
            },
            {
              "label": "finish",
              "value": ""finish"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""wait"",
              ""process"",
              ""finish"",
              ""error"",
              ""success"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "center title and description",
          "name": "alignCenter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether to apply simple theme",
          "name": "simple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Guide the user to complete tasks in accordance with the process. Its steps can be set according to the actual application scenario and the number of the steps can't be less than 2.",
      "events": [],
      "exportName": "ElSteps",
      "methods": [],
      "name": "ElSteps",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "step title",
          "name": "title",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "step description",
          "name": "description",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "step custom icon. Icons can be passed via named slot as well",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "current status. It will be automatically set by Steps if not configured.",
          "name": "status",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "wait",
              "value": ""wait"",
            },
            {
              "label": "process",
              "value": ""process"",
            },
            {
              "label": "finish",
              "value": ""finish"",
            },
            {
              "label": "error",
              "value": ""error"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""wait"",
              ""process"",
              ""finish"",
              ""error"",
              ""success"",
            ],
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElStep",
      "methods": [],
      "name": "ElStep",
      "slots": [
        {
          "description": "custom icon",
          "name": "icon",
          "params": [],
        },
        {
          "description": "step title",
          "name": "title",
          "params": [],
        },
        {
          "description": "step description",
          "name": "description",
          "params": [],
        },
      ],
    },
    {
      "attrs": [],
      "description": "Switch is used for switching between two opposing states.",
      "events": [],
      "exportName": "ElSwitch",
      "methods": [],
      "name": "ElSwitch",
      "slots": [
        {
          "description": "customize active action",
          "name": "activeAction",
          "params": [],
        },
        {
          "description": "customize inactive action",
          "name": "inactiveAction",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "false",
          "description": "binding value, it should be equivalent to either \`active-value\` or \`inactive-value\`, by default it's \`boolean\` type",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Switch is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Switch is in loading state",
          "name": "loading",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "size of Switch",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "width of Switch",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether icon or text is displayed inside dot, only the first character will be rendered for text",
          "name": "inlinePrompt",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "component of the icon displayed when in \`on\` state, overrides \`active-text\`",
          "name": "activeIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "component of the icon displayed when in \`off\` state, overrides \`inactive-text\`",
          "name": "inactiveIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "component of the icon displayed in action when in \`on\` state",
          "name": "activeActionIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "component of the icon displayed in action when in \`off\` state",
          "name": "inactiveActionIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "text displayed when in \`on\` state",
          "name": "activeText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "text displayed when in \`off\` state",
          "name": "inactiveText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "switch value when in \`on\` state",
          "name": "activeValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "switch value when in \`off\` state",
          "name": "inactiveValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "input name of Switch",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "before-change hook before the switch state changes. If \`false\` is returned or a \`Promise\` is returned and then is rejected, will stop switching",
          "name": "beforeChange",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "params": [],
                "returnType": {
                  "type": "boolean",
                },
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "id for input",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "tabindex for input",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "background color when in \`on\` state ( use CSS var \`--el-switch-on-color\` instead )",
          "name": "activeColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "background color when in \`off\` state ( use CSS var \`--el-switch-off-color\` instead )",
          "name": "inactiveColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "border color of the switch ( use CSS var \`--el-switch-border-color\` instead )",
          "name": "borderColor",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Switch is used for switching between two opposing states.",
      "events": [
        {
          "description": "triggers when value changes",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElSwitch",
      "methods": [],
      "name": "ElSwitch",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "2",
          "description": "Number of rows rendered in advance to boost the performance",
          "name": "cache",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The estimated row height for rendering dynamic height rows",
          "name": "estimatedRowHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Customized class name passed to header wrapper",
          "name": "headerClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Customized props name passed to header component",
          "name": "headerProps",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Customized props name passed to header cell component",
          "name": "headerCellProps",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "50",
          "description": "The height of the header is set by \`height\`. If given an array, it renders header rows equal to its length",
          "name": "headerHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "0",
          "description": "The height of the footer element, when provided, will be part to the calculation of the table's height.",
          "name": "footerHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Customized class name passed to row wrapper",
          "name": "rowClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The key of each row, if not provided, will be the index of the row",
          "name": "rowKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Customized props name passed to row component",
          "name": "rowProps",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "50",
          "description": "The height of each row, used for calculating the total height of the table",
          "name": "rowHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "extra props passed to each cell (except header cells)",
          "name": "cellProps",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "An array of column definitions.",
          "name": "columns",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "[]",
          "description": "An array of data to be rendered in the table.",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "A method to customize data fetch from the data source.",
          "name": "dataGetter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Data for rendering rows above the main content and below the header",
          "name": "fixedData",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The column key indicates which row is expandable",
          "name": "expandColumnKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "An array of keys for expanded rows, can be used with \`v-model\`",
          "name": "expandedRowKeys",
          "options": [],
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "An array of keys for default expanded rows, **NON REACTIVE**",
          "name": "defaultExpandedRowKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Class name for the virtual table, will be applied to all three tables (left, right, main)",
          "name": "class",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "Flag indicates the table column's width to be fixed or flexible.",
          "name": "fixed",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Width of the table",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Height of the table",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Maximum height of the table",
          "name": "maxHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "6",
          "description": "Indicates the horizontal scrollbar's size for the table, used to prevent the horizontal and vertical scrollbar to collapse",
          "name": "hScrollbarSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "6",
          "description": "Indicates the vertical scrollbar's size for the table, used to prevent the horizontal and vertical scrollbar to collapse",
          "name": "vScrollbarSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "If true, the scrollbar will always be shown instead of when mouse is placed above the table",
          "name": "scrollbarAlwaysOn",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "Sort indicator",
          "name": "sortBy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Multiple sort indicator",
          "name": "sortState",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": undefined,
      "events": [
        {
          "description": "Invoked when column sorted",
          "name": "columnSort",
          "params": [],
        },
        {
          "description": "Invoked when expanded rows changed",
          "name": "expandedRowsChange",
          "params": [],
        },
        {
          "description": "Invoked when the end of the table is reached",
          "name": "endReached",
          "params": [],
        },
        {
          "description": "Invoked after scrolling",
          "name": "scroll",
          "params": [],
        },
        {
          "description": "Invoked when rows are rendered",
          "name": "rowsRendered",
          "params": [],
        },
        {
          "description": "Invoked when expand/collapse the tree node by clicking the arrow icon",
          "name": "rowExpand",
          "params": [],
        },
        {
          "description": "A collection of handlers attached to each row",
          "name": "rowEventHandlers",
          "params": [],
        },
      ],
      "exportName": "ElTableV2",
      "methods": [],
      "name": "ElTableV2",
      "slots": [
        {
          "description": undefined,
          "name": "cell",
          "params": [],
        },
        {
          "description": undefined,
          "name": "header",
          "params": [],
        },
        {
          "description": undefined,
          "name": "headerCell",
          "params": [],
        },
        {
          "description": undefined,
          "name": "row",
          "params": [],
        },
        {
          "description": undefined,
          "name": "footer",
          "params": [],
        },
        {
          "description": undefined,
          "name": "empty",
          "params": [],
        },
        {
          "description": undefined,
          "name": "overlay",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "[]",
          "description": "table data",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "table's height. By default it has an \`auto\` height. If its value is a number, the height is measured in pixels; if its value is a string, the value will be assigned to element's style.height, the height is affected by external styles",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "table's max-height. The legal value is a number or the height in px",
          "name": "maxHeight",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Table is striped",
          "name": "stripe",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Table has vertical border",
          "name": "border",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of Table",
          "name": "size",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether width of column automatically fits its container",
          "name": "fit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether Table header is visible",
          "name": "showHeader",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether current row is highlighted",
          "name": "highlightCurrentRow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "key of current row, a set only prop",
          "name": "currentRowKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that returns custom class names for a row, or a string assigning class names for every row",
          "name": "rowClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "string",
                },
                "type": "function",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that returns custom style for a row, or an object assigning custom style for every row",
          "name": "rowStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "any",
                },
                "type": "function",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that returns custom class names for a cell, or a string assigning class names for every cell",
          "name": "cellClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "column",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                        {
                          "name": "columnIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "string",
                },
                "type": "function",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that returns custom style for a cell, or an object assigning custom style for every cell",
          "name": "cellStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "column",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                        {
                          "name": "columnIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "any",
                },
                "type": "function",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that returns custom class names for a row in table header, or a string assigning class names for every row in table header",
          "name": "headerRowClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "string",
                },
                "type": "function",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that returns custom style for a row in table header, or an object assigning custom style for every row in table header",
          "name": "headerRowStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "any",
                },
                "type": "function",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that returns custom class names for a cell in table header, or a string assigning class names for every cell in table header",
          "name": "headerCellClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "column",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                        {
                          "name": "columnIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "string",
                },
                "type": "function",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that returns custom style for a cell in table header, or an object assigning custom style for every cell in table header",
          "name": "headerCellStyle",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "column",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                        {
                          "name": "columnIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "any",
                },
                "type": "function",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "key of row data, used for optimizing rendering. Required if \`reserve-selection\` is on or display tree data. When its type is String, multi-level access is supported, e.g. \`user.info.id\`, but \`user.info[0].id\` is not supported, in which case \`Function\` should be used",
          "name": "rowKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "row",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
                "returnType": {
                  "type": "string",
                },
                "type": "function",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "displayed text when data is empty. You can customize this area with \`#empty\`",
          "name": "emptyText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether expand all rows by default, works when the table has a column type="expand" or contains tree structure data",
          "name": "defaultExpandAll",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "set expanded rows by this prop, prop's value is the keys of expand rows, you should set row-key before using this prop",
          "name": "expandRowKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
        {
          "defaultValue": undefined,
          "description": "set the default sort column and order. property \`prop\` is used to set default sort column, property \`order\` is used to set default sort order",
          "name": "defaultSort",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "the \`effect\` of the overflow tooltip",
          "name": "tooltipEffect",
          "options": [
            {
              "label": "dark",
              "value": ""dark"",
            },
            {
              "label": "light",
              "value": ""light"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""dark"",
              ""light"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "the options for the overflow tooltip, [see the following tooltip component](tooltip.html#attributes)",
          "name": "tooltipOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "which element the filter panels appends to",
          "name": "appendFilterPanelTo",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to display a summary row",
          "name": "showSummary",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "displayed text for the first column of summary row",
          "name": "sumText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom summary method",
          "name": "summaryMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "method that returns rowspan and colspan",
          "name": "spanMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "data",
                    "type": {
                      "type": "struct",
                      "value": [
                        {
                          "name": "row",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "column",
                          "type": {
                            "type": "any",
                          },
                        },
                        {
                          "name": "rowIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                        {
                          "name": "columnIndex",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  },
                ],
                "returnType": {
                  "type": "union",
                  "value": [
                    {
                      "type": "array",
                      "value": {
                        "type": "number",
                      },
                    },
                    {
                      "type": "struct",
                      "value": [
                        {
                          "name": "rowspan",
                          "type": {
                            "type": "number",
                          },
                        },
                        {
                          "name": "colspan",
                          "type": {
                            "type": "number",
                          },
                        },
                      ],
                    },
                  ],
                },
                "type": "function",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "controls the behavior of master checkbox in multi-select tables when only some rows are selected (but not all). If true, all rows will be selected, else deselected",
          "name": "selectOnIndeterminate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "16",
          "description": "horizontal indentation of tree data",
          "name": "indent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to lazy loading data",
          "name": "lazy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "method for loading child row data, only works when \`lazy\` is true",
          "name": "load",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "row",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "treeNode",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "resolve",
                "type": {
                  "params": [
                    {
                      "name": "data",
                      "type": {
                        "type": "array",
                        "value": {
                          "type": "any",
                        },
                      },
                    },
                  ],
                  "returnType": {
                    "type": "any",
                  },
                  "type": "function",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "configuration for rendering nested data",
          "name": "treeProps",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "struct",
            "value": [
              {
                "name": "hasChildren",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "children",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "checkStrictly",
                "type": {
                  "type": "boolean",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "sets the algorithm used to lay out table cells, rows, and columns",
          "name": "tableLayout",
          "options": [
            {
              "label": "fixed",
              "value": ""fixed"",
            },
            {
              "label": "auto",
              "value": ""auto"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""fixed"",
              ""auto"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "always show scrollbar",
          "name": "scrollbarAlwaysOn",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether to hide extra content and show them in a tooltip when hovering on the cell.It will affect all the table columns, refer to table [tooltip-options](#table-attributes)",
          "name": "showOverflowTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "ensure main axis minimum-size doesn't follow the content",
          "name": "flexible",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "body scrollbar's wrap container tabindex",
          "name": "scrollbarTabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to allow drag the last column",
          "name": "allowDragLastColumn",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Display multiple data with similar format. You can sort, filter, compare your data in a table.",
      "events": [
        {
          "description": "triggers when user clicks the checkbox in a row",
          "name": "select",
          "params": [],
        },
        {
          "description": "triggers when user clicks the checkbox in table header",
          "name": "selectAll",
          "params": [],
        },
        {
          "description": "triggers when selection changes",
          "name": "selectionChange",
          "params": [],
        },
        {
          "description": "triggers when hovering into a cell",
          "name": "cellMouseEnter",
          "params": [],
        },
        {
          "description": "triggers when hovering out of a cell",
          "name": "cellMouseLeave",
          "params": [],
        },
        {
          "description": "triggers when clicking a cell",
          "name": "cellClick",
          "params": [],
        },
        {
          "description": "triggers when double clicking a cell",
          "name": "cellDblclick",
          "params": [],
        },
        {
          "description": "triggers when user right clicks on a cell",
          "name": "cellContextmenu",
          "params": [],
        },
        {
          "description": "triggers when clicking a row",
          "name": "rowClick",
          "params": [],
        },
        {
          "description": "triggers when user right clicks on a row",
          "name": "rowContextmenu",
          "params": [],
        },
        {
          "description": "triggers when double clicking a row",
          "name": "rowDblclick",
          "params": [],
        },
        {
          "description": "triggers when clicking a column header",
          "name": "headerClick",
          "params": [],
        },
        {
          "description": "triggers when user right clicks on a column header",
          "name": "headerContextmenu",
          "params": [],
        },
        {
          "description": "triggers when Table's sorting changes",
          "name": "sortChange",
          "params": [],
        },
        {
          "description": "column's key. If you need to use the filter-change event, this attribute is mandatory to identify which column is being filtered",
          "name": "filterChange",
          "params": [],
        },
        {
          "description": "triggers when current row changes",
          "name": "currentChange",
          "params": [],
        },
        {
          "description": "triggers after changing a column's width by dragging the column header's border",
          "name": "headerDragend",
          "params": [],
        },
        {
          "description": "triggers when user expands or collapses a row (for expandable table, second param is expandedRows; for tree Table, second param is expanded)",
          "name": "expandChange",
          "params": [],
        },
        {
          "description": "Invoked after scrolled",
          "name": "scroll",
          "params": [],
        },
      ],
      "exportName": "ElTable",
      "methods": [],
      "name": "ElTable",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "Contents to be inserted after the last row. You may need this slot if you want to implement infinite scroll for the table. This slot will be displayed above the summary row if there is one.",
          "name": "append",
          "params": [],
        },
        {
          "description": "you can customize content when data is empty.",
          "name": "empty",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "type of the column. If set to \`selection\`, the column will display checkbox. If set to \`index\`, the column will display index of the row (staring from 1). If set to \`expand\`, the column will display expand icon",
          "name": "type",
          "options": [
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "selection",
              "value": ""selection"",
            },
            {
              "label": "index",
              "value": ""index"",
            },
            {
              "label": "expand",
              "value": ""expand"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""default"",
              ""selection"",
              ""index"",
              ""expand"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "customize indices for each row, works on columns with \`type=index\`",
          "name": "index",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "params": [
                  {
                    "name": "index",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
                "returnType": {
                  "type": "number",
                },
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "column label",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered",
          "name": "columnKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "field name. You can also use its alias: \`property\`",
          "name": "prop",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": """",
          "description": "column width",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "column minimum width. Columns with \`width\` has a fixed width, while columns with \`min-width\` has a width that is distributed in proportion",
          "name": "minWidth",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether column is fixed at left / right. Will be fixed at left if \`true\`",
          "name": "fixed",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "union",
                "value": [
                  ""left"",
                  ""right"",
                ],
              },
              {
                "type": "boolean",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "render function for table header of this column",
          "name": "renderHeader",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "data",
                "type": {
                  "type": "struct",
                  "value": [
                    {
                      "name": "column",
                      "type": {
                        "type": "any",
                      },
                    },
                    {
                      "name": "$index",
                      "type": {
                        "type": "number",
                      },
                    },
                  ],
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether column can be sorted. Remote sorting can be done by setting this attribute to 'custom' and listening to the \`sort-change\` event of Table",
          "name": "sortable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "boolean",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "sorting method, works when \`sortable\` is \`true\`. Should return a number, just like Array.sort",
          "name": "sortMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "specify which property to sort by, works when \`sortable\` is \`true\` and \`sort-method\` is \`undefined\`. If set to an Array, the column will sequentially sort by the next property if the previous one is equal",
          "name": "sortBy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "row",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "index",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
                "returnType": {
                  "type": "string",
                },
                "type": "function",
              },
              {
                "type": "string",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": "["ascending","descending",null]",
          "description": "the order of the sorting strategies used when sorting the data, works when \`sortable\` is \`true\`. Accepts an array, as the user clicks on the header, the column is sorted in order of the elements in the array",
          "name": "sortOrders",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether column width can be resized, works when \`border\` of \`el-table\` is \`true\`",
          "name": "resizable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that formats cell content",
          "name": "formatter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "row",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "column",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "cellValue",
                    "type": {
                      "type": "any",
                    },
                  },
                  {
                    "name": "index",
                    "type": {
                      "type": "number",
                    },
                  },
                ],
                "returnType": {
                  "type": "any",
                },
                "type": "function",
              },
              {
                "type": "string",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether to hide extra content and show them in a tooltip when hovering on the cell",
          "name": "showOverflowTooltip",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "alignment",
          "name": "align",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""center"",
              ""right"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "alignment of the table header. If omitted, the value of the above \`align\` attribute will be applied",
          "name": "headerAlign",
          "options": [
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "center",
              "value": ""center"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""left"",
              ""center"",
              ""right"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "class name of cells in the column",
          "name": "className",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "class name of the label of this column",
          "name": "labelClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "function that determines if a certain row can be selected, works when \`type\` is 'selection'",
          "name": "selectable",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "row",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "index",
                "type": {
                  "type": "number",
                },
              },
            ],
            "returnType": {
              "type": "boolean",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to reserve selection after data refreshing, works when \`type\` is 'selection'. Note that \`row-key\` is required for this to work",
          "name": "reserveSelection",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "an array of data filtering options. For each element in this array, \`text\` and \`value\` are required",
          "name": "filters",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placement for the filter dropdown",
          "name": "filterPlacement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top-start",
              "value": ""top-start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "left-start",
              "value": ""left-start"",
            },
            {
              "label": "left-end",
              "value": ""left-end"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "right-start",
              "value": ""right-start"",
            },
            {
              "label": "right-end",
              "value": ""right-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top-start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
              ""left"",
              ""left-start"",
              ""left-end"",
              ""right"",
              ""right-start"",
              ""right-end"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "className for the filter dropdown",
          "name": "filterClassName",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether data filtering supports multiple options",
          "name": "filterMultiple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "data filtering method. If \`filter-multiple\` is on, this method will be called multiple times for each row, and a row will display if one of the calls returns \`true\`",
          "name": "filterMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "value",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "row",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "column",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "filter value for selected data, might be useful when table header is rendered with \`render-header\`",
          "name": "filteredValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "string",
            },
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElTableColumn",
      "methods": [],
      "name": "ElTableColumn",
      "slots": [
        {
          "description": "Custom content for table columns",
          "name": "default",
          "params": [],
        },
        {
          "description": "Custom content for table header",
          "name": "header",
          "params": [],
        },
        {
          "description": "Custom content for filter icon",
          "name": "filterIcon",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value, name of the selected tab, the default value is the name of first tab",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "type of Tab",
          "name": "type",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "card",
              "value": ""card"",
            },
            {
              "label": "border-card",
              "value": ""border-card"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""card"",
              ""border-card"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tab is closable",
          "name": "closable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tab is addable",
          "name": "addable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tab is addable and closable",
          "name": "editable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of tabs",
          "name": "tabPosition",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""right"",
              ""bottom"",
              ""left"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether width of tab automatically fits its container",
          "name": "stretch",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function before switching tab. If \`false\` is returned or a \`Promise\` is returned and then is rejected, switching will be prevented",
          "name": "beforeLeave",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "activeName",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "oldActiveName",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
      ],
      "description": "Divide data collections which are related yet belong to different types.",
      "events": [
        {
          "description": "triggers when a tab is clicked",
          "name": "tabClick",
          "params": [],
        },
        {
          "description": "triggers when \`activeName\` is changed",
          "name": "tabChange",
          "params": [],
        },
        {
          "description": "triggers when tab-remove button is clicked",
          "name": "tabRemove",
          "params": [],
        },
        {
          "description": "triggers when tab-add button is clicked",
          "name": "tabAdd",
          "params": [],
        },
        {
          "description": "triggers when tab-add button or tab-remove is clicked",
          "name": "edit",
          "params": [],
        },
      ],
      "exportName": "ElTabs",
      "methods": [],
      "name": "ElTabs",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize add button icon",
          "name": "addIcon",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "title of the tab",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tab is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "identifier corresponding to the name of Tabs, representing the alias of the tab-pane, the default is ordinal number of the tab-pane in the sequence, e.g. the first tab-pane is '0'",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tab is closable",
          "name": "closable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tab is lazily rendered",
          "name": "lazy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElTabPane",
      "methods": [],
      "name": "ElTabPane",
      "slots": [
        {
          "description": "Tab-pane's content",
          "name": "default",
          "params": [],
        },
        {
          "description": "Tab-pane's label",
          "name": "label",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "type of Tag",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""info"",
              ""warning"",
              ""danger"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tag can be removed",
          "name": "closable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to disable animations",
          "name": "disableTransitions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tag has a highlighted border",
          "name": "hit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "background color of the Tag",
          "name": "color",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of Tag",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "theme of Tag",
          "name": "effect",
          "options": [
            {
              "label": "dark",
              "value": ""dark"",
            },
            {
              "label": "light",
              "value": ""light"",
            },
            {
              "label": "plain",
              "value": ""plain"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""dark"",
              ""light"",
              ""plain"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Tag is rounded",
          "name": "round",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "Used for marking and selection.",
      "events": [
        {
          "description": "triggers when Tag is clicked",
          "name": "click",
          "params": [],
        },
        {
          "description": "triggers when Tag is removed",
          "name": "close",
          "params": [],
        },
      ],
      "exportName": "ElTag",
      "methods": [],
      "name": "ElTag",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "false",
          "description": "is checked",
          "name": "checked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether the check-tag is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "type of CheckTag",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""info"",
              ""warning"",
              ""danger"",
            ],
          },
        },
      ],
      "description": undefined,
      "events": [
        {
          "description": "triggers when Check Tag is clicked",
          "name": "change",
          "params": [],
        },
      ],
      "exportName": "ElCheckTag",
      "methods": [],
      "name": "ElCheckTag",
      "slots": [
        {
          "description": "customize default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "text type",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "text size",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "render ellipsis",
          "name": "truncated",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "maximum lines",
          "name": "lineClamp",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom element tag",
          "name": "tag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Used for text.",
      "events": [],
      "exportName": "ElText",
      "methods": [],
      "name": "ElText",
      "slots": [
        {
          "description": "default content",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "binding value, if it is an array, the length should be 2",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "number",
              },
              {
                "type": "string",
              },
              {
                "type": "any",
              },
              {
                "type": "union",
                "value": [
                  {
                    "type": "any",
                  },
                  {
                    "type": "any",
                  },
                  {
                    "type": "any",
                  },
                ],
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether TimePicker is read only",
          "name": "readonly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether TimePicker is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the input is editable",
          "name": "editable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of Input",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "placeholder in non-range mode",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder for the start time in range mode",
          "name": "startPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder for the end time in range mode",
          "name": "endPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to pick a time range",
          "name": "isRange",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to pick time using arrow buttons",
          "name": "arrowControl",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "custom class name for TimePicker's dropdown",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": ""-"",
          "description": "range separator",
          "name": "rangeSeparator",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "format of the displayed value in the input box",
          "name": "format",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "optional, default date of the calendar",
          "name": "defaultValue",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "optional, format of binding value. If not specified, the binding value will be a Date object",
          "name": "valueFormat",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`id\` in native input",
          "name": "id",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "same as \`name\` in native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom prefix icon component",
          "name": "prefixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Custom clear icon component",
          "name": "clearIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "To specify the array of hours that cannot be selected",
          "name": "disabledHours",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "role",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "comparingDate",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "array",
              "value": {
                "type": "number",
              },
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "To specify the array of minutes that cannot be selected",
          "name": "disabledMinutes",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "hour",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "role",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "comparingDate",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "array",
              "value": {
                "type": "number",
              },
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "To specify the array of seconds that cannot be selected",
          "name": "disabledSeconds",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "hour",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "minute",
                "type": {
                  "type": "number",
                },
              },
              {
                "name": "role",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "comparingDate",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "array",
              "value": {
                "type": "number",
              },
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether time-picker dropdown is teleported to the body",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "0",
          "description": "input tabindex",
          "name": "tabindex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "empty values of component, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "emptyValues",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "clear return value, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "valueOnClear",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "params": [],
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\` in native input",
          "name": "label",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Use Time Picker for time input.",
      "events": [
        {
          "description": "triggers when user confirms the value",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when Input blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Input focuses",
          "name": "focus",
          "params": [],
        },
        {
          "description": "triggers when the clear icon is clicked in a clearable TimePicker",
          "name": "clear",
          "params": [],
        },
        {
          "description": "triggers when the TimePicker's dropdown appears/disappears",
          "name": "visibleChange",
          "params": [],
        },
      ],
      "exportName": "ElTimePicker",
      "methods": [],
      "name": "ElTimePicker",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether TimeSelect is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the input is editable",
          "name": "editable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to show clear button",
          "name": "clearable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether \`end\` is included in options",
          "name": "includeEndTime",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "size of Input",
          "name": "size",
          "options": [
            {
              "label": "large",
              "value": ""large"",
            },
            {
              "label": "default",
              "value": ""default"",
            },
            {
              "label": "small",
              "value": ""small"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""large"",
              ""default"",
              ""small"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder in non-range mode",
          "name": "placeholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`name\` in native input",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tooltip theme, built-in theme: \`dark\` / \`light\`",
          "name": "effect",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "union",
                "value": [
                  ""dark"",
                  ""light"",
                ],
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom prefix icon component",
          "name": "prefixIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom clear icon component",
          "name": "clearIcon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "start time",
          "name": "start",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "end time",
          "name": "end",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "time step",
          "name": "step",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "minimum time, any time before this time will be disabled",
          "name": "minTime",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "maximum time, any time after this time will be disabled",
          "name": "maxTime",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "set format of time",
          "name": "format",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "empty values of component, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "emptyValues",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "clear return value, [see config-provider](/en-US/component/config-provider#empty-values-configurations)",
          "name": "valueOnClear",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
              {
                "type": "boolean",
              },
              {
                "params": [],
                "type": "function",
              },
            ],
          },
        },
      ],
      "description": "Use Time Select for time input.",
      "events": [
        {
          "description": "triggers when user confirms the value",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when Input blurs",
          "name": "blur",
          "params": [],
        },
        {
          "description": "triggers when Input focuses",
          "name": "focus",
          "params": [],
        },
        {
          "description": "triggers when the clear icon is clicked in a clearable TimeSelect",
          "name": "clear",
          "params": [],
        },
      ],
      "exportName": "ElTimeSelect",
      "methods": [],
      "name": "ElTimeSelect",
      "slots": [],
    },
    {
      "attrs": [],
      "description": "Visually display timeline.",
      "events": [],
      "exportName": "ElTimeline",
      "methods": [],
      "name": "ElTimeline",
      "slots": [
        {
          "description": "customize default content for timeline",
          "name": "default",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": """",
          "description": "timestamp content",
          "name": "timestamp",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to show timestamp",
          "name": "hideTimestamp",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether vertically centered",
          "name": "center",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of timestamp",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""bottom"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "node type",
          "name": "type",
          "options": [
            {
              "label": "primary",
              "value": ""primary"",
            },
            {
              "label": "success",
              "value": ""success"",
            },
            {
              "label": "warning",
              "value": ""warning"",
            },
            {
              "label": "danger",
              "value": ""danger"",
            },
            {
              "label": "info",
              "value": ""info"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""primary"",
              ""success"",
              ""warning"",
              ""danger"",
              ""info"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "background color of node",
          "name": "color",
          "options": [
            {
              "label": "hsl",
              "value": ""hsl"",
            },
            {
              "label": "hsv",
              "value": ""hsv"",
            },
            {
              "label": "hex",
              "value": ""hex"",
            },
            {
              "label": "rgb",
              "value": ""rgb"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""hsl"",
              ""hsv"",
              ""hex"",
              ""rgb"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "node size",
          "name": "size",
          "options": [
            {
              "label": "normal",
              "value": ""normal"",
            },
            {
              "label": "large",
              "value": ""large"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""normal"",
              ""large"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "icon component",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "icon is hollow",
          "name": "hollow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElTimelineItem",
      "methods": [],
      "name": "ElTimelineItem",
      "slots": [
        {
          "description": "customize default content for timeline item",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize defined node for timeline item",
          "name": "dot",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "which element the tooltip CONTENT appends to",
          "name": "appendTo",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Tooltip theme, built-in theme: \`dark\` / \`light\`",
          "name": "effect",
          "options": [
            {
              "label": "dark",
              "value": ""dark"",
            },
            {
              "label": "light",
              "value": ""light"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""dark"",
              ""light"",
            ],
          },
        },
        {
          "defaultValue": """",
          "description": "display content, can be overridden by \`slot#content\`",
          "name": "content",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether \`content\` is treated as HTML string",
          "name": "rawContent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "position of Tooltip",
          "name": "placement",
          "options": [
            {
              "label": "top",
              "value": ""top"",
            },
            {
              "label": "top-start",
              "value": ""top-start"",
            },
            {
              "label": "top-end",
              "value": ""top-end"",
            },
            {
              "label": "bottom",
              "value": ""bottom"",
            },
            {
              "label": "bottom-start",
              "value": ""bottom-start"",
            },
            {
              "label": "bottom-end",
              "value": ""bottom-end"",
            },
            {
              "label": "left",
              "value": ""left"",
            },
            {
              "label": "left-start",
              "value": ""left-start"",
            },
            {
              "label": "left-end",
              "value": ""left-end"",
            },
            {
              "label": "right",
              "value": ""right"",
            },
            {
              "label": "right-start",
              "value": ""right-start"",
            },
            {
              "label": "right-end",
              "value": ""right-end"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""top"",
              ""top-start"",
              ""top-end"",
              ""bottom"",
              ""bottom-start"",
              ""bottom-end"",
              ""left"",
              ""left-start"",
              ""left-end"",
              ""right"",
              ""right-start"",
              ""right-end"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "list of possible positions for Tooltip [popper.js](https://popper.js.org/docs/v2/modifiers/flip/#fallbackplacements)",
          "name": "fallbackPlacements",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "visibility of Tooltip",
          "name": "visible",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "whether Tooltip is disabled",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "12",
          "description": "offset of the Tooltip",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "animation name",
          "name": "transition",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "{}",
          "description": "[popper.js](https://popper.js.org/docs/v2/) parameters",
          "name": "popperOptions",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "0",
          "description": "delay of appearance, in millisecond",
          "name": "showAfter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the tooltip content has an arrow",
          "name": "showArrow",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "200",
          "description": "delay of disappear, in millisecond",
          "name": "hideAfter",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "0",
          "description": "timeout in milliseconds to hide tooltip",
          "name": "autoClose",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom class name for Tooltip's popper",
          "name": "popperClass",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether the mouse can enter the tooltip",
          "name": "enterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether tooltip content is teleported, if \`true\` it will be teleported to where \`append-to\` sets",
          "name": "teleported",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "How should the tooltip be triggered (to show)",
          "name": "trigger",
          "options": [
            {
              "label": "hover",
              "value": ""hover"",
            },
            {
              "label": "click",
              "value": ""click"",
            },
            {
              "label": "focus",
              "value": ""focus"",
            },
            {
              "label": "contextmenu",
              "value": ""contextmenu"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""hover"",
              ""click"",
              ""focus"",
              ""contextmenu"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Indicates whether virtual triggering is enabled",
          "name": "virtualTriggering",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Indicates the reference element to which the tooltip is attached",
          "name": "virtualRef",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "["Enter","Space"]",
          "description": "When you click the mouse to focus on the trigger element, you can define a set of keyboard codes to control the display of tooltip through the keyboard",
          "name": "triggerKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "when tooltip inactive and \`persistent\` is \`false\` , popconfirm will be destroyed",
          "name": "persistent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "same as \`aria-label\`",
          "name": "ariaLabel",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
      ],
      "description": "Display prompt information for mouse hover.",
      "events": [],
      "exportName": "ElTooltip",
      "methods": [],
      "name": "ElTooltip",
      "slots": [
        {
          "description": "Tooltip triggering & reference element",
          "name": "default",
          "params": [],
        },
        {
          "description": "customize content",
          "name": "content",
          "params": [],
        },
      ],
    },
    {
      "attrs": [],
      "description": "A popup component for guiding users through a product. Use when you want to guide users through a product.",
      "events": [],
      "exportName": "ElTour",
      "methods": [],
      "name": "ElTour",
      "slots": [],
    },
    {
      "attrs": [],
      "description": undefined,
      "events": [],
      "exportName": "ElTourStep",
      "methods": [],
      "name": "ElTourStep",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": "[]",
          "description": "binding value",
          "name": "modelValue",
          "options": [],
          "sync": true,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "[]",
          "description": "data source",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "array",
            "value": {
              "type": "any",
            },
          },
        },
        {
          "defaultValue": "false",
          "description": "whether Transfer is filterable",
          "name": "filterable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "placeholder for the filter input",
          "name": "filterPlaceholder",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom filter method",
          "name": "filterMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "query",
                "type": {
                  "type": "string",
                },
              },
              {
                "name": "item",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "boolean",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "order strategy for elements in the target list. If set to \`original\`, the elements will keep the same order as the data source. If set to \`push\`, the newly added elements will be pushed to the bottom. If set to \`unshift\`, the newly added elements will be inserted on the top",
          "name": "targetOrder",
          "options": [
            {
              "label": "original",
              "value": ""original"",
            },
            {
              "label": "push",
              "value": ""push"",
            },
            {
              "label": "unshift",
              "value": ""unshift"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""original"",
              ""push"",
              ""unshift"",
            ],
          },
        },
        {
          "defaultValue": "[]",
          "description": "custom list titles",
          "name": "titles",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "[]",
          "description": "custom button texts",
          "name": "buttonTexts",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom render function for data items",
          "name": "renderContent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "{}",
          "description": "texts for checking status in list header",
          "name": "format",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "prop aliases for data source",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "[]",
          "description": "key array of initially checked data items of the left list",
          "name": "leftDefaultChecked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "[]",
          "description": "key array of initially checked data items of the right list",
          "name": "rightDefaultChecked",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to trigger form validation",
          "name": "validateEvent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
      ],
      "description": "",
      "events": [
        {
          "description": "triggers when data items change in the right list",
          "name": "change",
          "params": [],
        },
        {
          "description": "triggers when end user changes the checked state of any data item in the left list",
          "name": "leftCheckChange",
          "params": [],
        },
        {
          "description": "triggers when end user changes the checked state of any data item in the right list",
          "name": "rightCheckChange",
          "params": [],
        },
      ],
      "exportName": "ElTransfer",
      "methods": [],
      "name": "ElTransfer",
      "slots": [
        {
          "description": "Custom content for data items. The scope parameter is \`{ option }\`",
          "name": "default",
          "params": [],
        },
        {
          "description": "content of left list footer",
          "name": "leftFooter",
          "params": [],
        },
        {
          "description": "content of right list footer",
          "name": "rightFooter",
          "params": [],
        },
        {
          "description": "content when left panel is empty or when no data matches the filter",
          "name": "leftEmpty",
          "params": [],
        },
        {
          "description": "content when right panel is empty or when no data matches the filter",
          "name": "rightEmpty",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "[]",
          "description": "The cached data of the lazy node, the structure is the same as the data, used to get the label of the unloaded data",
          "name": "cacheData",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": undefined,
      "events": [],
      "exportName": "ElOwn",
      "methods": [],
      "name": "ElOwn",
      "slots": [],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "tree data",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "text displayed when data is void",
          "name": "emptyText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "configuration options, see the following table",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether current node is highlighted",
          "name": "highlightCurrent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to expand or collapse node when clicking on the node, if false, then expand or collapse node only when clicking on the arrow icon.",
          "name": "expandOnClickNode",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to check or uncheck node when clicking on the node, if false, the node can only be checked or unchecked by clicking on the checkbox.",
          "name": "checkOnClickNode",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "array of keys of initially expanded nodes",
          "name": "defaultExpandedKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether node is selectable",
          "name": "showCheckbox",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether checked state of a node not affects its father and child nodes when \`show-checkbox\` is \`true\`",
          "name": "checkStrictly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "array of keys of initially checked nodes",
          "name": "defaultCheckedKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "key of initially selected node",
          "name": "currentNodeKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "this function will be executed on each node when use filter method. if return \`false\`, tree node will be hidden.",
          "name": "filterMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [],
            "type": "function",
          },
        },
        {
          "defaultValue": "16",
          "description": "horizontal indentation of nodes in adjacent levels in pixels",
          "name": "indent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom tree node icon",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "26",
          "description": "custom tree node height",
          "name": "itemSize",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": undefined,
      "events": [
        {
          "description": "triggers when a node is clicked",
          "name": "nodeClick",
          "params": [],
        },
        {
          "description": "triggers when drag someting and drop on a node",
          "name": "nodeDrop",
          "params": [],
        },
        {
          "description": "triggers when a node is clicked by right button",
          "name": "nodeContextmenu",
          "params": [],
        },
        {
          "description": "triggers when the selected state of the node changes",
          "name": "checkChange",
          "params": [],
        },
        {
          "description": "triggers after clicking the checkbox of a node",
          "name": "check",
          "params": [],
        },
        {
          "description": "triggers when current node changes",
          "name": "currentChange",
          "params": [],
        },
        {
          "description": "triggers when current node open",
          "name": "nodeExpand",
          "params": [],
        },
        {
          "description": "triggers when current node close",
          "name": "nodeCollapse",
          "params": [],
        },
      ],
      "exportName": "ElTreeV2",
      "methods": [],
      "name": "ElTreeV2",
      "slots": [
        {
          "description": "Custom content for tree nodes. The scope parameter is \`{ node: TreeNode, data: TreeNodeData }\`",
          "name": "default",
          "params": [],
        },
        {
          "description": "empty you can customize content when data is empty.",
          "name": "empty",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "tree data",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "text displayed when data is void",
          "name": "emptyText",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "unique identity key name for nodes, its value should be unique across the whole tree",
          "name": "nodeKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "configuration options, see the following table",
          "name": "props",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to render child nodes only after a parent node is expanded for the first time",
          "name": "renderAfterExpand",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "method for loading subtree data, only works when \`lazy\` is true",
          "name": "load",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "render function for tree node",
          "name": "renderContent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether current node is highlighted",
          "name": "highlightCurrent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to expand all nodes by default",
          "name": "defaultExpandAll",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to expand or collapse node when clicking on the node, if false, then expand or collapse node only when clicking on the arrow icon.",
          "name": "expandOnClickNode",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to check or uncheck node when clicking on the node, if false, the node can only be checked or unchecked by clicking on the checkbox.",
          "name": "checkOnClickNode",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to expand father node when a child node is expanded",
          "name": "autoExpandParent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "array of keys of initially expanded nodes",
          "name": "defaultExpandedKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether node is selectable",
          "name": "showCheckbox",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether checked state of a node not affects its father and child nodes when \`show-checkbox\` is \`true\`",
          "name": "checkStrictly",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "array of keys of initially checked nodes",
          "name": "defaultCheckedKeys",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "key of initially selected node",
          "name": "currentNodeKey",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "number",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "this function will be executed on each node when use filter method. if return \`false\`, tree node will be hidden.",
          "name": "filterNodeMethod",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether only one node among the same level can be expanded at one time",
          "name": "accordion",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "18",
          "description": "horizontal indentation of nodes in adjacent levels in pixels",
          "name": "indent",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "custom tree node icon component",
          "name": "icon",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to lazy load leaf node, used with \`load\` attribute",
          "name": "lazy",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether enable tree nodes drag and drop",
          "name": "draggable",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "this function will be executed before dragging a node. If \`false\` is returned, the node can not be dragged",
          "name": "allowDrag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "this function will be executed before the dragging node is dropped. If \`false\` is returned, the dragging node can not be dropped at the target node. \`type\` has three possible values: 'prev' (inserting the dragging node before the target node), 'inner' (inserting the dragging node to the target node) and 'next' (inserting the dragging node after the target node)",
          "name": "allowDrop",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "Display a set of data with hierarchies.",
      "events": [
        {
          "description": "triggers when a node is clicked",
          "name": "nodeClick",
          "params": [],
        },
        {
          "description": "triggers when a node is clicked by right button",
          "name": "nodeContextmenu",
          "params": [],
        },
        {
          "description": "triggers when the selected state of the node changes",
          "name": "checkChange",
          "params": [],
        },
        {
          "description": "triggers after clicking the checkbox of a node",
          "name": "check",
          "params": [],
        },
        {
          "description": "triggers when current node changes",
          "name": "currentChange",
          "params": [],
        },
        {
          "description": "triggers when current node open",
          "name": "nodeExpand",
          "params": [],
        },
        {
          "description": "triggers when current node close",
          "name": "nodeCollapse",
          "params": [],
        },
        {
          "description": "triggers when dragging starts",
          "name": "nodeDragStart",
          "params": [],
        },
        {
          "description": "triggers when the dragging node enters another node",
          "name": "nodeDragEnter",
          "params": [],
        },
        {
          "description": "triggers when the dragging node leaves a node",
          "name": "nodeDragLeave",
          "params": [],
        },
        {
          "description": "triggers when dragging over a node (like mouseover event)",
          "name": "nodeDragOver",
          "params": [],
        },
        {
          "description": "triggers when dragging ends",
          "name": "nodeDragEnd",
          "params": [],
        },
        {
          "description": "triggers after the dragging node is dropped",
          "name": "nodeDrop",
          "params": [],
        },
      ],
      "exportName": "ElTree",
      "methods": [],
      "name": "ElTree",
      "slots": [
        {
          "description": "Custom content for tree nodes. The scope parameter is \`{ node, data }\`",
          "name": "default",
          "params": [],
        },
        {
          "description": "empty you can customize content when data is empty.",
          "name": "empty",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": undefined,
          "description": "request URL.",
          "name": "action",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "request headers.",
          "name": "headers",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "set upload request method.",
          "name": "method",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether uploading multiple files is permitted.",
          "name": "multiple",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "{}",
          "description": "additions options of request. support \`Awaitable\` data and \`Function\` since v2.3.13.",
          "name": "data",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "any",
              },
              {
                "type": "any",
              },
              {
                "params": [
                  {
                    "name": "rawFile",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
                "returnType": {
                  "type": "any",
                },
                "type": "function",
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "key name for uploaded file.",
          "name": "name",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether cookies are sent.",
          "name": "withCredentials",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to show the uploaded file list.",
          "name": "showFileList",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to activate drag and drop mode.",
          "name": "drag",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": """",
          "description": "accepted [file types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept), will not work when \`thumbnail-mode === true\`.",
          "name": "accept",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "native attribute [crossorigin](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin).",
          "name": "crossorigin",
          "options": [
            {
              "label": "",
              "value": """",
            },
            {
              "label": "anonymous",
              "value": ""anonymous"",
            },
            {
              "label": "use-credentials",
              "value": ""use-credentials"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              """",
              ""anonymous"",
              ""use-credentials"",
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function when clicking the uploaded files.",
          "name": "onPreview",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "uploadFile",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function when files are removed.",
          "name": "onRemove",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "uploadFile",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFiles",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function when uploaded successfully.",
          "name": "onSuccess",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "response",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFile",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFiles",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function when some errors occurs.",
          "name": "onError",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "error",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFile",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFiles",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function when some progress occurs.",
          "name": "onProgress",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "evt",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFile",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFiles",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function when select file or upload file success or upload file fail.",
          "name": "onChange",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "uploadFile",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFiles",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function when limit is exceeded.",
          "name": "onExceed",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "files",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "any",
                  },
                },
              },
              {
                "name": "uploadFiles",
                "type": {
                  "type": "array",
                  "value": {
                    "type": "any",
                  },
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function before uploading with the file to be uploaded as its parameter. If \`false\` is returned or a \`Promise\` is returned and then is rejected, uploading will be aborted.",
          "name": "beforeUpload",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "rawFile",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": undefined,
          "description": "hook function before removing a file with the file and file list as its parameters. If \`false\` is returned or a \`Promise\` is returned and then is rejected, removing will be aborted.",
          "name": "beforeRemove",
          "options": [],
          "sync": undefined,
          "type": {
            "params": [
              {
                "name": "uploadFile",
                "type": {
                  "type": "any",
                },
              },
              {
                "name": "uploadFiles",
                "type": {
                  "type": "any",
                },
              },
            ],
            "returnType": {
              "type": "any",
            },
            "type": "function",
          },
        },
        {
          "defaultValue": "[]",
          "description": "default uploaded files.",
          "name": "fileList",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "type of file list.",
          "name": "listType",
          "options": [
            {
              "label": "text",
              "value": ""text"",
            },
            {
              "label": "picture",
              "value": ""picture"",
            },
            {
              "label": "picture-card",
              "value": ""picture-card"",
            },
          ],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              ""text"",
              ""picture"",
              ""picture-card"",
            ],
          },
        },
        {
          "defaultValue": "true",
          "description": "whether to auto upload file.",
          "name": "autoUpload",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "override default xhr behavior, allowing you to implement your own upload-file's request.",
          "name": "httpRequest",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "params": [
                  {
                    "name": "options",
                    "type": {
                      "type": "any",
                    },
                  },
                ],
                "returnType": {
                  "type": "any",
                },
                "type": "function",
              },
              {
                "type": "any",
              },
            ],
          },
        },
        {
          "defaultValue": "false",
          "description": "whether to disable upload.",
          "name": "disabled",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "boolean",
          },
        },
        {
          "defaultValue": undefined,
          "description": "maximum number of uploads allowed.",
          "name": "limit",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
      ],
      "description": "Upload files by clicking or drag-and-drop.",
      "events": [],
      "exportName": "ElUpload",
      "methods": [],
      "name": "ElUpload",
      "slots": [
        {
          "description": "customize default content.",
          "name": "default",
          "params": [],
        },
        {
          "description": "content which triggers file dialog.",
          "name": "trigger",
          "params": [],
        },
        {
          "description": "content of tips.",
          "name": "tip",
          "params": [],
        },
        {
          "description": "content of thumbnail template.",
          "name": "file",
          "params": [],
        },
      ],
    },
    {
      "attrs": [
        {
          "defaultValue": "120",
          "description": "The width of the watermark, the default value of \`content\` is its own width",
          "name": "width",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "64",
          "description": "The height of the watermark, the default value of \`content\` is its own height",
          "name": "height",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "-22",
          "description": "When the watermark is drawn, the rotation Angle, unit \`°\`",
          "name": "rotate",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": "9",
          "description": "The z-index of the appended watermark element",
          "name": "zIndex",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "number",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Image source, it is recommended to export 2x or 3x image, high priority",
          "name": "image",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "string",
          },
        },
        {
          "defaultValue": undefined,
          "description": "Watermark text content",
          "name": "content",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "union",
            "value": [
              {
                "type": "string",
              },
              {
                "type": "array",
                "value": {
                  "type": "string",
                },
              },
            ],
          },
        },
        {
          "defaultValue": undefined,
          "description": "Text style",
          "name": "font",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The spacing between watermarks",
          "name": "gap",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
        {
          "defaultValue": undefined,
          "description": "The offset of the watermark from the upper left corner of the container. The default is \`gap/2\`",
          "name": "offset",
          "options": [],
          "sync": undefined,
          "type": {
            "type": "any",
          },
        },
      ],
      "description": "Add specific text or patterns to the page.",
      "events": [],
      "exportName": "ElWatermark",
      "methods": [],
      "name": "ElWatermark",
      "slots": [
        {
          "description": "container for adding watermark",
          "name": "default",
          "params": [],
        },
      ],
    },
  ],
  "description": "A Component Library for Vue 3",
  "framework": "vue3",
  "frameworkVersion": "3.2.0",
  "name": "element-plus",
  "version": "2.9.3",
}
`;
